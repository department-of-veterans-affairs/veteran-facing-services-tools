{"version":3,"sources":["webpack:///./src/components/sidebar/SidebarItems.jsx","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./src/layouts/SidebarLayout.jsx","webpack:///./src/pages/getting-started/common-tasks/debugging-tests.mdx"],"names":["ComponentList","query","render","data","SidebarItems","items","components","edges","map","comp","href","node","path","name","context","SidebarItem","item","key","to","isSublist","length","className","Sidebar","location","sidebarSection","sidebarData","sections","find","section","pathname","includes","SidebarLayout","children","Layout","id","layoutProps","MDXContent","props","layout","DefaultLayout","this","Object","assign","parentName","React","Component","_frontmatter"],"mappings":"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","file":"component---src-pages-getting-started-common-tasks-debugging-tests-mdx-1dd13ef492c3ba505e51.js","sourcesContent":["import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nfunction ComponentList() {\n  return (\n    <StaticQuery\n      query={graphql`\n        query ComponentListQuery {\n          components: allSitePage(\n            filter: { context: { source: { eq: \"component\" } } }\n          ) {\n            edges {\n              node {\n                path\n                context {\n                  source\n                  name\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <SidebarItems\n          items={data.components.edges.map(comp => ({\n            href: comp.node.path,\n            name: comp.node.context.name,\n          }))}\n        />\n      )}\n    />\n  );\n}\n\nfunction SidebarItem({ item }) {\n  if (item.href) {\n    return (\n      <li key={item.name}>\n        <Link to={item.href}>{item.name}</Link>\n      </li>\n    );\n  }\n  return <li key={item.name}>{item.name} (future)</li>;\n}\nexport default function SidebarItems({ items, isSublist = false }) {\n  if (!items.length) {\n    return null;\n  }\n\n  return (\n    <ul className=\"site-c-sidenav-list\">\n      {items.map(item => {\n        if (item.items) {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <SidebarItems isSublist items={item.items} />\n            </li>\n          );\n        }\n        if (item.query === 'componentList') {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <ComponentList />\n            </li>\n          );\n        }\n        return <SidebarItem item={item} key={item.name} />;\n      })}\n    </ul>\n  );\n}\n","import React from 'react';\nimport SidebarItems from './SidebarItems';\nimport sidebarData from '../../sidebar';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nexport default function Sidebar({ location }) {\n  const sidebarSection = sidebarData.sections.find(section =>\n    location.pathname.includes(section.href),\n  );\n\n  if (!sidebarSection) {\n    return null;\n  }\n\n  return (\n    <div className=\"vads-l-col--4 site-c-content__nav\">\n      <div className=\"site-c-sidenav\">\n        <SidebarItems items={sidebarSection.items} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Layout from './Layout';\nimport Sidebar from '../components/sidebar/Sidebar';\n\n/**\n * Layout\n *\n * @class Layout\n * @extends {React.Component}\n */\nexport default function SidebarLayout({ children, location }) {\n  return (\n    <Layout location={location}>\n      <div className=\"vads-l-row\">\n        <Sidebar location={location} />\n        <div\n          id=\"main-content\"\n          className=\"vads-l-col--8 site-c-content__content docSearch-content\"\n        >\n          {children}\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nSidebarLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport DefaultLayout from \"/home/jenkins/workspace/ran-facing-services-tools_master/packages/documentation/src/layouts/SidebarLayout.jsx\";\nconst layoutProps = {};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = DefaultLayout;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" Layout={this.layout} layoutProps={Object.assign({}, layoutProps, props)} components={components}>\n\n      <h1 id=\"debugging-tests\">Debugging tests</h1>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\"><MDXTag name=\"em\" components={components} parentName=\"strong\">{` Unit Tests `}</MDXTag></MDXTag></MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">\n          <MDXTag name=\"p\" components={components} parentName=\"li\">{`You can put a console.log in your test code. When you run the test, the output will be in the command line.`}</MDXTag>\n        </MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">\n          <MDXTag name=\"p\" components={components} parentName=\"li\">{`Use Chrome devtools to debug unit tests`}</MDXTag>\n          <MDXTag name=\"ol\" components={components} parentName=\"li\">\n            <MDXTag name=\"li\" components={components} parentName=\"ol\">\n              <MDXTag name=\"p\" components={components} parentName=\"li\">{`Go to `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n                  \"href\": \"chrome://inspect/\"\n                }}>{`chrome://inspect/`}</MDXTag>{`.`}</MDXTag>\n            </MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ol\">\n              <MDXTag name=\"p\" components={components} parentName=\"li\">{`Add a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`debugger`}</MDXTag>{` statement in your test code and if you want to run only your test add the `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`.only`}</MDXTag>{` on your test like so. Make sure to remove the `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`.only`}</MDXTag>{` once you are done.`}</MDXTag>\n              <MDXTag name=\"pre\" components={components} parentName=\"li\"><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`  it.only('testing something', () => {\n    debugger\n\n    expect(value).to.eq(true);\n  })\n`}</MDXTag></MDXTag>\n            </MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ol\">\n              <MDXTag name=\"p\" components={components} parentName=\"li\">{`run in the terminal`}</MDXTag>\n              <MDXTag name=\"pre\" components={components} parentName=\"li\"><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`  \\$ BABEL_ENV=test node_modules/.bin/mocha --inspect-brk --opts src/platform/testing/unit/mocha.opts --recursive '{test,src}/**/*.unit.spec.js?(x)' src/platform/testing/unit/helper.js\n`}</MDXTag></MDXTag>\n            </MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ol\">\n              <MDXTag name=\"p\" components={components} parentName=\"li\">{`Go to your Node Chrome Developer Tools. Under `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Remote Target`}</MDXTag>{` you should see your test running. Click on the link where your test is running to open the debugger tool.`}</MDXTag>\n            </MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ol\">\n              <MDXTag name=\"p\" components={components} parentName=\"li\">{`You will want to press the debugger play button to start the program. It will initially pause on the first line of code.`}</MDXTag>\n            </MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ol\">\n              <MDXTag name=\"p\" components={components} parentName=\"li\">{`It might take awhile for the tests to setup, just be patient and eventually it will run.`}</MDXTag>\n            </MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ol\">\n              <MDXTag name=\"p\" components={components} parentName=\"li\">{`Once the test runs, your code should break at your debugger statement.`}</MDXTag>\n            </MDXTag>\n          </MDXTag>\n        </MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">\n          <MDXTag name=\"p\" components={components} parentName=\"li\">{`VSCode's debugging tool for unit tests`}</MDXTag>\n          <MDXTag name=\"ul\" components={components} parentName=\"li\">\n            <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Add this `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Mocha Tests`}</MDXTag>{` configuration to your `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`.vscode/launch.json`}</MDXTag>{` file`}<MDXTag name=\"pre\" components={components} parentName=\"li\"><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`  {\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"type\": \"node\",\n            \"request\": \"launch\",\n            \"name\": \"Mocha Tests\",\n            \"env\": {\"BABEL_ENV\": \"test\"},\n            \"runtimeExecutable\": \"\\${workspaceFolder}/node_modules/.bin/mocha\",\n            \"runtimeArgs\": [\n                \"--inspect\",\n                \"--opts\",\n                \"\\${workspaceFolder}/src/platform/testing/unit/mocha.opts\",\n                \"--recursive\",\n                \"\\${workspaceFolder}/{test,src}/**/*.unit.spec.js?(x)\",\n                \"\\${workspaceFolder}/src/platform/testing/unit/helper.js\"\n            ],\n            \"port\": 9229\n        }\n    ]\n  }\n`}</MDXTag></MDXTag></MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Now you can add breakpoints or debugger statements to debug your code through the VSCode debugger tools.`}</MDXTag>\n          </MDXTag>\n        </MDXTag>\n      </MDXTag>\n      <MDXTag name=\"p\" components={components}>{`*** End to End tests`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">\n          <MDXTag name=\"p\" components={components} parentName=\"li\">{`It's possible to set an infinite pause (`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`.pause()`}</MDXTag>{`) in the test code and then see what's happening at a given point in the browser where the test is running.`}</MDXTag>\n          <MDXTag name=\"pre\" components={components} parentName=\"li\"><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`  client\n    .openUrl('http://localhost:3000')\n    .waitForElementVisible('body', Timeouts.normal)\n    .pause()\n    .click('.submit_button')\n`}</MDXTag></MDXTag>\n        </MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">\n          <MDXTag name=\"p\" components={components} parentName=\"li\">{`Using Node Chrome DevTools. You can add a (`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`.perform`}</MDXTag>{`) method and either console.log or add a debugger statement to debug your code in the callback function.`}</MDXTag>\n          <MDXTag name=\"ol\" components={components} parentName=\"li\">\n            <MDXTag name=\"li\" components={components} parentName=\"ol\">\n              <MDXTag name=\"p\" components={components} parentName=\"li\">{`add a perform method in your code.`}</MDXTag>\n              <MDXTag name=\"pre\" components={components} parentName=\"li\"><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`client\n  .openUrl('http://localhost:3000')\n  .waitForElementVisible('body', Timeouts.normal)\n  .perform(() => {\n    console.log(testData);\n\n    debugger\n  })\n  .click('.submit_button')\n`}</MDXTag></MDXTag>\n            </MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ol\">\n              <MDXTag name=\"p\" components={components} parentName=\"li\">{`open up `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n                  \"href\": \"chrome://inspect\"\n                }}>{`chrome://inspect`}</MDXTag>{` in your browser.`}</MDXTag>\n            </MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ol\">\n              <MDXTag name=\"p\" components={components} parentName=\"li\">{`In your terminal run. You can pass in a specific file path to test after the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`nightwatch.js`}</MDXTag>{` or leave it blank to run all tests.`}</MDXTag>\n              <MDXTag name=\"pre\" components={components} parentName=\"li\"><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`\\$ BABEL_ENV=test WEB_PORT=3001 node --inspect-brk node_modules/nightwatch/bin/runner.js -c config/nightwatch.js [optional file to test]\n`}</MDXTag></MDXTag>\n            </MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ol\">\n              <MDXTag name=\"p\" components={components} parentName=\"li\">{`Go to your Node Chrome Developer Tools. Under `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Remote Target`}</MDXTag>{` you should see your test running. Click on the link where your test is running to open the debugger tool.`}</MDXTag>\n            </MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ol\">\n              <MDXTag name=\"p\" components={components} parentName=\"li\">{`You will want to press the debugger play button to start the program. It will initially pause on the first line of code.`}</MDXTag>\n            </MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ol\">\n              <MDXTag name=\"p\" components={components} parentName=\"li\">{`after the program starts it should pause at your debugger statement or you should see your console.logs in the console.`}</MDXTag>\n            </MDXTag>\n          </MDXTag>\n        </MDXTag>\n      </MDXTag>\n           </MDXTag>;\n  }\n\n}\nexport const _frontmatter = {};\n    "],"sourceRoot":""}