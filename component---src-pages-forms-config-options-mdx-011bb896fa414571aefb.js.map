{"version":3,"sources":["webpack:///./src/components/EditLink.jsx","webpack:///./src/layouts/SidebarLayout.jsx","webpack:///./src/components/sidebar/SidebarItems.jsx","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./src/pages/forms/config-options.mdx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["EditLink","sourceUrl","class","aria-hidden","href","SidebarLayout","children","location","pageContext","Layout","className","Sidebar","id","SidebarItem","item","key","name","to","SidebarItems","items","isSublist","length","map","sidebarSection","sidebarData","sections","find","section","pathname","includes","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","_objectWithoutPropertiesLoose","source","excluded","i","target","sourceKeys","Object","keys","indexOf"],"mappings":"qKAEe,SAASA,EAAT,GAAkC,IAAdC,EAAa,EAAbA,UACjC,OAAOA,EACL,6BACE,uBAAGC,MAAM,aAAaC,cAAY,SAAU,IAC5C,uBAAGC,KAAMH,GAAT,6BAEA,K,gBCKS,SAASI,EAAT,GAA6D,IAApCC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YAC1D,OACE,kBAACC,EAAA,EAAD,CAAQF,SAAUA,GAChB,yBAAKG,UAAU,6BACb,kBAACC,EAAA,EAAD,CAASJ,SAAUA,IACnB,yBACEK,GAAG,eACHF,UAAU,2DAETJ,EACD,kBAACN,EAAD,CAAUC,UAAWO,EAAYP,iB,yGCd3C,SAASY,EAAT,GAAgC,IAATC,EAAQ,EAARA,KACrB,OAAIA,EAAKV,KAEL,wBAAIW,IAAKD,EAAKE,MACZ,kBAAC,OAAD,CAAMC,GAAIH,EAAKV,MAAOU,EAAKE,OAI1B,wBAAID,IAAKD,EAAKE,MAAOF,EAAKE,KAA1B,aAGM,SAASE,EAAT,GAAqD,IAA7BC,EAA4B,EAA5BA,MAA4B,IAArBC,iBAAqB,SACjE,OAAKD,EAAME,OAKT,wBAAIX,UAAU,uBACXS,EAAMG,KAAI,SAAAR,GACT,OAAIA,EAAKK,MAEL,wBAAIJ,IAAKD,EAAKE,MACXI,GAAa,kBAACP,EAAD,CAAaC,KAAMA,KAC/BM,GAAa,wBAAIV,UAAU,mBAAmBI,EAAKE,MACrD,kBAACE,EAAD,CAAcE,WAAS,EAACD,MAAOL,EAAKK,SAInC,kBAACN,EAAD,CAAaC,KAAMA,EAAMC,IAAKD,EAAKE,WAfvC,K,yBCZI,SAASL,EAAT,GAAgC,IAAbJ,EAAY,EAAZA,SAC1BgB,EAAiBC,IAAYC,SAASC,MAAK,SAAAC,GAAO,OACtDpB,EAASqB,SAASC,SAASF,EAAQvB,SAGrC,OAAKmB,EAKH,yBAAKb,UAAU,qCACb,yBAAKA,UAAU,kBACb,kBAACQ,EAAD,CAAcC,MAAOI,EAAeJ,UANjC,O,mMCREW,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,iBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,kBACE,GAAM,uBADR,uBAGA,uBAAK,oBAAMC,WAAW,MAClB,UAAa,eADZ,6wTA4PL,qBAAG,iBAAGA,WAAW,IACb,KAAQ,wEADT,2CAOPJ,EAAWK,gBAAiB,G,kCC1Rb,SAASC,EAA8BC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEI1B,EAAK4B,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKN,GAG7B,IAAKE,EAAI,EAAGA,EAAIE,EAAWxB,OAAQsB,IACjC5B,EAAM8B,EAAWF,GACbD,EAASM,QAAQjC,IAAQ,IAC7B6B,EAAO7B,GAAO0B,EAAO1B,IAGvB,OAAO6B,EAZT","file":"component---src-pages-forms-config-options-mdx-011bb896fa414571aefb.js","sourcesContent":["import React from 'react';\n\nexport default function EditLink({ sourceUrl }) {\n  return sourceUrl ? (\n    <div>\n      <i class=\"fa fa-edit\" aria-hidden=\"true\" />{' '}\n      <a href={sourceUrl}>Edit this page on GitHub</a>\n    </div>\n  ) : null;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Sidebar from '../components/sidebar/Sidebar';\nimport EditLink from '../components/EditLink';\nimport Layout from './Layout';\n\n/**\n * SidebarLayout\n *\n * @class SidebarLayout\n * @extends {React.Component}\n */\nexport default function SidebarLayout({ children, location, pageContext }) {\n  return (\n    <Layout location={location}>\n      <div className=\"vads-l-row site-l-wrapper\">\n        <Sidebar location={location} />\n        <div\n          id=\"main-content\"\n          className=\"vads-l-col--8 site-c-content__content docSearch-content\"\n        >\n          {children}\n          <EditLink sourceUrl={pageContext.sourceUrl} />\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nSidebarLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport { Link } from 'gatsby';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nfunction SidebarItem({ item }) {\n  if (item.href) {\n    return (\n      <li key={item.name}>\n        <Link to={item.href}>{item.name}</Link>\n      </li>\n    );\n  }\n  return <li key={item.name}>{item.name} (future)</li>;\n}\n\nexport default function SidebarItems({ items, isSublist = false }) {\n  if (!items.length) {\n    return null;\n  }\n\n  return (\n    <ul className=\"site-c-sidenav-list\">\n      {items.map(item => {\n        if (item.items) {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <SidebarItems isSublist items={item.items} />\n            </li>\n          );\n        }\n        return <SidebarItem item={item} key={item.name} />;\n      })}\n    </ul>\n  );\n}\n","import React from 'react';\nimport SidebarItems from './SidebarItems';\nimport sidebarData from '../../sidebar';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nexport default function Sidebar({ location }) {\n  const sidebarSection = sidebarData.sections.find(section =>\n    location.pathname.includes(section.href),\n  );\n\n  if (!sidebarSection) {\n    return null;\n  }\n\n  return (\n    <div className=\"vads-l-col--4 site-c-content__nav\">\n      <div className=\"site-c-sidenav\">\n        <SidebarItems items={sidebarSection.items} />\n      </div>\n    </div>\n  );\n}\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/jenkins/workspace/ran-facing-services-tools_master/packages/documentation/src/layouts/SidebarLayout.jsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"form-config-options\"\n    }}>{`Form config options`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const formConfig = {\n  // Prefix string to add to the path for each page.\n  urlPrefix: '',\n\n  // The introduction page component. To exclude an introduction page, remove\n  // this component.\n  introduction: IntroductionComponent,\n\n  // The confirmation page component that will render after the user\n  // successfully submits the form.\n  confirmation: ConfirmationComponent,\n\n  // The prefix for Google Analytics events that are sent for different form\n  // actions.\n  trackingPrefix: '',\n\n  // The title of the form, rendered on all pages. Accepts a string or function\n  // params include (currentLocation, formConfig, formData, children)\n  title: '', // ({ formData }) => formData.needsNewTitle ? 'Alternate' : 'Form',\n\n  // The subtitle of the form, usually the form number. The subtitle is rendered\n  // on all pages when there's also a title.\n  subTitle: '',\n\n  // Schema definitions that can be referenced on any page. These are added to\n  // each page's schema in the reducer code, so that you don't have to put all\n  // of the common fields in the definitions property in each page schema. For\n  // more information on definitions, see schema.definitions below.\n  defaultDefinitions: {},\n\n  // When a user begins completing a pre-filled form, this function is called\n  // after data migrations are run for pre-filled data in order to make\n  // necessary updates to the data or form schema ahead of time.\n  prefillTransformer: (pages, formData, metadata ) => { pages, formData, metadata },\n\n  // An array of functions that are applied during a form's lifecycle\n  // The number of migration functions should be equal to the version\n  migrations: [],\n\n  // Indicates the version of a form, this should be increased when a migration is required\n  version: 0,\n\n\n  // The following are properties used during form submission\n  //\n  // Path to vets-api controller for form submission\n  submitUrl: \\`\\${environment.API_URL}/v0/health_care_applications\\`,\n\n  // Function that is called upon form submission\n  submit:  (form, formConfig) => {},\n\n  // Called during form submission to transform submitted schema data\n  // Calling transformForSubmit in platform/forms-system/src/js/helpers will remove view fields from the schema data\n  transformForSubmit: (formConfig, form) => {},\n\n  // Component used as part of the default error message if submission of the form fails\n  errorText: '',\n\n  // Component that replaces the default error message component if submission of the form fails\n  submissionError: ({ form }) => {},\n\n\n  // The following properties are typically passed into a SaveInProgressIntro component in the form's introduction container\n  // <SaveInProgressIntro\n  //    prefillEnabled={props.route.formConfig.prefillEnabled}\n  //    messages={props.route.formConfig.savedFormMessages}\n  //    verifyRequiredPrefill={props.route.formConfig.verifyRequiredPrefill}\n  //    downtime={this.props.route.formConfig.downtime}\n  //>\n  savedFormMessages: {\n    notFound: errorMessages.savedFormNotFound,\n    noAuth: errorMessages.savedFormNoAuth,\n  },\n\n  // Defaults to WIZARD_STATUS in 'platform/site-wide/wizard'. Added\n  // here if your form uses a unique sessionStorage key (currently only used by\n  // the save-in-progress component)\n  wizardStorageKey: 'wizardStatus',\n\n  // Legacy SiP configuration such as savedFormMessages will be moved into saveInProgress.\n  // All new SiP configuration will go here.\n  saveInProgress: {\n    // These messages will be displayed as-is when appropriate.\n    // The following are examples from the education benefit form 22-1995\n    messages: {\n      inProgress:\n        'Your education benefits application (22-1995) is in progress.',\n      expired:\n        'Your saved education benefits application (22-1995) has expired. If you want to apply for education benefits, please start a new application.',\n      saved: 'Your education benefits application has been saved.',\n    },\n    // *** Form restart-specific options ***\n    // This callback is _only_ called by the RoutedSavableApp, so if the wizard\n    // is being rendered by the outer form App file, this callback won't work\n    // If the wizard is being rendered within the Intro page (like 0996 HLR),\n    // then have the function return a destination route ('/' is the\n    // introduction page)\n    restartFormCallback: state => '/',\n  },\n  prefillEnabled: false,\n  downtime: {\n    requiredForPrefill: true,\n    dependencies: [services.evss, services.emis, services.mvi, services.vet360],\n    message: DowntimeMessage,\n  },\n  verifyRequiredPrefill: false,\n\n\n  // Additional information to be displayed on the Review page\n  // See platform/forms/preSubmitInfo for standard object\n  preSubmitInfo: {},\n\n  // Content to be displayed at bottom of a form, see platform/forms/components/FormFooter for standard object\n  footerContent: FormFooter,\n\n  // Component that is displayed as part of standard footerContent property\n  getHelp: GetHelpComponent,\n\n  // Function called during the loading of a form\n  onFormLoaded: ({formData, savedForms, returnUrl, formConfig, router }) => {},\n\n  // Component displayed when a form has been saved\n  // If not provided platform/forms/save-in-progress/FormSaved.jsx is used instead\n  formSavedPage: FormSaved,\n\n  // Provides additional routes that are not found within the page lists\n  // introduction and review-and-submit pages are added in automatically\n  additionalRoutes: [\n    {\n      path: 'additional-route',\n      component: AdditionalComponent,\n      pageKey: 'additional-route',\n      depends: () => {},\n    },\n  ],\n\n  // Functions and string properties used in platform/forms/components/AuthorizationComponent.jsx for form 686\n  authorize: () => {},\n  getAuthorizationState: () => {},\n  authorizationMessage: '',\n\n  // Custom text values that will be used through out a form\n  customText: {\n    reviewPageTitle: 'Review order details',\n    appSavedSuccessfullyMessage: 'Order has been saved.',\n    startNewAppButtonText: 'Start a new order',\n    continueAppButtonText: 'Continue your order',\n    finishAppLaterMessage: 'Finish this order later.',\n    appType: 'order',\n    appAction: 'placing your order',\n  },\n\n  // The object that contains the configuration for each chapter.\n  chapters: {\n    // Each property is the key for a chapter.\n    chapterOne: {\n      // The title of the chapter.\n      title: '',\n\n      // The object that contains the pages in each chapter.\n      pages: {\n        // Each property is the key for a page, and should be unique across\n        // chapters.\n        pageOne: {\n          // The URL for the page.\n          path: 'some-path',\n\n          // The title of the page that renders on the review page.\n          title: '',\n          // \\`title\\` can also be a function that receives the current data as a\n          // parameter:\n          title: formData => \\`A title for \\${formData.thing}\\`,\n\n          // Any initial data that should be set for the form.\n          initialData: {\n            field1: 'Default string'\n          },\n\n          // Specifies that a page will turn its schema into a page for each\n          // item in an array, such as an array of children with a page for each\n          // child. The schema/uiSchema for this type of page should be built as\n          // usual for an array field.\n          showPagePerItem: true,\n          // The path to the array.\n          arrayPath: 'children',\n          // Items in the array that should not have a page.\n          itemFilter: () => true,\n          // You must specify a path with an :index parameter.\n          path: 'some-path/:index',\n\n          // The JSON schema object for the page, following the JSON Schema\n          // format.\n          schema: {\n            type: 'object',\n            // A schema's properties refer to definitions. For example:\n            // \"homePhone\": { \"$ref\": \"#/definitions/phone\" } In the\n            // configuration file, the definition for \\`phone\\` must be added into\n            // definitions in order to be parsed correctly and added to\n            // \\`homePhone\\`.\n            definitions: {},\n            properties: {\n              field1: {\n                type: 'string'\n              },\n              // Fields of type \\`string\\`, \\`boolean\\`, \\`number\\`, and \\`array\\` that\n              // begin with \\`view:\\` are excluded from data that's sent to the\n              // server. Instead, their children are merged into the parent\n              // object and sent to the server. Use these to exclude fields from\n              // being sent to the server, such as a question that's only used\n              // to reveal other questions, or to group related questions\n              // together to be conditionally revealed that aren't in an object\n              // in the schema.\n              'view:field2': {\n                type: 'string'\n              },\n              'view:artificialGroup': {\n                type: 'object',\n                properties: {\n                  // \\`view:artificialGroup\\` is flattened. \\`subField1\\` and\n                  // \\`subField2\\` are siblings of \\`field1\\` when sent to the API.\n                  subField1: {\n                    type: 'string'\n                  },\n                  subField2: {\n                    type: 'boolean'\n                  }\n                }\n              }\n            }\n          },\n\n          // See \"About the \\`schema\\` and \\`uiSchema\\` objects\" below.\n          uiSchema: {\n            'ui:title': 'My form',\n            field1: {\n              'ui:title': 'My field'\n            }\n          }\n        }\n      }\n    }\n  },\n\n  // Deprecated properties still in use in applications/disability-benefits/all-claims/config/form.js\n  intentToFileUrl,\n  submitErrorText,\n}\n\nexport default formConfig\n`}</code></pre>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/veteran-facing-services-tools/about-the-schema-and-uischema-objects\"\n      }}>{`About the schema and uiSchema objects`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}