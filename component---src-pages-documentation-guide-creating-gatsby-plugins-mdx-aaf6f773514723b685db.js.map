{"version":3,"sources":["webpack:///./src/components/sidebar/SidebarItems.jsx","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./src/components/EditLink.jsx","webpack:///./src/layouts/SidebarLayout.jsx","webpack:///./src/pages/documentation-guide/creating-gatsby-plugins.mdx"],"names":["ComponentList","query","render","data","SidebarItems","items","components","edges","map","comp","href","node","path","name","context","SidebarItem","item","key","to","isSublist","length","className","Sidebar","location","sidebarSection","sidebarData","sections","find","section","pathname","includes","EditLink","sourceUrl","class","aria-hidden","SidebarLayout","children","pageContext","Layout","id","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","props","mdxType","parentName","isMDXComponent"],"mappings":"oKASA,SAASA,IACP,OACE,kBAAC,cAAD,CACEC,MAAK,WAkBLC,OAAQ,SAAAC,GAAI,OACV,kBAACC,EAAD,CACEC,MAAOF,EAAKG,WAAWC,MAAMC,KAAI,SAAAC,GAAI,MAAK,CACxCC,KAAMD,EAAKE,KAAKC,KAChBC,KAAMJ,EAAKE,KAAKG,QAAQD,cAQpC,SAASE,EAAT,GAAgC,IAATC,EAAQ,EAARA,KACrB,OAAIA,EAAKN,KAEL,wBAAIO,IAAKD,EAAKH,MACZ,kBAAC,OAAD,CAAMK,GAAIF,EAAKN,MAAOM,EAAKH,OAI1B,wBAAII,IAAKD,EAAKH,MAAOG,EAAKH,KAA1B,aAGM,SAAST,EAAT,GAAqD,IAA7BC,EAA4B,EAA5BA,MAA4B,IAArBc,iBAAqB,SACjE,OAAKd,EAAMe,OAKT,wBAAIC,UAAU,uBACXhB,EAAMG,KAAI,SAAAQ,GACT,OAAIA,EAAKX,MAEL,wBAAIY,IAAKD,EAAKH,MACXM,GAAa,kBAACJ,EAAD,CAAaC,KAAMA,KAC/BG,GAAa,wBAAIE,UAAU,mBAAmBL,EAAKH,MACrD,kBAACT,EAAD,CAAce,WAAS,EAACd,MAAOW,EAAKX,SAIvB,kBAAfW,EAAKf,MAEL,wBAAIgB,IAAKD,EAAKH,MACXM,GAAa,kBAACJ,EAAD,CAAaC,KAAMA,KAC/BG,GAAa,wBAAIE,UAAU,mBAAmBL,EAAKH,MACrD,kBAACb,EAAD,OAIC,kBAACe,EAAD,CAAaC,KAAMA,EAAMC,IAAKD,EAAKH,WAxBvC,K,yBC7CI,SAASS,EAAT,GAAgC,IAAbC,EAAY,EAAZA,SAC1BC,EAAiBC,IAAYC,SAASC,MAAK,SAAAC,GAAO,OACtDL,EAASM,SAASC,SAASF,EAAQlB,SAGrC,OAAKc,EAKH,yBAAKH,UAAU,qCACb,yBAAKA,UAAU,kBACb,kBAACjB,EAAD,CAAcC,MAAOmB,EAAenB,UANjC,KCdI,SAAS0B,EAAT,GAAkC,IAAdC,EAAa,EAAbA,UACjC,OAAOA,EACL,6BACE,uBAAGC,MAAM,aAAaC,cAAY,SAAU,IAC5C,uBAAGxB,KAAMsB,GAAT,6BAEA,K,gBCKS,SAASG,EAAT,GAA6D,IAApCC,EAAmC,EAAnCA,SAAUb,EAAyB,EAAzBA,SAAUc,EAAe,EAAfA,YAC1D,OACE,kBAACC,EAAA,EAAD,CAAQf,SAAUA,GAChB,yBAAKF,UAAU,cACb,kBAACC,EAAD,CAASC,SAAUA,IACnB,yBACEgB,GAAG,eACHlB,UAAU,2DAETe,EACD,kBAACL,EAAD,CAAUC,UAAWK,EAAYL,iB,kLCjB9BQ,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDtC,EAEC,EAFDA,WACGuC,EACF,8BACD,OAAO,cAACH,EAAD,iBAAeD,EAAiBI,EAAhC,CAAuCvC,WAAYA,EAAYwC,QAAQ,cAG5E,mBAAQ,CACN,GAAM,iCADR,iCAGA,mBAAQ,CACN,GAAM,kCADR,kCAGA,iGACA,wBACE,oBAAIC,WAAW,MACb,mBAAGA,WAAW,MAAd,6BAAiD,wBAAQA,WAAW,KAAnB,aACjD,qBAAKA,WAAW,MAAK,oCAAMA,WAAW,OAAU,CAC5C,UAAa,mBADI,qCAKvB,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,sBACA,qBAAKA,WAAW,MAAK,oCAAMA,WAAW,OAAU,CAC5C,UAAa,mBADI,kCAKvB,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,oEACA,qBAAKA,WAAW,MAAK,oCAAMA,WAAW,OAAU,CAC5C,UAAa,mBADI,wBAKvB,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,8GACA,qBAAKA,WAAW,MAAK,oCAAMA,WAAW,OAAU,IAA3B,wEAKvB,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,+CAAmE,wBAAQA,WAAW,KAAnB,oBAAnE,UACA,qBAAKA,WAAW,MAAK,oCAAMA,WAAW,OAAU,CAC5C,UAAa,wBADI,k4BAoCvB,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,mEACA,qBAAKA,WAAW,MAAK,oCAAMA,WAAW,OAAU,CAC5C,UAAa,mBADI,gCAU7BH,EAAWI,gBAAiB","file":"component---src-pages-documentation-guide-creating-gatsby-plugins-mdx-aaf6f773514723b685db.js","sourcesContent":["import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nfunction ComponentList() {\n  return (\n    <StaticQuery\n      query={graphql`\n        query ComponentListQuery {\n          components: allSitePage(\n            filter: { context: { source: { eq: \"formation-react\" } } }\n            sort: { fields: [context___name], order: ASC }\n          ) {\n            edges {\n              node {\n                path\n                context {\n                  source\n                  name\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <SidebarItems\n          items={data.components.edges.map(comp => ({\n            href: comp.node.path,\n            name: comp.node.context.name,\n          }))}\n        />\n      )}\n    />\n  );\n}\n\nfunction SidebarItem({ item }) {\n  if (item.href) {\n    return (\n      <li key={item.name}>\n        <Link to={item.href}>{item.name}</Link>\n      </li>\n    );\n  }\n  return <li key={item.name}>{item.name} (future)</li>;\n}\n\nexport default function SidebarItems({ items, isSublist = false }) {\n  if (!items.length) {\n    return null;\n  }\n\n  return (\n    <ul className=\"site-c-sidenav-list\">\n      {items.map(item => {\n        if (item.items) {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <SidebarItems isSublist items={item.items} />\n            </li>\n          );\n        }\n        if (item.query === 'componentList') {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <ComponentList />\n            </li>\n          );\n        }\n        return <SidebarItem item={item} key={item.name} />;\n      })}\n    </ul>\n  );\n}\n","import React from 'react';\nimport SidebarItems from './SidebarItems';\nimport sidebarData from '../../sidebar';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nexport default function Sidebar({ location }) {\n  const sidebarSection = sidebarData.sections.find(section =>\n    location.pathname.includes(section.href),\n  );\n\n  if (!sidebarSection) {\n    return null;\n  }\n\n  return (\n    <div className=\"vads-l-col--4 site-c-content__nav\">\n      <div className=\"site-c-sidenav\">\n        <SidebarItems items={sidebarSection.items} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function EditLink({ sourceUrl }) {\n  return sourceUrl ? (\n    <div>\n      <i class=\"fa fa-edit\" aria-hidden=\"true\" />{' '}\n      <a href={sourceUrl}>Edit this page on GitHub</a>\n    </div>\n  ) : null;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Sidebar from '../components/sidebar/Sidebar';\nimport EditLink from '../components/EditLink';\nimport Layout from './Layout';\n\n/**\n * SidebarLayout\n *\n * @class SidebarLayout\n * @extends {React.Component}\n */\nexport default function SidebarLayout({ children, location, pageContext }) {\n  return (\n    <Layout location={location}>\n      <div className=\"vads-l-row\">\n        <Sidebar location={location} />\n        <div\n          id=\"main-content\"\n          className=\"vads-l-col--8 site-c-content__content docSearch-content\"\n        >\n          {children}\n          <EditLink sourceUrl={pageContext.sourceUrl} />\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nSidebarLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/jenkins/workspace/ran-facing-services-tools_master/packages/documentation/src/layouts/SidebarLayout.jsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"how-to-create-a-gatsby-plugin\"\n    }}>{`How to Create a Gatsby Plugin`}</h2>\n    <h3 {...{\n      \"id\": \"creating-a-local-gatsby-plugin\"\n    }}>{`Creating a Local Gatsby Plugin`}</h3>\n    <p>{`Here we are going to show you how to create a local plugin for Gatsby.`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Create a plugin folder in `}<strong parentName=\"p\">{`/plugins`}</strong></p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`$ mkdir gatsby-example-plugin\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`CD into the folder`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`$ cd gatsby-example-plugin\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Initialize Node.js using npm. Plugins need to be a Node project.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`$ npm init --yes\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Now you can add the Gatsby specific files like gatsby-node.js, gatsby-browser, etc. in your plugin folder.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`gatsby-example-plugin\n  - gatsby-node.js\n  - gatsby-browser.js\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`To use the plugin you need to add it to the `}<strong parentName=\"p\">{`gatsby-config.js`}</strong>{` file.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-javascript\"\n          }}>{`// gatsby-config.js\n\nmodule.exports = {\n  siteMetadata: {\n    description: \\`Resources and documention for the Development within the VA.gov project\\`,\n    siteUrl: \\`https://department-of-veterans-affairs.github.io/veteran-facing-services-tools\\`,\n    title: \\`VA.gov Developer's Documentations\\`,\n    sidebar: require('./src/sidebar.js')\n  },\n  pathPrefix: '/veteran-facing-services-tools',\n  plugins: [\n    \\`gatsby-plugin-react-helmet\\`,\n    {\n      resolve: \\`gatsby-source-filesystem\\`,\n      options: {\n        name: \\`images\\`,\n        path: \\`\\${__dirname}/src/images\\`,\n      },\n    },\n    \\`gatsby-transformer-sharp\\`,\n    \\`gatsby-plugin-sharp\\`,\n    {\n      resolve: \\`gatsby-plugin-manifest\\`,\n      options: {\n        name: \\`vagov-documentation\\`,\n        short_name: \\`vagov-documentation\\`,\n        start_url: \\`/\\`,\n      },\n    },\n    \\`gatsby-example-plugin\\`,\n  ],\n}\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`If you would like to debug your build process code, you can run`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`$ yarn develop:inspect\n`}</code></pre>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}