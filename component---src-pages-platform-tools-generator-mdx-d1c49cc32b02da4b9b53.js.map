{"version":3,"sources":["webpack:///./src/components/sidebar/SidebarItems.jsx","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./src/components/pageFooter/Components.jsx","webpack:///./src/components/pageFooter/Documentation.jsx","webpack:///./src/components/pageFooter/PageFooter.jsx","webpack:///./src/layouts/SidebarLayout.jsx","webpack:///./src/pages/platform/tools/generator.mdx"],"names":["ComponentList","query","render","data","SidebarItems","items","components","edges","map","comp","href","node","path","name","context","SidebarItem","item","key","to","isSublist","length","className","Sidebar","location","sidebarSection","sidebarData","sections","find","section","pathname","includes","componentToMatch","toLowerCase","ComponentItem","link","base","Components","splits","split","getPathName","pathName","replace","charAt","substring","Documentation","level1","indexmdx","Array","isArray","lvl2Item","getIndexMdx","PageFooter","class","aria-hidden","getGithubHref","SidebarLayout","children","Layout","id","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","props","mdxType","parentName","isMDXComponent"],"mappings":"oLASA,SAASA,IACP,OACE,kBAAC,cAAD,CACEC,MAAK,aAkBLC,OAAQ,SAAAC,GAAI,OACV,kBAACC,EAAD,CACEC,MAAOF,EAAKG,WAAWC,MAAMC,KAAI,SAAAC,GAAI,MAAK,CACxCC,KAAMD,EAAKE,KAAKC,KAChBC,KAAMJ,EAAKE,KAAKG,QAAQD,cAQpC,SAASE,EAAT,GAAgC,IAATC,EAAQ,EAARA,KACrB,OAAIA,EAAKN,KAEL,wBAAIO,IAAKD,EAAKH,MACZ,kBAAC,OAAD,CAAMK,GAAIF,EAAKN,MAAOM,EAAKH,OAI1B,wBAAII,IAAKD,EAAKH,MAAOG,EAAKH,KAA1B,aAEM,SAAST,EAAT,GAAqD,IAA7BC,EAA4B,EAA5BA,MAA4B,IAArBc,iBAAqB,SACjE,OAAKd,EAAMe,OAKT,wBAAIC,UAAU,uBACXhB,EAAMG,KAAI,SAAAQ,GACT,OAAIA,EAAKX,MAEL,wBAAIY,IAAKD,EAAKH,MACXM,GAAa,kBAACJ,EAAD,CAAaC,KAAMA,KAC/BG,GAAa,wBAAIE,UAAU,mBAAmBL,EAAKH,MACrD,kBAACT,EAAD,CAAce,WAAS,EAACd,MAAOW,EAAKX,SAIvB,kBAAfW,EAAKf,MAEL,wBAAIgB,IAAKD,EAAKH,MACXM,GAAa,kBAACJ,EAAD,CAAaC,KAAMA,KAC/BG,GAAa,wBAAIE,UAAU,mBAAmBL,EAAKH,MACrD,kBAACb,EAAD,OAIC,kBAACe,EAAD,CAAaC,KAAMA,EAAMC,IAAKD,EAAKH,WAxBvC,K,yBC5CI,SAASS,EAAT,GAAgC,IAAbC,EAAY,EAAZA,SAC1BC,EAAiBC,IAAYC,SAASC,MAAK,SAAAC,GAAO,OACtDL,EAASM,SAASC,SAASF,EAAQlB,SAGrC,OAAKc,EAKH,yBAAKH,UAAU,qCACb,yBAAKA,UAAU,kBACb,kBAACjB,EAAD,CAAcC,MAAOmB,EAAenB,UANjC,KCPX,SAASL,EAAT,GAA8C,IAArB+B,EAAoB,EAApBA,iBACvB,OACE,kBAAC,cAAD,CACE9B,MAAK,aAkBLC,OAAQ,SAACC,GAAD,OACNA,EAAKG,WAAWC,MAAMC,KAAI,SAACC,GACzB,OAAOsB,IAAqBtB,EAAKE,KAAKG,QAAQD,KAAKmB,cACjD,kBAACC,EAAD,CACEjB,KAAM,CACJH,KAAMJ,EAAKE,KAAKG,QAAQD,QAI5B,SAQZ,SAASoB,EAAT,GAAkC,IAATjB,EAAQ,EAARA,KAGjBkB,EAAOC,uIAAwBnB,EAAKH,KAAO,IAAMG,EAAKH,KAAO,OACnE,OAAO,kBAAC,OAAD,CAAMK,GAAIgB,GAAV,4BAGM,SAASE,EAAT,GAAmC,IAC1CC,EADyC,EAAZR,SACXS,MAAM,KAC9B,OAAO,kBAAC,EAAD,CAAeP,iBAAkBM,EAAO,KC5CjD,IAsCME,EAAc,SAAChB,GAEnB,IAAIiB,EAAWjB,EAASM,SAASY,QAC/B,iCACA,IAQF,OAJID,EAASpB,OAAS,GAA8C,MAAzCoB,EAASE,OAAOF,EAASpB,OAAS,KAC3DoB,EAAWA,EAASG,UAAU,EAAGH,EAASpB,OAAS,IAG9CoB,GAGM,SAASI,EAAT,GAAsC,IAAbrB,EAAY,EAAZA,SAGhCW,EACJC,+HAEAI,EAAYhB,GA3DI,SAACA,GACnB,IAAMiB,EAAWD,EAAYhB,GAEvBC,EAAiBC,IAAYC,SAASC,MAAK,SAACC,GAAD,OAC/CY,EAASV,SAASF,EAAQlB,SAItBmC,EAASpB,IAAYC,SAASC,MAClC,SAACC,GAAD,OAAaA,EAAQlB,OAAS8B,KAGhC,GAAIK,aAAJ,EAAIA,EAAQC,SACV,MAAO,SAIT,IAAItB,aAAJ,EAAIA,EAAgBnB,QACKmB,EAAenB,MAAMG,KAAI,SAACQ,GAC/C,OAAO+B,MAAMC,QAAQhC,EAAKX,OACtBW,EAAKX,MAAMsB,MAAK,SAACsB,GAAD,OAAcA,EAASvC,OAAS8B,KAChD,QAGwBhC,KAAI,SAACoB,GACjC,IAAIA,aAAA,EAAAA,EAASlB,OAAQkB,EAAQlB,OAAS8B,EACpC,SAAOZ,aAAA,EAAAA,EAASkB,aAITnB,MAAK,SAACmB,GAAD,OAAcA,KAC5B,MAAO,SAIX,MAAO,GAyBLI,CAAY3B,GACZ,OAEF,OAAO,kBAAC,OAAD,CAAML,GAAIgB,GAAV,4BC3DM,SAASiB,EAAT,GAAmC,IAAb5B,EAAY,EAAZA,SACnC,OACE,6BACE,2BACE,6BACA,uBAAG6B,MAAM,aAAaC,cAAY,SAFpC,IAfgB,SAAC9B,GACrB,GAAIA,EAASM,SAASC,SAAS,cAAe,CAC5C,IAAMU,EAAWjB,EAASM,SAASY,QACjC,iCACA,IAEF,OAAO,kBAACL,EAAD,CAAYP,SAAUW,IAE7B,OAAO,kBAACI,EAAD,CAAerB,SAAUA,IASmB+B,CAAc/B,KCRtD,SAASgC,EAAT,GAAgD,IAAvBC,EAAsB,EAAtBA,SAAUjC,EAAY,EAAZA,SAChD,OACE,kBAACkC,EAAA,EAAD,CAAQlC,SAAUA,GAChB,yBAAKF,UAAU,cACb,kBAACC,EAAD,CAASC,SAAUA,IACnB,yBACEmC,GAAG,eACHrC,UAAU,2DAETmC,EACD,kBAACL,EAAD,CAAY5B,SAAUA,S,kLCjBnBoC,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDzD,EAEC,EAFDA,WACG0D,EACF,8BACD,OAAO,cAACH,EAAD,iBAAeD,EAAiBI,EAAhC,CAAuC1D,WAAYA,EAAY2D,QAAQ,cAG5E,mBAAQ,CACN,GAAM,+BADR,gCAGA,iPACA,gCACE,mBAAGC,WAAW,cAAd,6DAAyF,iCAAGA,WAAW,KAAQ,CAC3G,KAAQ,WAD6E,iBAAzF,MAIF,mBAAQ,CACN,GAAM,SADR,SAGA,uFACA,yBAAK,oCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,qBAIL,0HACA,mBAAQ,CACN,GAAM,sCADR,wCAGA,gCACE,mBAAGA,WAAW,cAAd,kDAA8E,4BAAYA,WAAW,KAAvB,iCAA9E,OAA+J,4BAAYA,WAAW,KAAvB,kCAEjK,uMACA,mBAAQ,CACN,GAAM,0DADR,6DAGA,gCACE,mBAAGA,WAAW,cAAd,sCAAkE,4BAAYA,WAAW,KAAvB,WAAlE,OAA6H,4BAAYA,WAAW,KAAvB,uBAE/H,6YACA,mBAAQ,CACN,GAAM,qDADR,uDAGA,gCACE,mBAAGA,WAAW,cAAd,aAAyC,4BAAYA,WAAW,KAAvB,qBAAzC,OAA8G,4BAAYA,WAAW,KAAvB,mBAEhH,8VACA,mBAAQ,CACN,GAAM,mCADR,qCAGA,gCACE,mBAAGA,WAAW,cAAd,aAAyC,4BAAYA,WAAW,KAAvB,6BAAzC,OAAsH,4BAAYA,WAAW,KAAvB,8DAExH,2SAAwR,4BAAYA,WAAW,KAAvB,iBAAxR,KACA,mBAAQ,CACN,GAAM,sBADR,uBAGA,iHACA,mBAAQ,CACN,GAAM,0BADR,4BAGA,gCACE,mBAAGA,WAAW,cAAd,aAAyC,4BAAYA,WAAW,KAAvB,WAAzC,OAAoG,4BAAYA,WAAW,KAAvB,aAEtG,yMACA,mBAAQ,CACN,GAAM,gEADR,kEAGA,gCACE,mBAAGA,WAAW,cAAd,aAAyC,4BAAYA,WAAW,KAAvB,gBAAzC,OAAyG,4BAAYA,WAAW,KAAvB,eAE3G,mMAAgL,4BAAYA,WAAW,KAAvB,QAAhL,OAAwO,4BAAYA,WAAW,KAAvB,aAAxO,kCACA,mBAAQ,CACN,GAAM,uDADR,yDAGA,iIACA,uBAAG,mCAAKA,WAAW,KAAQ,CACvB,IAAO,iCACP,IAAO,8BAEX,+KAA4J,4BAAYA,WAAW,KAAvB,WAA5J,iBAAiO,4BAAYA,WAAW,KAAvB,mCAAjO,qCACA,mBAAQ,CACN,GAAM,8CADR,gDAGA,iKACA,mBAAQ,CACN,GAAM,gFADR,yFAGA,uKACA,mBAAQ,CACN,GAAM,yGADR,4GAGA,+KAA4J,4BAAYA,WAAW,KAAvB,wBAA5J,QAAqO,4BAAYA,WAAW,KAAvB,mBAArO,KACA,mBAAQ,CACN,GAAM,2DADR,4DAGA,6DACA,wBACE,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAK,wBAAQA,WAAW,KAAnB,oCAAnB,8DACmD,4BAAYA,WAAW,KAAvB,WADnD,+FAGF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAK,wBAAQA,WAAW,KAAnB,qDAAnB,0DAC+C,4BAAYA,WAAW,KAAvB,WAD/C,2FAGF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAK,wBAAQA,WAAW,KAAnB,+DAAnB,2DACgD,4BAAYA,WAAW,KAAvB,WADhD,2LAIJ,mBAAQ,CACN,GAAM,cADR,gBAGA,2PACA,2EAAwD,4BAAYA,WAAW,KAAvB,sCAAxD,aAAoJ,4BAAYA,WAAW,KAAvB,gBAApJ,4CACA,+GAA4F,iCAAGA,WAAW,KAAQ,CAC9G,KAAQ,WADgF,uBAA5F,MAOJH,EAAWI,gBAAiB","file":"component---src-pages-platform-tools-generator-mdx-d1c49cc32b02da4b9b53.js","sourcesContent":["import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nfunction ComponentList() {\n  return (\n    <StaticQuery\n      query={graphql`\n        query ComponentListQuery {\n          components: allSitePage(\n            filter: { context: { source: { eq: \"component\" } } }\n            sort: { fields: [context___name], order: ASC }\n          ) {\n            edges {\n              node {\n                path\n                context {\n                  source\n                  name\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <SidebarItems\n          items={data.components.edges.map(comp => ({\n            href: comp.node.path,\n            name: comp.node.context.name,\n          }))}\n        />\n      )}\n    />\n  );\n}\n\nfunction SidebarItem({ item }) {\n  if (item.href) {\n    return (\n      <li key={item.name}>\n        <Link to={item.href}>{item.name}</Link>\n      </li>\n    );\n  }\n  return <li key={item.name}>{item.name} (future)</li>;\n}\nexport default function SidebarItems({ items, isSublist = false }) {\n  if (!items.length) {\n    return null;\n  }\n\n  return (\n    <ul className=\"site-c-sidenav-list\">\n      {items.map(item => {\n        if (item.items) {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <SidebarItems isSublist items={item.items} />\n            </li>\n          );\n        }\n        if (item.query === 'componentList') {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <ComponentList />\n            </li>\n          );\n        }\n        return <SidebarItem item={item} key={item.name} />;\n      })}\n    </ul>\n  );\n}\n","import React from 'react';\nimport SidebarItems from './SidebarItems';\nimport sidebarData from '../../sidebar';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nexport default function Sidebar({ location }) {\n  const sidebarSection = sidebarData.sections.find(section =>\n    location.pathname.includes(section.href),\n  );\n\n  if (!sidebarSection) {\n    return null;\n  }\n\n  return (\n    <div className=\"vads-l-col--4 site-c-content__nav\">\n      <div className=\"site-c-sidenav\">\n        <SidebarItems items={sidebarSection.items} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\n\n/**\n * Finds a specific component inside a list\n *\n * @param {string} componentToMatch\n */\n\nfunction ComponentList({ componentToMatch }) {\n  return (\n    <StaticQuery\n      query={graphql`\n        query ComponentsQuery {\n          components: allSitePage(\n            filter: { context: { source: { eq: \"component\" } } }\n            sort: { fields: [context___name], order: ASC }\n          ) {\n            edges {\n              node {\n                path\n                context {\n                  source\n                  name\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={(data) =>\n        data.components.edges.map((comp) => {\n          return componentToMatch === comp.node.context.name.toLowerCase() ? (\n            <ComponentItem\n              item={{\n                name: comp.node.context.name,\n              }}\n            />\n          ) : (\n            ''\n          );\n        })\n      }\n    />\n  );\n}\n\nfunction ComponentItem({ item }) {\n  const base = `https://github.com/department-of-veterans-affairs/veteran-facing-services-tools/blob/master/packages`;\n  const formationReact = '/formation-react/src/components/';\n  const link = base + formationReact + item.name + '/' + item.name + '.mdx';\n  return <Link to={link}>Edit this page on GitHub</Link>;\n}\n\nexport default function Components({ pathname }) {\n  const splits = pathname.split('/');\n  return <ComponentList componentToMatch={splits[3]} />;\n}\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport sidebarData from '../../sidebar';\n\n/**\n * This function will return if the name of the file is index.mdx\n * instead of the default value\n * @param {object} location - Used to obtain the page location\n * @returns {string} - Return either index or empty if not needed\n */\n\nconst getIndexMdx = (location) => {\n  const pathName = getPathName(location);\n\n  const sidebarSection = sidebarData.sections.find((section) =>\n    pathName.includes(section.href),\n  );\n\n  // Test first Level of the sidebar object\n  const level1 = sidebarData.sections.find(\n    (section) => section.href === pathName,\n  );\n\n  if (level1?.indexmdx) {\n    return '/index';\n  }\n\n  // Test second Level of the sidebar object\n  if (sidebarSection?.items) {\n    const level2Sections = sidebarSection.items.map((item) => {\n      return Array.isArray(item.items)\n        ? item.items.find((lvl2Item) => lvl2Item.href === pathName)\n        : null;\n    });\n\n    const level2 = level2Sections.map((section) => {\n      if (section?.href && section.href === pathName) {\n        return section?.indexmdx ? true : false;\n      }\n    });\n\n    if (level2.find((indexmdx) => indexmdx)) {\n      return '/index';\n    }\n  }\n\n  return '';\n};\n\nconst getPathName = (location) => {\n  // Remove extra path in production environment\n  let pathName = location.pathname.replace(\n    '/veteran-facing-services-tools',\n    '',\n  );\n\n  // Check for additional '/' at the end when refreshing the browser\n  if (pathName.length > 0 && pathName.charAt(pathName.length - 1) === '/') {\n    pathName = pathName.substring(0, pathName.length - 1);\n  }\n\n  return pathName;\n};\n\nexport default function Documentation({ location }) {\n  const base = `https://github.com/department-of-veterans-affairs/veteran-facing-services-tools/blob/master/packages`;\n  const documentation = '/documentation/src/pages';\n  const link =\n    base +\n    documentation +\n    getPathName(location) +\n    getIndexMdx(location) +\n    '.mdx';\n\n  return <Link to={link}>Edit this page on GitHub</Link>;\n}\n","import React from 'react';\nimport Components from './Components';\nimport Documentation from './Documentation';\n\nconst getGithubHref = (location) => {\n  if (location.pathname.includes('components')) {\n    const pathName = location.pathname.replace(\n      '/veteran-facing-services-tools',\n      '',\n    );\n    return <Components pathname={pathName} />;\n  } else {\n    return <Documentation location={location} />;\n  }\n};\n\nexport default function PageFooter({ location }) {\n  return (\n    <div>\n      <p>\n        <br />\n        <i class=\"fa fa-edit\" aria-hidden=\"true\"></i> {getGithubHref(location)}\n      </p>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Layout from './Layout';\nimport Sidebar from '../components/sidebar/Sidebar';\nimport PageFooter from '../components/pageFooter/PageFooter';\n\n/**\n * Layout\n *\n * @class Layout\n * @extends {React.Component}\n */\nexport default function SidebarLayout({ children, location }) {\n  return (\n    <Layout location={location}>\n      <div className=\"vads-l-row\">\n        <Sidebar location={location} />\n        <div\n          id=\"main-content\"\n          className=\"vads-l-col--8 site-c-content__content docSearch-content\"\n        >\n          {children}\n          <PageFooter location={location} />\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nSidebarLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/jenkins/workspace/ran-facing-services-tools_master/packages/documentation/src/layouts/SidebarLayout.jsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"vagov-application-generator\"\n    }}>{`VA.gov application generator`}</h1>\n    <p>{`We have a Yeoman generator for starting up new React applications in vets-website. This page will guide you through setting up the generator and explaining the questions that are asked as part of the setup process.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`You can find more information about creating forms in the `}<a parentName=\"p\" {...{\n          \"href\": \"/forms\"\n        }}>{`forms section`}</a>{`.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`Navigate to the root of the vets-website repository and run:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ yarn new:app\n`}</code></pre>\n    <p>{`After running the above command, the generator will start up and ask you a series of questions:`}</p>\n    <h3 {...{\n      \"id\": \"whats-the-name-of-your-application\"\n    }}>{`What's the name of your application?`}</h3>\n    <blockquote>\n      <p parentName=\"blockquote\">{`This will be the default page title. Examples: `}<inlineCode parentName=\"p\">{`21P-530 Burials benefits form`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`GI Bill School Feedback Tool`}</inlineCode></p>\n    </blockquote>\n    <p>{`This value will be used as the page title. If you're creating a form, it will also be used as the header for the introduction page and as a header on the confirmation page.`}</p>\n    <h3 {...{\n      \"id\": \"what-folder-in-srcapplications-should-your-app-live-in\"\n    }}>{`What folder in src/applications/ should your app live in?`}</h3>\n    <blockquote>\n      <p parentName=\"blockquote\">{`This can be a subfolder. Examples: `}<inlineCode parentName=\"p\">{`burials`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`edu-benefits/0993`}</inlineCode></p>\n    </blockquote>\n    <p>{`Most of our React applications have their own folder in src/applications, so normally you want to pick a new folder. However, if you're building an application that's related to other applications, there may be a folder that your app should go in. An example would be if you were creating a new education form, you would probably create your app in edu-benefits/newform.`}</p>\n    <h3 {...{\n      \"id\": \"what-should-be-the-name-of-your-apps-entry-bundle\"\n    }}>{`What should be the name of your app's entry bundle?`}</h3>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Examples: `}<inlineCode parentName=\"p\">{`0993-edu-benefits`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`feedback-tool`}</inlineCode></p>\n    </blockquote>\n    <p>{`This is the name of the bundle that Webpack builds for your application. They're normally lower case with dashes separating words. This is primarily used to link your bundle to the content page that is created as a base for your application. It doesn't show up in your code anywhere. It's also separate from the entry file.`}</p>\n    <h3 {...{\n      \"id\": \"whats-the-root-url-for-this-app\"\n    }}>{`What's the root URL for this app?`}</h3>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Examples: `}<inlineCode parentName=\"p\">{`/gi-bill-comparison-tool/`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`/education/opt-out-information-sharing/opt-out-form-0993`}</inlineCode></p>\n    </blockquote>\n    <p>{`This is the URL your application will live at, starting with a leading slash. In your React apps you will likely have multiple pages and the URLs for those pages will have this as the base. This value also gets translated into the page for the content page, which lives in `}<inlineCode parentName=\"p\">{`content/pages`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"is-this-a-form-app\"\n    }}>{`Is this a form app?`}</h3>\n    <p>{`If this is a form, there are some more questions after this step. If not, you're done!`}</p>\n    <h3 {...{\n      \"id\": \"whats-your-form-number\"\n    }}>{`What's your form number?`}</h3>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Examples: `}<inlineCode parentName=\"p\">{`22-0993`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`21P-530`}</inlineCode></p>\n    </blockquote>\n    <p>{`This is the form number for the paper form you're converting. This is used in a couple places in the UI and also as a key for the save in progress functionality of our forms.`}</p>\n    <h3 {...{\n      \"id\": \"whats-the-google-analytics-event-prefix-that-you-want-to-use\"\n    }}>{`What's the Google Analytics event prefix that you want to use?`}</h3>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Examples: `}<inlineCode parentName=\"p\">{`burials-530-`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`edu-0993-`}</inlineCode></p>\n    </blockquote>\n    <p>{`Our shared form code sends events to Google Analytics and we need a unique prefix to be able to categorize the events by form. It's normally a dash separated value like `}<inlineCode parentName=\"p\">{`hca-`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`edu-1990-`}</inlineCode>{` and is made up by developers.`}</p>\n    <h3 {...{\n      \"id\": \"whats-the-respondent-burden-of-this-form-in-minutes\"\n    }}>{`What's the respondent burden of this form in minutes?`}</h3>\n    <p>{`Each paper form has OMB information that lives in the margins of each page (usually in the top right):`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"../../images/omb_form_info.png\",\n        \"alt\": \"Form page with OMB info\"\n      }}></img></p>\n    <p>{`This is the respondent burden value from that information. All the information from this question and the next two can be found in the props for the `}<inlineCode parentName=\"p\">{`OMBInfo`}</inlineCode>{` component in `}<inlineCode parentName=\"p\">{`containers/IntroductionPage.jsx`}</inlineCode>{`, if you need to change it later.`}</p>\n    <h3 {...{\n      \"id\": \"whats-the-omb-control-number-for-this-form\"\n    }}>{`What's the OMB control number for this form?`}</h3>\n    <p>{`Similarly to the last question, this is more information from the OMB data, which lives in the margins of the pages of the paper form.`}</p>\n    <h3 {...{\n      \"id\": \"whats-the-omb-expiration-date-in-mdyyyy-format-for-this-form-example-1312019\"\n    }}>{`What's the OMB expiration date (in M/D/YYYY format) for this form? Example: 1/31/2019`}</h3>\n    <p>{`Again similarly to the last question, this is more information from the OMB data, which lives in the margins of the pages of the paper form.`}</p>\n    <h3 {...{\n      \"id\": \"whats-the-benefit-description-for-this-form-examples-education-benefits-or-disability-claims-increase\"\n    }}>{`What's the benefit description for this form? Examples: education benefits or disability claims increase`}</h3>\n    <p>{`This question is a bit more nebulous. We have a description of the type of benefits that you would be getting by using this form. Other examples are `}<inlineCode parentName=\"p\">{`health care benefits`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`veteran id card`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"what-kind-of-form-template-would-you-like-to-start-with\"\n    }}>{`What kind of form template would you like to start with?`}</h3>\n    <p>{`Choose from the following options:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`BLANK: A form without any fields`}</strong>{`\nThis option gives you a bare bones form config object in `}<inlineCode parentName=\"p\">{`form.js`}</inlineCode>{` pre-filled with basic boilerplate data based on the answers to the generator's questions.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`SIMPLE: A single-chapter form with a single field`}</strong>{`\nThis option gives you a simple form config object in `}<inlineCode parentName=\"p\">{`form.js`}</inlineCode>{` that renders a simple form composed of a single input field on a single page chapter.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`COMPLEX: A complex, multi-chapter form with multiple fields`}</strong>{`\nThis option gives you a complex form config object in `}<inlineCode parentName=\"p\">{`form.js`}</inlineCode>{` that renders a \"playground\" form composed of multiple chapters, including both single page and multi-page chapters, and a variety of form components to inspect and experiment with.`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"youre-done\"\n    }}>{`You're done!`}</h2>\n    <p>{`Once you've answered all those questions, you're done and the generator will create the files for you. To see them in your local development environment, you'll need to build again or restart the watch task you have running.`}</p>\n    <p>{`Once you've done that, you can access the URL at `}<inlineCode parentName=\"p\">{`http://localhost:3001/APP_ROOT_URL`}</inlineCode>{`. Replace `}<inlineCode parentName=\"p\">{`APP_ROOT_URL`}</inlineCode>{` with the root URL for your application.`}</p>\n    <p>{`To learn more about using the generator and working with the generated code, see our `}<a parentName=\"p\" {...{\n        \"href\": \"/forms\"\n      }}>{`forms documentation`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}