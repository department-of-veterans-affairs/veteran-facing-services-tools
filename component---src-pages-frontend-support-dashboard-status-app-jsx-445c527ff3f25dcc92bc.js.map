{"version":3,"sources":["webpack:///./node_modules/date-fns/esm/_lib/requiredArgs/index.js","webpack:///./node_modules/date-fns/esm/isDate/index.js","webpack:///./node_modules/date-fns/esm/toDate/index.js","webpack:///./node_modules/date-fns/esm/isValid/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","webpack:///./node_modules/date-fns/esm/_lib/toInteger/index.js","webpack:///./node_modules/date-fns/esm/addMilliseconds/index.js","webpack:///./node_modules/date-fns/esm/subMilliseconds/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","webpack:///./node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","webpack:///./node_modules/date-fns/esm/_lib/format/formatters/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/format/longFormatters/index.js","webpack:///./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","webpack:///./node_modules/date-fns/esm/_lib/protectedTokens/index.js","webpack:///./node_modules/date-fns/esm/format/index.js","webpack:///./src/pages/frontend-support-dashboard/status/app.jsx","webpack:///./src/components/dashboard/DashboardDataFetch.jsx","webpack:///./src/components/dashboard/definitions/constants.jsx"],"names":["requiredArgs","required","args","length","TypeError","isDate","value","arguments","Date","Object","prototype","toString","call","toDate","argument","argStr","getTime","console","warn","Error","stack","NaN","isValid","dirtyDate","date","isNaN","Number","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","token","count","options","result","tokenValue","replace","addSuffix","comparison","buildFormatLongFn","undefined","width","String","defaultWidth","format","formats","formatLong","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","dirtyIndex","dirtyOptions","valuesArray","context","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","key","Array","isArray","findIndex","pattern","test","findKey","valueCallback","rest","slice","object","predicate","hasOwnProperty","array","code","formatDistance","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","dirtyNumber","number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseInt","parseResult","any","index","weekStartsOn","firstWeekContainsDate","toInteger","Math","ceil","floor","addMilliseconds","dirtyAmount","timestamp","amount","subMilliseconds","startOfUTCISOWeek","getUTCDay","diff","setUTCDate","getUTCDate","setUTCHours","getUTCISOWeekYear","year","getUTCFullYear","fourthOfJanuaryOfNextYear","setUTCFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfUTCISOWeekYear","fourthOfJanuary","startOfUTCWeek","locale","localeWeekStartsOn","defaultWeekStartsOn","RangeError","getUTCWeekYear","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfUTCWeekYear","firstWeek","addLeadingZeros","targetLength","sign","output","abs","y","signedYear","M","getUTCMonth","d","a","dayPeriodEnumValue","getUTCHours","toUpperCase","h","H","m","getUTCMinutes","s","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","pow","dayPeriodEnum","formatTimezoneShort","offset","dirtyDelimiter","absOffset","hours","minutes","delimiter","formatTimezoneWithOptionalMinutes","formatTimezone","G","unit","lightFormatters","Y","signedWeekYear","weekYear","R","u","Q","q","L","w","week","round","getUTCWeek","I","isoWeek","getUTCISOWeek","D","dayOfYear","setUTCMonth","startOfYearTimestamp","difference","getUTCDayOfYear","E","dayOfWeek","e","localDayOfWeek","c","i","isoDayOfWeek","toLowerCase","b","B","K","k","X","_localize","timezoneOffset","_originalDate","getTimezoneOffset","x","O","z","t","originalDate","T","dateLongFormatter","timeLongFormatter","p","P","dateTimeFormat","datePattern","timePattern","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","indexOf","isProtectedWeekYearToken","throwProtectedError","input","concat","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","dirtyFormatStr","formatStr","formatterOptions","map","substring","firstCharacter","longFormatter","join","cleanEscapedString","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","transformCoverageReportToArray","report","data","attributes","statuses","cov","service","str","status","className","aria-label","aria-hidden","lastIncidentTimestamp","last_incident_timestamp","parse","App","location","useState","coverageReportData","setCoverageReportData","useEffect","statusDataFetch","vetsWebsiteInfo","rawTableData","transformedTableData","handleCoverageReportData","Layout","Sidebar","id","_item","DeployStatusDataFetch","repo","Promise","all","fetch","devBuildText","stagingBuildText","prodBuildText","owner","devBuildTextResponse","stagingBuildTextResponse","prodBuildTextResponse","commitsResponse","text","ok","statusText","json","commits","TestCoverageDataFetch","prodTestCoverage","testCoverageDataResponse","backendStatus","statusDataResponse","log","contentBuildInfo"],"mappings":"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","file":"component---src-pages-frontend-support-dashboard-status-app-jsx-445c527ff3f25dcc92bc.js","sourcesContent":["export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {*} value - the value to check\n * @returns {boolean} true if the given value is a date\n * @throws {TypeError} 1 arguments required\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\n\nexport default function isDate(value) {\n  requiredArgs(1, arguments);\n  return value instanceof Date || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import isDate from \"../isDate/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n\n  if (!isDate(dirtyDate) && typeof dirtyDate !== 'number') {\n    return false;\n  }\n\n  var date = toDate(dirtyDate);\n  return !isNaN(Number(date));\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\n\nvar formatDistance = function formatDistance(token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n\n  if (typeof tokenValue === 'string') {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace('{{count}}', count.toString());\n  }\n\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n};\n\nexport default formatDistance;","export default function buildFormatLongFn(args) {\n  return function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; // TODO: Remove String()\n\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\n\nvar formatRelative = function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n};\n\nexport default formatRelative;","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex; // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n\n    return valuesArray[index];\n  };\n}","export default function buildMatchFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    }) : findKey(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    });\n    var value;\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}","import buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nimport buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function valueCallback(value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function valueCallback(index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","export default function buildMatchPatternFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\n\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']\n}; // Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\n\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nvar ordinalNumber = function ordinalNumber(dirtyNumber, _options) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n};\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function argumentCallback(quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from \"../getUTCISOWeekYear/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCWeekYear from \"../getUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from \"../../addLeadingZeros/index.js\";\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function M(date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function d(date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function a(date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaa':\n        return dayPeriodEnumValue;\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function H(date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function m(date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function s(date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import getUTCDayOfYear from \"../../../_lib/getUTCDayOfYear/index.js\";\nimport getUTCISOWeek from \"../../../_lib/getUTCISOWeek/index.js\";\nimport getUTCISOWeekYear from \"../../../_lib/getUTCISOWeekYear/index.js\";\nimport getUTCWeek from \"../../../_lib/getUTCWeek/index.js\";\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport addLeadingZeros from \"../../addLeadingZeros/index.js\";\nimport lightFormatters from \"../lightFormatters/index.js\";\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n};\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Era\n  G: function G(date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function y(date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function Y(date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function R(date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function u(date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function Q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function M(date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function L(date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function w(date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function I(date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function d(date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function D(date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function E(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function e(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function c(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function i(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function a(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function b(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function B(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function H(date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function K(date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function k(date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function m(date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function s(date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function X(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function x(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function O(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function z(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function t(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function T(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","import toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport startOfUTCWeekYear from \"../startOfUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport startOfUTCISOWeekYear from \"../startOfUTCISOWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/) || [];\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport default function getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  }\n}","import isValid from \"../isValid/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport formatters from \"../_lib/format/formatters/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\"; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import React, { useEffect, useState } from 'react';\nimport Layout from '../../../layouts/Layout';\nimport Sidebar from '../../../components/sidebar/Sidebar';\nimport { statusDataFetch } from '../../../components/dashboard/DashboardDataFetch';\nimport { vetsWebsiteInfo } from '../../../components/dashboard/definitions/constants';\nimport { format } from 'date-fns';\n\n/**\n * Gets a check or 'x' icon based on the given status.\n *\n * @param {boolean} status - Determines whether to return check or x icon.\n * @returns {JSX.Element} Status icon.\n */\nconst getStatusIcon = status => {\n  const trueIcon = (\n    <span className=\"dash-true-icon\" aria-label=\"True Icon\">\n      <i className=\"fas fa-check-circle fa-2x\" aria-hidden=\"true\" />\n    </span>\n  );\n  const falseIcon = (\n    <span className=\"dash-false-icon\" aria-label=\"False Icon\">\n      <i className=\"fas fa-times-circle fa-2x\" aria-hidden=\"true\" />\n    </span>\n  );\n\n  const output = status === 'active' ? trueIcon : falseIcon;\n\n  return output;\n};\n\nconst truncate = str => {\n  return str.length > 30 ? `${str.substring(0, 27)}...` : str;\n};\n\nconst transformCoverageReportToArray = async report => {\n  // Add each app coverage result to the table\n  return Object.values(report.data.attributes.statuses).map(cov => {\n    return {\n      service: `${truncate(cov.service)}`,\n      status: getStatusIcon(cov.status),\n      lastIncidentTimestamp: cov.last_incident_timestamp\n        ? format(Date.parse(cov.last_incident_timestamp), 'MM/dd/yyyy')\n        : '-',\n    };\n  });\n};\n\nconst App = ({ location }) => {\n  const [coverageReportData, setCoverageReportData] = useState([]);\n\n  useEffect(() => {\n    const handleCoverageReportData = async () => {\n      const rawTableData = await statusDataFetch(vetsWebsiteInfo);\n      const transformedTableData = await transformCoverageReportToArray(\n        rawTableData,\n      );\n      setCoverageReportData(transformedTableData);\n    };\n\n    handleCoverageReportData();\n  }, []);\n\n  if (coverageReportData.length === 0) {\n    return null;\n  }\n\n  return (\n    <Layout location={location}>\n      <div className=\"vads-l-row site-l-wrapper\">\n        <Sidebar location={location} />\n        <div\n          id=\"main-content-coverage\"\n          className=\"dash-coverage-table site-c-content__content docSearch-content vads-l-col--12\"\n        >\n          <h1>Frontend Support Dashboard</h1>\n          <h2>Service Status</h2>\n          <div className=\"vads-l-grid-container vads-u-padding--0\">\n            <div className=\"vads-l-row\">\n              {coverageReportData.map((_item, i) => {\n                return (\n                  <div\n                    key={i}\n                    className=\"vads-l-col--12 large-screen:vads-l-col--6 vads-u-display--flex vads-u-padding--2 vads-u-background-color--gray-light-alt vads-u-border-color--white vads-u-border--1px\"\n                  >\n                    <div className=\"vads-u-flex--auto\">\n                      <div>\n                        <strong>{_item.service}</strong>\n                      </div>\n                      <div>Last incident: {_item.lastIncidentTimestamp}</div>\n                    </div>\n                    <div className=\"vads-u-flex--auto vads-u-margin-left--auto\">\n                      {_item.status}\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default App;\n","export async function DeployStatusDataFetch(repo) {\n  // https://dmitripavlutin.com/javascript-fetch-async-await/#5-parallel-fetch-requests\n  const [\n    devBuildTextResponse,\n    stagingBuildTextResponse,\n    prodBuildTextResponse,\n    commitsResponse,\n  ] = await Promise.all([\n    fetch(repo.devBuildText),\n    fetch(repo.stagingBuildText),\n    fetch(repo.prodBuildText),\n    // last 30 commits from vets-website\n    fetch(`https://api.github.com/repos/${repo.owner}/${repo.repo}/commits`),\n  ]);\n\n  const devBuildText = await devBuildTextResponse.text();\n  if (!devBuildTextResponse.ok) {\n    throw Error(devBuildTextResponse.statusText);\n  }\n  const stagingBuildText = await stagingBuildTextResponse.text();\n  if (!stagingBuildTextResponse.ok) {\n    throw Error(stagingBuildTextResponse.statusText);\n  }\n  const prodBuildText = await prodBuildTextResponse.text();\n  if (!prodBuildTextResponse.ok) {\n    throw Error(prodBuildTextResponse.statusText);\n  }\n  const commits = await commitsResponse.json();\n  if (!commitsResponse.ok) {\n    throw Error(commitsResponse.statusText);\n  }\n\n  const result = {\n    devBuildText,\n    stagingBuildText,\n    prodBuildText,\n    commits,\n  };\n\n  return result;\n}\n\nexport async function TestCoverageDataFetch(repo) {\n  const testCoverageDataResponse = await fetch(repo.prodTestCoverage);\n  if (!testCoverageDataResponse.ok) {\n    throw Error(testCoverageDataResponse.statusText);\n  }\n  return testCoverageDataResponse.json();\n}\n\nexport async function statusDataFetch(repo) {\n  const statusDataResponse = await fetch(repo.backendStatus);\n  console.log(statusDataResponse);\n  if (!statusDataResponse.ok) {\n    throw Error(statusDataResponse.statusText);\n  }\n  return statusDataResponse.json();\n}","// https://github.com/department-of-veterans-affairs/vets-website/blob/1cee564813462d6fe3896a10e477016f7cac2ebd/jenkins/common.groovy#L316\nexport const vetsWebsiteInfo = {\n  owner: 'department-of-veterans-affairs',\n  repo: 'vets-website',\n  devBuildText:\n    'https://dev-va-gov-assets.s3-us-gov-west-1.amazonaws.com/BUILD.txt',\n  stagingBuildText:\n    'https://staging-va-gov-assets.s3-us-gov-west-1.amazonaws.com/BUILD.txt',\n  prodBuildText:\n    'https://prod-va-gov-assets.s3-us-gov-west-1.amazonaws.com/BUILD.txt',\n  prodTestCoverage:\n    'https://s3-us-gov-west-1.amazonaws.com/vetsgov-website-builds-s3-upload-test/coverage/test-coverage-report.json',\n  backendStatus: 'https://api.va.gov/v0/backend_statuses',\n};\n\n// https://github.com/department-of-veterans-affairs/content-build/blob/844d3170a92005dbee70a7ecf643362137ba68c3/jenkins/common.groovy#L280\nexport const contentBuildInfo = {\n  owner: 'department-of-veterans-affairs',\n  repo: 'content-build',\n  devBuildText: 'https://dev.va.gov/BUILD.txt',\n  stagingBuildText: 'https://staging.va.gov/BUILD.txt',\n  prodBuildText: 'https://www.va.gov/BUILD.txt',\n};\n"],"sourceRoot":""}