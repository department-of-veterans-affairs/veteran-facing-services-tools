(window.webpackJsonp=window.webpackJsonp||[]).push([[71,51],{"3dLD":function(e,t,n){"use strict";n.d(t,"a",(function(){return j}));var a=n("q1tI"),r=n.n(a),o=n("8FPV"),i=n("Wbzz");function l(){return r.a.createElement(i.StaticQuery,{query:"4277382034",render:function(e){return r.a.createElement(c,{items:e.components.edges.map((function(e){return{href:e.node.path,name:e.node.context.name}}))})}})}function s(e){var t=e.item;return t.href?r.a.createElement("li",{key:t.name},r.a.createElement(i.Link,{to:t.href},t.name)):r.a.createElement("li",{key:t.name},t.name," (future)")}function c(e){var t=e.items,n=e.isSublist,a=void 0!==n&&n;return t.length?r.a.createElement("ul",{className:"site-c-sidenav-list"},t.map((function(e){return e.items?r.a.createElement("li",{key:e.name},a&&r.a.createElement(s,{item:e}),!a&&r.a.createElement("h2",{className:"heading-level-4"},e.name),r.a.createElement(c,{isSublist:!0,items:e.items})):"componentList"===e.query?r.a.createElement("li",{key:e.name},a&&r.a.createElement(s,{item:e}),!a&&r.a.createElement("h2",{className:"heading-level-4"},e.name),r.a.createElement(l,null)):r.a.createElement(s,{item:e,key:e.name})}))):null}var m=n("MEl4"),d=n.n(m);function u(e){var t=e.location,n=d.a.sections.find((function(e){return t.pathname.includes(e.href)}));return n?r.a.createElement("div",{className:"vads-l-col--4 site-c-content__nav"},r.a.createElement("div",{className:"site-c-sidenav"},r.a.createElement(c,{items:n.items}))):null}function f(e){var t=e.componentToMatch;return r.a.createElement(i.StaticQuery,{query:"4193446859",render:function(e){return e.components.edges.map((function(e){return t===e.node.context.name.toLowerCase()?r.a.createElement(b,{item:{name:e.node.context.name}}):""}))}})}function b(e){var t=e.item,n="https://github.com/department-of-veterans-affairs/veteran-facing-services-tools/blob/master/packages/formation-react/src/components/"+t.name+"/"+t.name+".mdx";return r.a.createElement(i.Link,{to:n},"Edit this page on GitHub")}function h(e){var t=e.pathname.split("/");return r.a.createElement(f,{componentToMatch:t[3]})}var p=function(e){var t=e.pathname.replace("/veteran-facing-services-tools","");return t.length>0&&"/"===t.charAt(t.length-1)&&(t=t.substring(0,t.length-1)),t};function O(e){var t=e.location,n="https://github.com/department-of-veterans-affairs/veteran-facing-services-tools/blob/master/packages/documentation/src/pages"+p(t)+function(e){var t=p(e),n=d.a.sections.find((function(e){return t.includes(e.href)})),a=d.a.sections.find((function(e){return e.href===t}));if(null==a?void 0:a.indexmdx)return"/index";if((null==n?void 0:n.items)&&n.items.map((function(e){return Array.isArray(e.items)?e.items.find((function(e){return e.href===t})):null})).map((function(e){if((null==e?void 0:e.href)&&e.href===t)return!!(null==e?void 0:e.indexmdx)})).find((function(e){return e})))return"/index";return""}(t)+".mdx";return r.a.createElement(i.Link,{to:n},"Edit this page on GitHub")}function g(e){var t=e.location;return r.a.createElement("div",null,r.a.createElement("p",null,r.a.createElement("br",null),r.a.createElement("i",{class:"fa fa-edit","aria-hidden":"true"})," ",function(e){if(e.pathname.includes("components")){var t=e.pathname.replace("/veteran-facing-services-tools","");return r.a.createElement(h,{pathname:t})}return r.a.createElement(O,{location:e})}(t)))}function j(e){var t=e.children,n=e.location;return r.a.createElement(o.a,{location:n},r.a.createElement("div",{className:"vads-l-row"},r.a.createElement(u,{location:n}),r.a.createElement("div",{id:"main-content",className:"vads-l-col--8 site-c-content__content docSearch-content"},t,r.a.createElement(g,{location:n}))))}},zdC0:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return i})),n.d(t,"default",(function(){return c}));var a=n("zLVn"),r=(n("q1tI"),n("7ljp")),o=n("3dLD"),i={},l={_frontmatter:i},s=o.a;function c(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(r.mdx)(s,Object.assign({},l,n,{components:t,mdxType:"MDXLayout"}),Object(r.mdx)("h1",{id:"web-fonts-improvements"},"WEB-FONTS IMPROVEMENTS"),Object(r.mdx)("table",null,Object(r.mdx)("thead",{parentName:"table"},Object(r.mdx)("tr",{parentName:"thead"},Object(r.mdx)("th",Object.assign({parentName:"tr"},{align:null})),Object(r.mdx)("th",Object.assign({parentName:"tr"},{align:null})),Object(r.mdx)("th",Object.assign({parentName:"tr"},{align:null})),Object(r.mdx)("th",Object.assign({parentName:"tr"},{align:null})))),Object(r.mdx)("tbody",{parentName:"table"},Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",Object.assign({parentName:"tr"},{align:null}),Object(r.mdx)("strong",{parentName:"td"},"Decision Made:")),Object(r.mdx)("td",Object.assign({parentName:"tr"},{align:null}),"No"),Object(r.mdx)("td",Object.assign({parentName:"tr"},{align:null}),Object(r.mdx)("strong",{parentName:"td"},"Decision Date:")),Object(r.mdx)("td",Object.assign({parentName:"tr"},{align:null}),"Winter 2019")))),Object(r.mdx)("h3",{id:"goals"},"GOALS"),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},"Improving First Contentful Paint"),Object(r.mdx)("li",{parentName:"ul"},"Improve loading time")),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Decision Maker:")," @jhonnyoddball and @rianfowler"),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"proposed-solutions"},"PROPOSED SOLUTIONS"),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},"Adding ",Object(r.mdx)("inlineCode",{parentName:"li"},"font-display: swap;")," to all webfonts to remove FOIT (Flash of Invisible Text)"),Object(r.mdx)("li",{parentName:"ul"},"Splitting the webfonts into their own css and adding them to the head before the main css"),Object(r.mdx)("li",{parentName:"ul"},"Inline the webfonts into the css"),Object(r.mdx)("li",{parentName:"ul"},"Encoding the fonts on base64"),Object(r.mdx)("li",{parentName:"ul"},"Remove hashing from the font names"),Object(r.mdx)("li",{parentName:"ul"},"Preloading the fonts (hard-coded the 4 needed on the header or dynamically, but can run into problems if they are more than 5 fonts per application)"),Object(r.mdx)("li",{parentName:"ul"},"Use of ",Object(r.mdx)("a",Object.assign({parentName:"li"},{href:"https://github.com/bramstein/fontfaceobserver"}),"Font Face Observer"))),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"case-studies-and-documentation"},"CASE STUDIES AND DOCUMENTATION"),Object(r.mdx)("p",null,Object(r.mdx)("a",Object.assign({parentName:"p"},{href:"https://github.com/department-of-veterans-affairs/va.gov-team/issues/1676"}),"https://github.com/department-of-veterans-affairs/va.gov-team/issues/1676")),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"summary"},"SUMMARY"),Object(r.mdx)("h4",{id:"adding-font-display-swap"},"Adding font-display: swap;"),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},"This is a great feature to add. It will force the use of the system fonts until the webfonts are ready. If the browser doesn't not support it, it will act regularly."),Object(r.mdx)("li",{parentName:"ul"},"We can't really use it since we are only able to change 4 out of 37 fonts.")),Object(r.mdx)("h4",{id:"splitting-the-webfonts-into-their-own-css"},"Splitting the webfonts into their own css"),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},"The separation of the webfonts into a separate css file did not make any difference nor impacted the webfonts in any way.")),Object(r.mdx)("h4",{id:"inline-the-webfonts-into-the-css-and-encoding-the-fonts-on-base64"},"Inline the webfonts into the css and Encoding the fonts on base64"),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},"Inline the webfonts into the css can easily be performed by encoding the webfonts as base64 and url-loader already transforms files into base64 URIs."),Object(r.mdx)("li",{parentName:"ul"},"Encode base64 and inline the webfonts made things worst.")),Object(r.mdx)("h4",{id:"preloading-the-fonts"},"Preloading the fonts"),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},"Using pre-load in some of the fonts can improve the performance. Doing this helps the FCP since the webfonts will not be blocked by the CSS files."),Object(r.mdx)("li",{parentName:"ul"},"In order to do this I removed the hashing from the webfonts and hard-coded them in the header")),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object.assign({parentName:"pre"},{}),'  <link rel="preload" href="/generated/sourcesanspro-bold-webfont.woff2" as="font" type="font/woff2" crossorigin>\n  <link rel="preload" href="/generated/sourcesanspro-regular-webfont.woff2" as="font" type="font/woff2" crossorigin>\n  <link rel="preload" href="/generated/bitter-bold.woff2" as="font" type="font/woff2" crossorigin>\n  <link rel="preload" href="/generated/fa-solid-900.woff2" as="font" type="font/woff2" crossorigin>\n')),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},"If FCP is the priority over the loading time, then pre-loading could be a good option to improve the performance of the fonts."),Object(r.mdx)("li",{parentName:"ul"},"Keep in mind that we should only pre-load 3-4 fonts only because we might end up pre-loading fonts that will not be used in the page.")),Object(r.mdx)("h4",{id:"use-font-face-observer"},"Use Font Face Observer"),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},"Since we could be calling any of our current fonts from multiple css locations, therefore this will be hard to implement."),Object(r.mdx)("li",{parentName:"ul"},"This will also apply to any webfont loader")),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"decision"},"DECISION"),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},"Remove hashing from webfonts"),Object(r.mdx)("li",{parentName:"ul"},"Pre-load the 4 main fonts in the header")))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-platform-front-end-standards-documented-decisions-web-fonts-mdx-c15fc66f67a7589b2b52.js.map