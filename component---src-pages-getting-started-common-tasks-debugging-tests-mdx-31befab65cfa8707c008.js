(window.webpackJsonp=window.webpackJsonp||[]).push([[30,50],{"1nT/":function(e){e.exports=JSON.parse('{"data":{"components":{"edges":[{"node":{"path":"/visual-design/components/accepttermsprompt/","context":{"source":"component","name":"AcceptTermsPrompt"}}},{"node":{"path":"/visual-design/components/additionalinfo/","context":{"source":"component","name":"AdditionalInfo"}}},{"node":{"path":"/visual-design/components/alertbox/","context":{"source":"component","name":"AlertBox"}}},{"node":{"path":"/visual-design/components/breadcrumbs/","context":{"source":"component","name":"Breadcrumbs"}}},{"node":{"path":"/visual-design/components/collapsiblepanel/","context":{"source":"component","name":"CollapsiblePanel"}}},{"node":{"path":"/visual-design/components/dropdownpanel/","context":{"source":"component","name":"DropDownPanel"}}},{"node":{"path":"/visual-design/components/errorablecheckbox/","context":{"source":"component","name":"ErrorableCheckbox"}}},{"node":{"path":"/visual-design/components/errorablecheckboxgroup/","context":{"source":"component","name":"ErrorableCheckboxGroup"}}},{"node":{"path":"/visual-design/components/errorabledate/","context":{"source":"component","name":"ErrorableDate"}}},{"node":{"path":"/visual-design/components/errorablefileinput/","context":{"source":"component","name":"ErrorableFileInput"}}},{"node":{"path":"/visual-design/components/errorablemonthyear/","context":{"source":"component","name":"ErrorableMonthYear"}}},{"node":{"path":"/visual-design/components/errorablenumberinput/","context":{"source":"component","name":"ErrorableNumberInput"}}},{"node":{"path":"/visual-design/components/errorableradiobuttons/","context":{"source":"component","name":"ErrorableRadioButtons"}}},{"node":{"path":"/visual-design/components/errorableselect/","context":{"source":"component","name":"ErrorableSelect"}}},{"node":{"path":"/visual-design/components/errorabletextarea/","context":{"source":"component","name":"ErrorableTextArea"}}},{"node":{"path":"/visual-design/components/errorabletextinput/","context":{"source":"component","name":"ErrorableTextInput"}}},{"node":{"path":"/visual-design/components/expandinggroup/","context":{"source":"component","name":"ExpandingGroup"}}},{"node":{"path":"/visual-design/components/helpmenu/","context":{"source":"component","name":"HelpMenu"}}},{"node":{"path":"/visual-design/components/iconbase/","context":{"source":"component","name":"IconBase"}}},{"node":{"path":"/visual-design/components/iconhelp/","context":{"source":"component","name":"IconHelp"}}},{"node":{"path":"/visual-design/components/iconsearch/","context":{"source":"component","name":"IconSearch"}}},{"node":{"path":"/visual-design/components/iconuser/","context":{"source":"component","name":"IconUser"}}},{"node":{"path":"/visual-design/components/loadingindicator/","context":{"source":"component","name":"LoadingIndicator"}}},{"node":{"path":"/visual-design/components/megamenu/","context":{"source":"component","name":"MegaMenu"}}},{"node":{"path":"/visual-design/components/modal/","context":{"source":"component","name":"Modal"}}},{"node":{"path":"/visual-design/components/ombinfo/","context":{"source":"component","name":"OMBInfo"}}},{"node":{"path":"/visual-design/components/pagination/","context":{"source":"component","name":"Pagination"}}},{"node":{"path":"/visual-design/components/privacyagreement/","context":{"source":"component","name":"PrivacyAgreement"}}},{"node":{"path":"/visual-design/components/progressbar/","context":{"source":"component","name":"ProgressBar"}}},{"node":{"path":"/visual-design/components/progressbutton/","context":{"source":"component","name":"ProgressButton"}}},{"node":{"path":"/visual-design/components/promobanner/","context":{"source":"component","name":"PromoBanner"}}},{"node":{"path":"/visual-design/components/searchmenu/","context":{"source":"component","name":"SearchMenu"}}},{"node":{"path":"/visual-design/components/segmentedprogressbar/","context":{"source":"component","name":"SegmentedProgressBar"}}},{"node":{"path":"/visual-design/components/sortabletable/","context":{"source":"component","name":"SortableTable"}}},{"node":{"path":"/visual-design/components/systemdownview/","context":{"source":"component","name":"SystemDownView"}}},{"node":{"path":"/visual-design/components/telephone/","context":{"source":"component","name":"Telephone"}}}]}}}')},"3dLD":function(e,n,t){"use strict";t.d(n,"a",(function(){return O}));var o=t("q1tI"),a=t.n(o),r=t("8FPV"),c=t("1nT/"),s=t("Wbzz");function m(){return a.a.createElement(s.StaticQuery,{query:"4277382034",render:function(e){return a.a.createElement(p,{items:e.components.edges.map((function(e){return{href:e.node.path,name:e.node.context.name}}))})},data:c})}function i(e){var n=e.item;return n.href?a.a.createElement("li",{key:n.name},a.a.createElement(s.Link,{to:n.href},n.name)):a.a.createElement("li",{key:n.name},n.name," (future)")}function p(e){var n=e.items,t=e.isSublist,o=void 0!==t&&t;return n.length?a.a.createElement("ul",{className:"site-c-sidenav-list"},n.map((function(e){return e.items?a.a.createElement("li",{key:e.name},o&&a.a.createElement(i,{item:e}),!o&&a.a.createElement("h2",{className:"heading-level-4"},e.name),a.a.createElement(p,{isSublist:!0,items:e.items})):"componentList"===e.query?a.a.createElement("li",{key:e.name},o&&a.a.createElement(i,{item:e}),!o&&a.a.createElement("h2",{className:"heading-level-4"},e.name),a.a.createElement(m,null)):a.a.createElement(i,{item:e,key:e.name})}))):null}var l=t("MEl4"),u=t.n(l);function d(e){var n=e.location,t=u.a.sections.find((function(e){return n.pathname.includes(e.href)}));return t?a.a.createElement("div",{className:"vads-l-col--4 site-c-content__nav"},a.a.createElement("div",{className:"site-c-sidenav"},a.a.createElement(p,{items:t.items}))):null}var b=t("Z/Vb");function h(e){var n=e.componentToMatch;return a.a.createElement(s.StaticQuery,{query:"4193446859",render:function(e){return e.components.edges.map((function(e){return n===e.node.context.name.toLowerCase()?a.a.createElement(g,{item:{name:e.node.context.name}}):""}))},data:b})}function g(e){var n=e.item,t="https://github.com/department-of-veterans-affairs/veteran-facing-services-tools/blob/master/packages/formation-react/src/components/"+n.name+"/"+n.name+".mdx";return a.a.createElement(s.Link,{to:t},"Edit this page on GitHub")}function x(e){var n=e.pathname.split("/");return a.a.createElement(h,{componentToMatch:n[3]})}var v=function(e){var n=e.pathname.replace("/veteran-facing-services-tools","");return n.length>0&&"/"===n.charAt(n.length-1)&&(n=n.substring(0,n.length-1)),n};function f(e){var n=e.location,t="https://github.com/department-of-veterans-affairs/veteran-facing-services-tools/blob/master/packages/documentation/src/pages"+v(n)+function(e){var n=v(e),t=u.a.sections.find((function(e){return n.includes(e.href)})),o=u.a.sections.find((function(e){return e.href===n}));if(null==o?void 0:o.indexmdx)return"/index";if((null==t?void 0:t.items)&&t.items.map((function(e){return Array.isArray(e.items)?e.items.find((function(e){return e.href===n})):null})).map((function(e){if((null==e?void 0:e.href)&&e.href===n)return!!(null==e?void 0:e.indexmdx)})).find((function(e){return e})))return"/index";return""}(n)+".mdx";return a.a.createElement(s.Link,{to:t},"Edit this page on GitHub")}function j(e){var n=e.location;return a.a.createElement("div",null,a.a.createElement("p",null,a.a.createElement("br",null),a.a.createElement("i",{class:"fa fa-edit","aria-hidden":"true"})," ",function(e){if(e.pathname.includes("components")){var n=e.pathname.replace("/veteran-facing-services-tools","");return a.a.createElement(x,{pathname:n})}return a.a.createElement(f,{location:e})}(n)))}function O(e){var n=e.children,t=e.location;return a.a.createElement(r.a,{location:t},a.a.createElement("div",{className:"vads-l-row"},a.a.createElement(d,{location:t}),a.a.createElement("div",{id:"main-content",className:"vads-l-col--8 site-c-content__content docSearch-content"},n,a.a.createElement(j,{location:t}))))}},"Z/Vb":function(e){e.exports=JSON.parse('{"data":{"components":{"edges":[{"node":{"path":"/visual-design/components/accepttermsprompt/","context":{"source":"component","name":"AcceptTermsPrompt"}}},{"node":{"path":"/visual-design/components/additionalinfo/","context":{"source":"component","name":"AdditionalInfo"}}},{"node":{"path":"/visual-design/components/alertbox/","context":{"source":"component","name":"AlertBox"}}},{"node":{"path":"/visual-design/components/breadcrumbs/","context":{"source":"component","name":"Breadcrumbs"}}},{"node":{"path":"/visual-design/components/collapsiblepanel/","context":{"source":"component","name":"CollapsiblePanel"}}},{"node":{"path":"/visual-design/components/dropdownpanel/","context":{"source":"component","name":"DropDownPanel"}}},{"node":{"path":"/visual-design/components/errorablecheckbox/","context":{"source":"component","name":"ErrorableCheckbox"}}},{"node":{"path":"/visual-design/components/errorablecheckboxgroup/","context":{"source":"component","name":"ErrorableCheckboxGroup"}}},{"node":{"path":"/visual-design/components/errorabledate/","context":{"source":"component","name":"ErrorableDate"}}},{"node":{"path":"/visual-design/components/errorablefileinput/","context":{"source":"component","name":"ErrorableFileInput"}}},{"node":{"path":"/visual-design/components/errorablemonthyear/","context":{"source":"component","name":"ErrorableMonthYear"}}},{"node":{"path":"/visual-design/components/errorablenumberinput/","context":{"source":"component","name":"ErrorableNumberInput"}}},{"node":{"path":"/visual-design/components/errorableradiobuttons/","context":{"source":"component","name":"ErrorableRadioButtons"}}},{"node":{"path":"/visual-design/components/errorableselect/","context":{"source":"component","name":"ErrorableSelect"}}},{"node":{"path":"/visual-design/components/errorabletextarea/","context":{"source":"component","name":"ErrorableTextArea"}}},{"node":{"path":"/visual-design/components/errorabletextinput/","context":{"source":"component","name":"ErrorableTextInput"}}},{"node":{"path":"/visual-design/components/expandinggroup/","context":{"source":"component","name":"ExpandingGroup"}}},{"node":{"path":"/visual-design/components/helpmenu/","context":{"source":"component","name":"HelpMenu"}}},{"node":{"path":"/visual-design/components/iconbase/","context":{"source":"component","name":"IconBase"}}},{"node":{"path":"/visual-design/components/iconhelp/","context":{"source":"component","name":"IconHelp"}}},{"node":{"path":"/visual-design/components/iconsearch/","context":{"source":"component","name":"IconSearch"}}},{"node":{"path":"/visual-design/components/iconuser/","context":{"source":"component","name":"IconUser"}}},{"node":{"path":"/visual-design/components/loadingindicator/","context":{"source":"component","name":"LoadingIndicator"}}},{"node":{"path":"/visual-design/components/megamenu/","context":{"source":"component","name":"MegaMenu"}}},{"node":{"path":"/visual-design/components/modal/","context":{"source":"component","name":"Modal"}}},{"node":{"path":"/visual-design/components/ombinfo/","context":{"source":"component","name":"OMBInfo"}}},{"node":{"path":"/visual-design/components/pagination/","context":{"source":"component","name":"Pagination"}}},{"node":{"path":"/visual-design/components/privacyagreement/","context":{"source":"component","name":"PrivacyAgreement"}}},{"node":{"path":"/visual-design/components/progressbar/","context":{"source":"component","name":"ProgressBar"}}},{"node":{"path":"/visual-design/components/progressbutton/","context":{"source":"component","name":"ProgressButton"}}},{"node":{"path":"/visual-design/components/promobanner/","context":{"source":"component","name":"PromoBanner"}}},{"node":{"path":"/visual-design/components/searchmenu/","context":{"source":"component","name":"SearchMenu"}}},{"node":{"path":"/visual-design/components/segmentedprogressbar/","context":{"source":"component","name":"SegmentedProgressBar"}}},{"node":{"path":"/visual-design/components/sortabletable/","context":{"source":"component","name":"SortableTable"}}},{"node":{"path":"/visual-design/components/systemdownview/","context":{"source":"component","name":"SystemDownView"}}},{"node":{"path":"/visual-design/components/telephone/","context":{"source":"component","name":"Telephone"}}}]}}}')},s4T1:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return c})),t.d(n,"default",(function(){return i}));var o=t("zLVn"),a=(t("q1tI"),t("7ljp")),r=t("3dLD"),c={},s={_frontmatter:c},m=r.a;function i(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(a.mdx)(m,Object.assign({},s,t,{components:n,mdxType:"MDXLayout"}),Object(a.mdx)("h1",{id:"debugging-tests"},"Debugging tests"),Object(a.mdx)("p",null,Object(a.mdx)("strong",{parentName:"p"},Object(a.mdx)("em",{parentName:"strong"}," Unit Tests "))),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},Object(a.mdx)("p",{parentName:"li"},"You can put a console.log in your test code. When you run the test, the output will be in the command line.")),Object(a.mdx)("li",{parentName:"ul"},Object(a.mdx)("p",{parentName:"li"},"Use Chrome devtools to debug unit tests"),Object(a.mdx)("ol",{parentName:"li"},Object(a.mdx)("li",{parentName:"ol"},Object(a.mdx)("p",{parentName:"li"},"Go to ",Object(a.mdx)("a",Object.assign({parentName:"p"},{href:"chrome://inspect/"}),"chrome://inspect/"),".")),Object(a.mdx)("li",{parentName:"ol"},Object(a.mdx)("p",{parentName:"li"},"Add a ",Object(a.mdx)("inlineCode",{parentName:"p"},"debugger")," statement in your test code and if you want to run only your test add the ",Object(a.mdx)("strong",{parentName:"p"},".only")," on your test like so. Make sure to remove the ",Object(a.mdx)("strong",{parentName:"p"},".only")," once you are done."),Object(a.mdx)("pre",{parentName:"li"},Object(a.mdx)("code",Object.assign({parentName:"pre"},{}),"  it.only('testing something', () => {\n    debugger\n\n    expect(value).to.eq(true);\n  })\n"))),Object(a.mdx)("li",{parentName:"ol"},Object(a.mdx)("p",{parentName:"li"},"run in the terminal"),Object(a.mdx)("pre",{parentName:"li"},Object(a.mdx)("code",Object.assign({parentName:"pre"},{}),"  $ BABEL_ENV=test node_modules/.bin/mocha --inspect-brk --opts src/platform/testing/unit/mocha.opts --recursive '{test,src}/**/*.unit.spec.js?(x)' src/platform/testing/unit/helper.js\n"))),Object(a.mdx)("li",{parentName:"ol"},Object(a.mdx)("p",{parentName:"li"},"Go to your Node Chrome Developer Tools. Under ",Object(a.mdx)("inlineCode",{parentName:"p"},"Remote Target")," you should see your test running. Click on the link where your test is running to open the debugger tool.")),Object(a.mdx)("li",{parentName:"ol"},Object(a.mdx)("p",{parentName:"li"},"You will want to press the debugger play button to start the program. It will initially pause on the first line of code.")),Object(a.mdx)("li",{parentName:"ol"},Object(a.mdx)("p",{parentName:"li"},"It might take awhile for the tests to setup, just be patient and eventually it will run.")),Object(a.mdx)("li",{parentName:"ol"},Object(a.mdx)("p",{parentName:"li"},"Once the test runs, your code should break at your debugger statement.")))),Object(a.mdx)("li",{parentName:"ul"},Object(a.mdx)("p",{parentName:"li"},"VSCode's debugging tool for unit tests"),Object(a.mdx)("ul",{parentName:"li"},Object(a.mdx)("li",{parentName:"ul"},"Add this ",Object(a.mdx)("inlineCode",{parentName:"li"},"Mocha Tests")," configuration to your ",Object(a.mdx)("inlineCode",{parentName:"li"},".vscode/launch.json")," file",Object(a.mdx)("pre",{parentName:"li"},Object(a.mdx)("code",Object.assign({parentName:"pre"},{}),'  {\n    "version": "0.2.0",\n    "configurations": [\n        {\n            "type": "node",\n            "request": "launch",\n            "name": "Mocha Tests",\n            "env": {"BABEL_ENV": "test"},\n            "runtimeExecutable": "${workspaceFolder}/node_modules/.bin/mocha",\n            "runtimeArgs": [\n                "--inspect",\n                "--opts",\n                "${workspaceFolder}/src/platform/testing/unit/mocha.opts",\n                "--recursive",\n                "${workspaceFolder}/{test,src}/**/*.unit.spec.js?(x)",\n                "${workspaceFolder}/src/platform/testing/unit/helper.js"\n            ],\n            "port": 9229\n        }\n    ]\n  }\n'))),Object(a.mdx)("li",{parentName:"ul"},"Now you can add breakpoints or debugger statements to debug your code through the VSCode debugger tools.")))),Object(a.mdx)("p",null,"*** End to End tests"),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},Object(a.mdx)("p",{parentName:"li"},"It's possible to set an infinite pause (",Object(a.mdx)("inlineCode",{parentName:"p"},".pause()"),") in the test code and then see what's happening at a given point in the browser where the test is running."),Object(a.mdx)("pre",{parentName:"li"},Object(a.mdx)("code",Object.assign({parentName:"pre"},{}),"  client\n    .openUrl('http://localhost:3000')\n    .waitForElementVisible('body', Timeouts.normal)\n    .pause()\n    .click('.submit_button')\n"))),Object(a.mdx)("li",{parentName:"ul"},Object(a.mdx)("p",{parentName:"li"},"Using Node Chrome DevTools. You can add a (",Object(a.mdx)("inlineCode",{parentName:"p"},".perform"),") method and either console.log or add a debugger statement to debug your code in the callback function."),Object(a.mdx)("ol",{parentName:"li"},Object(a.mdx)("li",{parentName:"ol"},Object(a.mdx)("p",{parentName:"li"},"add a perform method in your code."),Object(a.mdx)("pre",{parentName:"li"},Object(a.mdx)("code",Object.assign({parentName:"pre"},{}),"client\n  .openUrl('http://localhost:3000')\n  .waitForElementVisible('body', Timeouts.normal)\n  .perform(() => {\n    console.log(testData);\n\n    debugger\n  })\n  .click('.submit_button')\n"))),Object(a.mdx)("li",{parentName:"ol"},Object(a.mdx)("p",{parentName:"li"},"open up ",Object(a.mdx)("a",Object.assign({parentName:"p"},{href:"chrome://inspect"}),"chrome://inspect")," in your browser.")),Object(a.mdx)("li",{parentName:"ol"},Object(a.mdx)("p",{parentName:"li"},"In your terminal run. You can pass in a specific file path to test after the ",Object(a.mdx)("inlineCode",{parentName:"p"},"nightwatch.js")," or leave it blank to run all tests."),Object(a.mdx)("pre",{parentName:"li"},Object(a.mdx)("code",Object.assign({parentName:"pre"},{}),"$ BABEL_ENV=test WEB_PORT=3001 node --inspect-brk node_modules/nightwatch/bin/runner.js -c config/nightwatch.js [optional file to test]\n"))),Object(a.mdx)("li",{parentName:"ol"},Object(a.mdx)("p",{parentName:"li"},"Go to your Node Chrome Developer Tools. Under ",Object(a.mdx)("inlineCode",{parentName:"p"},"Remote Target")," you should see your test running. Click on the link where your test is running to open the debugger tool.")),Object(a.mdx)("li",{parentName:"ol"},Object(a.mdx)("p",{parentName:"li"},"You will want to press the debugger play button to start the program. It will initially pause on the first line of code.")),Object(a.mdx)("li",{parentName:"ol"},Object(a.mdx)("p",{parentName:"li"},"after the program starts it should pause at your debugger statement or you should see your console.logs in the console."))))))}i.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-getting-started-common-tasks-debugging-tests-mdx-31befab65cfa8707c008.js.map