{"version":3,"sources":["webpack:///./src/components/sidebar/SidebarItems.jsx","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./src/layouts/SidebarLayout.jsx","webpack:///./src/pages/getting-started/common-tasks/new-unit-test.mdx"],"names":["ComponentList","query","render","data","SidebarItems","items","components","edges","map","comp","href","node","path","name","context","SidebarItem","item","key","to","isSublist","length","className","Sidebar","location","sidebarSection","sidebarData","sections","find","section","pathname","includes","SidebarLayout","children","Layout","id","layoutProps","MDXContent","props","layout","DefaultLayout","this","Object","assign","parentName","React","Component","_frontmatter"],"mappings":"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","file":"component---src-pages-getting-started-common-tasks-new-unit-test-mdx-e567dae2e3fbfedccb06.js","sourcesContent":["import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nfunction ComponentList() {\n  return (\n    <StaticQuery\n      query={graphql`\n        query ComponentListQuery {\n          components: allSitePage(\n            filter: { context: { source: { eq: \"component\" } } }\n          ) {\n            edges {\n              node {\n                path\n                context {\n                  source\n                  name\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <SidebarItems\n          items={data.components.edges.map(comp => ({\n            href: comp.node.path,\n            name: comp.node.context.name,\n          }))}\n        />\n      )}\n    />\n  );\n}\n\nfunction SidebarItem({ item }) {\n  if (item.href) {\n    return (\n      <li key={item.name}>\n        <Link to={item.href}>{item.name}</Link>\n      </li>\n    );\n  }\n  return <li key={item.name}>{item.name} (future)</li>;\n}\nexport default function SidebarItems({ items, isSublist = false }) {\n  if (!items.length) {\n    return null;\n  }\n\n  return (\n    <ul className=\"site-c-sidenav-list\">\n      {items.map(item => {\n        if (item.items) {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <SidebarItems isSublist items={item.items} />\n            </li>\n          );\n        }\n        if (item.query === 'componentList') {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <ComponentList />\n            </li>\n          );\n        }\n        return <SidebarItem item={item} key={item.name} />;\n      })}\n    </ul>\n  );\n}\n","import React from 'react';\nimport SidebarItems from './SidebarItems';\nimport sidebarData from '../../sidebar';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nexport default function Sidebar({ location }) {\n  const sidebarSection = sidebarData.sections.find(section =>\n    location.pathname.includes(section.href),\n  );\n\n  if (!sidebarSection) {\n    return null;\n  }\n\n  return (\n    <div className=\"vads-l-col--4 site-c-content__nav\">\n      <div className=\"site-c-sidenav\">\n        <SidebarItems items={sidebarSection.items} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Layout from './Layout';\nimport Sidebar from '../components/sidebar/Sidebar';\n\n/**\n * Layout\n *\n * @class Layout\n * @extends {React.Component}\n */\nexport default function SidebarLayout({ children, location }) {\n  return (\n    <Layout location={location}>\n      <div className=\"vads-l-row\">\n        <Sidebar location={location} />\n        <div\n          id=\"main-content\"\n          className=\"vads-l-col--8 site-c-content__content docSearch-content\"\n        >\n          {children}\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nSidebarLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport DefaultLayout from \"/home/jenkins/workspace/ran-facing-services-tools_master/packages/documentation/src/layouts/SidebarLayout.jsx\";\nconst layoutProps = {};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = DefaultLayout;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" Layout={this.layout} layoutProps={Object.assign({}, layoutProps, props)} components={components}>\n\n      <h1 id=\"writing-a-unit-test\">Writing a unit test</h1>\n      <MDXTag name=\"p\" components={components}>{`All new code that is added to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`vets-website`}</MDXTag>{` should be unit tested and unit tests should cover at least 75% of code paths. Write unit tests as you build to make sure your form (or other component) is behaving as you expect and to help guard against future bugs.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`For example, you might create a unit test file for each page in a form and then test the following scenarios:`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`The correct number of inputs show up when you render the page.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`The correct number of fields display validation errors if you submit without entering any information.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Any conditional logic on the page displays under the correct conditions.`}</MDXTag>\n      </MDXTag>\n      <h2 id=\"unit-test-overview\">Unit test overview</h2>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`vets-website`}</MDXTag>{` repo uses:`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n            <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n                \"href\": \"https://mochajs.org/\"\n              }}>{`Mocha`}</MDXTag>{` for running unit tests`}</MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n                \"href\": \"http://chaijs.com/\"\n              }}>{`Chai`}</MDXTag>{` for test assertions`}</MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n                \"href\": \"https://airbnb.io/enzyme/\"\n              }}>{`Enzyme`}</MDXTag>{` for mounting and inspecting React components`}</MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n                \"href\": \"https://sinonjs.org/\"\n              }}>{`Sinon`}</MDXTag>{` for stubs and spies`}</MDXTag>\n          </MDXTag></MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Unit tests are `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`collocated with the application folder`}</MDXTag>{` in a test directory that matches the application directory structure:`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`- 📂 src\n  - 📂 my-application\n    - 📂 components\n      - MyComponent.jsx\n    - 📂 tests\n      - 📂 components\n        - MyComponent.unit.spec.jsx\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Mocha runs any `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`file_name`}</MDXTag>{`.unit.spec.js file located in the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`/src`}</MDXTag>{` folder. This file is usually located in a test directory close to the code being tested.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"/getting-started/common-tasks/test\"\n        }}>{`Run the test`}</MDXTag>{` locally through npm script commands, during the Jenkins build (Unit), and after merging to master.`}</MDXTag>\n      <h2 id=\"unit-test-conventions\">Unit test conventions</h2>\n      <MDXTag name=\"p\" components={components}>{`Use the following conventions when writing a unit test.`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`import { expect } from 'chai';\nimport { shallow } from 'enzyme';\nimport MyComponent from '../../components/MyComponent';\n\ndescribe('my-application', () => {\n  describe('MyComponent', () => {\n    it('renders privacy act disclosure when state.show is true', () => {\n        const componentUnderTest = shallow(<MyComponent />);\n        ...\n        expect(someCondition).to.be.true;\n\n        componentUnderTest.unmount();\n    })\n  });\n});\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`describe`}</MDXTag>{` to organize tests by application and feature. Two levels is adequate depending on the size of the application being tested.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`it`}</MDXTag>{` to describe the unit test:`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n            <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Use active voice.`}</MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Describe the behavior in terms specific to the unit.`}</MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Do not abstract the test description with business logic.`}</MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Recommended`}</MDXTag>{`:`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n                <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`it('truncates the address property when it is longer than 15 characters')`}</MDXTag></MDXTag>\n                <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`it('renders an error when props.errors contains at least one item')`}</MDXTag></MDXTag>\n              </MDXTag></MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Not recommended`}</MDXTag>{`:`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n                <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`it('shortens the address when the user has a long address')`}</MDXTag></MDXTag>\n                <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`it('shows an error when the user is not logged in')`}</MDXTag></MDXTag>\n              </MDXTag></MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Use Enzyme's `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n                \"href\": \"https://airbnb.io/enzyme/docs/api/shallow.html\"\n              }}>{`shallow`}</MDXTag>{` instead of `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n                \"href\": \"https://airbnb.io/enzyme/docs/api/mount.html\"\n              }}>{`mount`}</MDXTag>{` when possible to test components.`}</MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Always `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`unmount`}</MDXTag>{` components at the end of the test.`}</MDXTag>\n          </MDXTag></MDXTag>\n      </MDXTag>\n      <h2 id=\"unit-tests-for-forms-pages\">Unit tests for forms pages</h2>\n      <MDXTag name=\"p\" components={components}>{`Use the following guidelines when writing a unit test for forms pages.`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`import { DefinitionTester } from 'platform/testing/unit/schemaform-utils';\n\ndescribe('MyForm FormID', () => {\n\nconst {\n    schema,\n    uiSchema,\n    arrayPath,\n  } = formConfig.chapters.myFormChapter.pages.myFormPage;\n\n  it('renders myFormPage form', () => {\n    const form = mount(\n      <DefinitionTester\n        arrayPath={arrayPath}\n        pagePerItemIndex={0}\n        definitions={formConfig.defaultDefinitions}\n        schema={schema}\n        data={initialData}\n        formData={initialData}\n        uiSchema={uiSchema}\n      />,\n    );\n\n    expect(form.find('select').length).to.equal(6); // from/to months, days; country, state\n    expect(form.find('input').length).to.equal(4); // facility name, from/to years, city\n    form.unmount();\n  });\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Organize forms config tests by page.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`<DefinitionTester />`}</MDXTag>{` to render form configs for testing.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Test at least the following:`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n            <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Number of each type of input is rendered (example above)`}</MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Any conditional display logic on the page`}</MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\">{`All field level validation errors`}</MDXTag>\n          </MDXTag></MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Use the other `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`schemaform-utils`}</MDXTag>{` for filling out form data:`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"blockquote\" components={components}>\n        <MDXTag name=\"ul\" components={components} parentName=\"blockquote\">\n          <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`fillData()`}</MDXTag>{` - Enzyme helper that fires a change event with a value for an element at the given selector`}</MDXTag>\n        </MDXTag>\n        <MDXTag name=\"pre\" components={components} parentName=\"blockquote\"><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`fillData(\n  form, // mounted <DefinitionTester />\n  'select#root_blah' // selector\n  'USA', // value\n);\n`}</MDXTag></MDXTag>\n        <MDXTag name=\"ul\" components={components} parentName=\"blockquote\">\n          <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`fillDate()`}</MDXTag>{` - Enzyme helper that fills in a date field with data from the given date string`}</MDXTag>\n        </MDXTag>\n        <MDXTag name=\"pre\" components={components} parentName=\"blockquote\"><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`fillDate(\n  form, // mounted <DefinitionTester />\n  'select#root_blah' // selector\n  '1950-1-3', // value\n);\n`}</MDXTag></MDXTag>\n        <MDXTag name=\"ul\" components={components} parentName=\"blockquote\">\n          <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`selectCheckbox()`}</MDXTag>{` - Enzyme helper that fires a change event with a value for a checkbox at the given name`}</MDXTag>\n        </MDXTag>\n      </MDXTag>\n      <h2 id=\"example-unit-tests\">Example unit tests</h2>\n      <MDXTag name=\"p\" components={components}>{`VSP provides helper utilities to make writing tests easier. The following example unit tests illustrate some of these helpers. You can find these unit tests in the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`vets-website`}</MDXTag>{` repo in the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://github.com/department-of-veterans-affairs/vets-website/blob/master/src/applications/vic-v2/tests/config/veteranInformation.unit.spec.jsx\"\n        }}>{`veteranInformation.unit.spec.jsx`}</MDXTag>{` file.`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-js\"\n        }}>{`import React from 'react';\nimport { expect } from 'chai';\nimport sinon from 'sinon';\nimport { mount } from 'enzyme';\n\nimport { DefinitionTester, fillData, selectRadio, fillDate } from '../../../../platform/testing/unit/schemaform-utils.jsx';\nimport formConfig from '../config/form.js';\n\ndescribe('VIC veteran information', () => {\n  const { schema, uiSchema } = formConfig.chapters.veteranInformation.pages.veteranInformation;\n  it('should render', () => {\n    const form = mount(\n      <DefinitionTester\n        definitions={formConfig.defaultDefinitions}\n        schema={schema}\n        data=\\{{}}\n        uiSchema={uiSchema}\n        />\n    );\n\n    expect(form.find('input').length).to.equal(7);\n    expect(form.find('select').length).to.equal(4);\n  });\n\n  ...\n});\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Helpers are imported from `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://github.com/department-of-veterans-affairs/vets-website/blob/master/src/platform/testing/unit/schemaform-utils.jsx\"\n        }}><MDXTag name=\"inlineCode\" components={components} parentName=\"a\">{`schemaform-utils.jsx`}</MDXTag></MDXTag>{`. The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`DefinitionTester`}</MDXTag>{` is a component you can use to simulate a page being rendered without having to set up a whole form application with all the dependencies.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`This example uses `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"http://airbnb.io/enzyme/\"\n        }}>{`Enzyme`}</MDXTag>{` and mounts a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`DefinitionTester`}</MDXTag>{` component that is passed in the schema information from the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`veteranInformation`}</MDXTag>{` page as props. The test checks to make sure there are 7 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`input`}</MDXTag>{` and 4 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`select`}</MDXTag>{` entries on the page. When there are errors with definitions on the form pages, you will often see inputs not being rendered, so this helps check for that scenario.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`The next test in the file checks to see that the right fields are marked as required:`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-js\"\n        }}>{`  it('should not submit without required info', () => {\n    const onSubmit = sinon.spy();\n    const form = mount(\n      <DefinitionTester\n        onSubmit={onSubmit}\n        definitions={formConfig.defaultDefinitions}\n        schema={schema}\n        data=\\{{}}\n        uiSchema={uiSchema}\n        />\n    );\n\n    form.find('form').simulate('submit');\n\n    expect(form.find('.usa-input-error').length).to.equal(6);\n    expect(onSubmit.called).to.be.false;\n  });\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`This test simulates a form submission and then counts the number of error elements on the page, which is expected to be 6. The test checks that the existing validation rules are still generally in place and that additional rules haven't been added.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Finally, this example test fills in all the data and submits the form:`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-js\"\n        }}>{`  it('should submit with all info filled in', () => {\n    const onSubmit = sinon.spy();\n    const form = mount(\n      <DefinitionTester\n        onSubmit={onSubmit}\n        definitions={formConfig.defaultDefinitions}\n        schema={schema}\n        data={{}}\n        uiSchema={uiSchema}\n        />\n    );\n\n    fillData(form, 'input#root_veteranFullName_first', 'test');\n    fillData(form, 'input#root_veteranFullName_last', 'test2');\n    fillData(form, 'input#root_veteranSocialSecurityNumber', '233224343');\n    selectRadio(form, 'root_gender', 'F');\n    fillDate(form, 'root_veteranDateOfBirth', '1920-01-04');\n    fillData(form, 'select#root_serviceBranch', 'F');\n    form.find('form').simulate('submit');\n\n    expect(form.find('.usa-input-error').length).to.equal(0);\n    expect(onSubmit.called).to.be.true;\n  });\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Helper functions make the correct Enzyme calls to fill in data, so there isn't a lot of repeated code. The helpers are documented in the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`schemaform-utils.jsx`}</MDXTag>{` file. The helpers fill in data and then check that the right number of inputs appear on the page after that change. Some of the tests also directly test logic in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`depends`}</MDXTag>{` functions on the page configuration. `}</MDXTag>\n      <h2 id=\"other-utilities\">Other utilities</h2>\n      <MDXTag name=\"p\" components={components}>{`These utilities can be found in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`platform/testing/unit/helpers.js`}</MDXTag>{`:`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`mockFetch()`}</MDXTag>{` -  A function to mock the global fetch function and return the value provided in returnVal`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n            <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`resetFetch()`}</MDXTag>{` - Resets the mocked fetch set with `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`mockFetch()`}</MDXTag></MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`mockApiRequest()`}</MDXTag>{` - Decorated `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`mockFetch()`}</MDXTag>{` that adds typical API headers to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`returnVal`}</MDXTag></MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`mockMultipleApiRequests()`}</MDXTag>{` - Decorated `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`mockFetch()`}</MDXTag>{` that mocks a fetch call for each response object in an array`}</MDXTag>\n          </MDXTag></MDXTag>\n      </MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`mockFetch(\n  new Error('fake error'), // returnVal\n  false, // shouldResolve: false returns rejected promise. default is true\n);\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Note:`}</MDXTag>{` This utility can be found in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`platform/utilities/storage/localstorage.js`}</MDXTag>{`.`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`getLocalStorage()`}</MDXTag>{` - convenience accessor for local storage and implements a fallback. Useful for stubbing localstorage.`}</MDXTag>\n      </MDXTag>\n      <h2 id=\"legacy-tools\">Legacy tools</h2>\n      <MDXTag name=\"p\" components={components}>{`While ReactTestUtils and SkinDeep are used in many of our tests, use Enzyme for any updated or new tests.`}</MDXTag>\n      <h2 id=\"libraries\">Libraries</h2>\n      <MDXTag name=\"p\" components={components}>{`Unit tests use the following libraries:`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"https://mochajs.org/\"\n          }}>{`mocha.js`}</MDXTag>{`: Test framework.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"https://www.chaijs.com/\"\n          }}>{`chai.js`}</MDXTag>{`: BDD / TDD assertion library.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"https://github.com/domenic/chai-as-promised\"\n          }}>{`chai-as-promised`}</MDXTag>{`: Extends Chai with assertions about promises.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"https://sinonjs.org/\"\n          }}>{`sinon.js`}</MDXTag>{`: Standalone test spies, stubs and mocks.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"https://airbnb.io/enzyme/\"\n          }}>{`enzyme`}</MDXTag>{`: Enzyme is a JavaScript Testing utility for React that makes it easier to test your React Components' output. You can also manipulate, traverse, and in some ways simulate runtime given the output.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"https://www.npmjs.com/package/enzyme-adapter-react-16\"\n          }}>{`enzyme-adapter-react-16`}</MDXTag>{`: Enzyme React 16 integration.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"https://www.npmjs.com/package/react-dom\"\n          }}>{`react-dom`}</MDXTag>{`: React DOM Library needed for testing React Components.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"https://reactjs.org/docs/test-utils.html\"\n          }}>{`react-dom/test-utils`}</MDXTag>{`: Test utilities for React DOM.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"https://www.npmjs.com/package/react-test-renderer\"\n          }}>{`react-test-renderer`}</MDXTag>{`: This package provides an experimental React renderer that can be used to render React components to pure JavaScript objects, without depending on the DOM or a native mobile environment.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"https://airbnb.io/enzyme/docs/guides/jsdom.html\"\n          }}>{`jsdom`}</MDXTag>{`: A JavaScript implementation of the WHATWG DOM and HTML standards, for use with node.js.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"https://www.npmjs.com/package/mocha-junit-reporter\"\n          }}>{`mocha-junit-reporter`}</MDXTag>{`: Produces JUnit-style XML test results. This is used specifically for Jenkins so it can output and track test results in its system.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"https://github.com/lennym/choma\"\n          }}>{`choma`}</MDXTag>{`: Random execution order for mocha suites.`}</MDXTag>\n      </MDXTag>\n           </MDXTag>;\n  }\n\n}\nexport const _frontmatter = {};\n    "],"sourceRoot":""}