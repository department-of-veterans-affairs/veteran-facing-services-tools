{"version":3,"sources":["webpack:///./src/components/sidebar/SidebarItems.jsx","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./src/layouts/SidebarLayout.jsx","webpack:///./src/pages/platform/front-end-standards/documented-decisions/language-and-tech-stack.mdx"],"names":["ComponentList","query","render","data","SidebarItems","items","components","edges","map","comp","href","node","path","name","context","SidebarItem","item","key","to","isSublist","length","className","Sidebar","location","sidebarSection","sidebarData","sections","find","section","pathname","includes","SidebarLayout","children","Layout","id","layoutProps","MDXContent","props","layout","DefaultLayout","this","Object","assign","parentName","React","Component","_frontmatter"],"mappings":"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","file":"component---src-pages-platform-front-end-standards-documented-decisions-language-and-tech-stack-mdx-b0f848f95fd2475adb25.js","sourcesContent":["import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nfunction ComponentList() {\n  return (\n    <StaticQuery\n      query={graphql`\n        query ComponentListQuery {\n          components: allSitePage(\n            filter: { context: { source: { eq: \"component\" } } }\n          ) {\n            edges {\n              node {\n                path\n                context {\n                  source\n                  name\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <SidebarItems\n          items={data.components.edges.map(comp => ({\n            href: comp.node.path,\n            name: comp.node.context.name,\n          }))}\n        />\n      )}\n    />\n  );\n}\n\nfunction SidebarItem({ item }) {\n  if (item.href) {\n    return (\n      <li key={item.name}>\n        <Link to={item.href}>{item.name}</Link>\n      </li>\n    );\n  }\n  return <li key={item.name}>{item.name} (future)</li>;\n}\nexport default function SidebarItems({ items, isSublist = false }) {\n  if (!items.length) {\n    return null;\n  }\n\n  return (\n    <ul className=\"site-c-sidenav-list\">\n      {items.map(item => {\n        if (item.items) {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <SidebarItems isSublist items={item.items} />\n            </li>\n          );\n        }\n        if (item.query === 'componentList') {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <ComponentList />\n            </li>\n          );\n        }\n        return <SidebarItem item={item} key={item.name} />;\n      })}\n    </ul>\n  );\n}\n","import React from 'react';\nimport SidebarItems from './SidebarItems';\nimport sidebarData from '../../sidebar';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nexport default function Sidebar({ location }) {\n  const sidebarSection = sidebarData.sections.find(section =>\n    location.pathname.includes(section.href),\n  );\n\n  if (!sidebarSection) {\n    return null;\n  }\n\n  return (\n    <div className=\"vads-l-col--4 site-c-content__nav\">\n      <div className=\"site-c-sidenav\">\n        <SidebarItems items={sidebarSection.items} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Layout from './Layout';\nimport Sidebar from '../components/sidebar/Sidebar';\n\n/**\n * Layout\n *\n * @class Layout\n * @extends {React.Component}\n */\nexport default function SidebarLayout({ children, location }) {\n  return (\n    <Layout location={location}>\n      <div className=\"vads-l-row\">\n        <Sidebar location={location} />\n        <div\n          id=\"main-content\"\n          className=\"vads-l-col--8 site-c-content__content docSearch-content\"\n        >\n          {children}\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nSidebarLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport DefaultLayout from \"/home/jenkins/workspace/ran-facing-services-tools_master/packages/documentation/src/layouts/SidebarLayout.jsx\";\nconst layoutProps = {};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = DefaultLayout;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" Layout={this.layout} layoutProps={Object.assign({}, layoutProps, props)} components={components}>\n\n      <h1 id=\"languages-and-tech-stack\">Languages and Tech Stack</h1>\n      <MDXTag name=\"table\" components={components}>\n        <MDXTag name=\"thead\" components={components} parentName=\"table\">\n          <MDXTag name=\"tr\" components={components} parentName=\"thead\">\n            <MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\n              \"align\": null\n            }}></MDXTag>\n            <MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\n              \"align\": null\n            }}></MDXTag>\n            <MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\n              \"align\": null\n            }}></MDXTag>\n            <MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\n              \"align\": null\n            }}></MDXTag>\n          </MDXTag>\n        </MDXTag>\n        <MDXTag name=\"tbody\" components={components} parentName=\"table\">\n          <MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n            <MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\n              \"align\": null\n            }}><MDXTag name=\"strong\" components={components} parentName=\"td\">{`Last Decision Made:`}</MDXTag></MDXTag>\n            <MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\n              \"align\": null\n            }}>{`Yes`}</MDXTag>\n            <MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\n              \"align\": null\n            }}><MDXTag name=\"strong\" components={components} parentName=\"td\">{`Decision Date:`}</MDXTag></MDXTag>\n            <MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\n              \"align\": null\n            }}>{`05/2016`}</MDXTag>\n          </MDXTag>\n          <MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n            <MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\n              \"align\": null\n            }}><MDXTag name=\"strong\" components={components} parentName=\"td\">{`Revisit Decision:`}</MDXTag></MDXTag>\n            <MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\n              \"align\": null\n            }}>{`Yes`}</MDXTag>\n            <MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\n              \"align\": null\n            }}><MDXTag name=\"strong\" components={components} parentName=\"td\">{`Revisit Date:`}</MDXTag></MDXTag>\n            <MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\n              \"align\": null\n            }}>{`05/2017`}</MDXTag>\n          </MDXTag>\n        </MDXTag>\n      </MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Revisit Criteria:`}</MDXTag>{` The technical choices that were made inhibit writing maintainable code in a timely fashion, and/or an inability to hire new developers because the tech stack is out-of-date or not mainstream enough.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`July 2017 Update:`}</MDXTag>{` The technical decisions in this document are working effectively for the team at this time. This should likely be revisited again in another year (5/2018) to see if this is still the case.`}</MDXTag>\n      <h2 id=\"summary\">Summary</h2>\n      <MDXTag name=\"p\" components={components}>{`For building web applications, the team has made the following decision for building stuff:`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Backend Language`}</MDXTag>{`: Ruby`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Backend Web Framework`}</MDXTag>{`: Rails`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Frontend / Component Library Framework`}</MDXTag>{`: React`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Content Management`}</MDXTag>{`: Metal Smith`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"p\" components={components}>{`The below describes how we got to the decision. The nutshell of why ultimately feel to Ruby having a slight edge in the team already using it, vendor being hired to work in that stack, and maintaining a common stack across Appeals and Vets.gov.`}</MDXTag>\n      <h2 id=\"history\">History</h2>\n      <MDXTag name=\"p\" components={components}>{`Prior to August 2015, USDS @ VA had a handful of application stacks in play across several applications:`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Connect VBMS: Ruby + Java`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Appeals Database: Python (Django Framework)`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Caseflow: Ruby (Rails Framework, running on JRuby) + Angular JS Framework`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Veteran Employment Center: Ruby (Rails Framework)`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`eFolder Express: Python (Twisted Framework) + Connect VBMS (Ruby + Java)`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"p\" components={components}>{`For a team with less than 10 developers (including contractors), there was clearly tech stack sprawl. This made it hard for developers to move from project-to-project, requiring them to often learn one or more ecosystems each time.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`To alleviate this, the DSVA team made the decision to standardize around a few things:`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Language`}</MDXTag>{`: Ruby`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Web Framework`}</MDXTag>{`: Rails`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Single Page App Framework`}</MDXTag>{`: React`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n            <MDXTag name=\"li\" components={components} parentName=\"ul\">{`To be used only for high traffic pages, otherwise just use ERBs`}</MDXTag>\n          </MDXTag></MDXTag>\n      </MDXTag>\n      <MDXTag name=\"p\" components={components}>{`The biggest reason for choosing the above was that the majority of our existing applications were in Ruby and that it seemed to be a prevalent stack within the civic tech community (i.e. 18F and civic tech organizations seemed to use it more than other languages).`}</MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\"><MDXTag name=\"strong\" components={components} parentName=\"strong\">{`NOTE: The remainder of this document is more vets.gov specific, when that side of the team was re-evaluating its stance on the decision above`}</MDXTag></MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`When 2016 began, the vets.gov team began exploring how to build its platform. The platform included two key things:`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Make it easy to build forms via a re-usable component library`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Be able to provide a consistent API layer capable of communicating with internal systems (and provide an SLA consistent with industry web application)`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"p\" components={components}>{`The first point led us to building reusable components with React, and this hypothesis was tested in building HCA (Healthcare Application). This technology was settled on unanimously by developers involved that this is the approach we should continue to use.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`However, it wasn't clear what to use to build the API parts of the vets.gov Platform. The team could either stick to building things in Ruby (possibly, but not necessarily, in the Rails Framework) or experiment with Node.js (a stack used for server-side Javascript that is known for good asynchronous I/O performance). The HCA team opted to experiment with Node.js to see if it reduced learning overhead (i.e. front and backend developers only needed to know Javascript), share build architecture (use webpack), improve performance (Node.js is reportedly hyper fast for building APIs in terms of performance), and be able to re-use JS code (example: validation code shared between the front and backend). While the experiment was given the \"green light\" to build the first version of the HCA backend in Node.js, the expectation was set that if we decided as a team to use Ruby, we would eventually have to port the second version into Ruby at a later point.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`The experiment left us with the following results:`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`It did not reduce learning overhead in our case. Frontend developers avoided involvement in the backend. Despite the shared language, frontend JS is not the same as backend JS, and conceptually different things happen at each tier.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Builds did become similar between the front and the backend, both using Webpack. This simplifies knowledge around build systems (not needing to know both Webpack and Ruby Gems).`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`The application will not experience high enough volumes such that performance gains by using Node.js over Ruby are noticeable.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Isomorphic JS (JS used between both the front and the backend) did not provide noteworthy time/cost savings.`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"p\" components={components}>{`As a result of the experiment, it was not a \"no brainer\" that the team change its direction of building things in Ruby, but rather left the question open. It's clear that Node.js would be an equally good choice to Ruby, but not overwhelming such that it mandated a change in direction. Despite this, a decision wasn't clearly decided upon by the team's tech lead and the door to the decision remained open.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`With the vets.gov contract getting signed, it became necessary to make a decision on the language ecosystem in order to hire contract staff. Large parts of the contract, being that they were written ahead of the Node.js experiment, requested Ruby/Rails developers and a contracting firm that is familiar with this ecosystem was selected. Simultaneously, two new vets.gov team members were hired for the Platform team that are experienced and knowledgeable with the Node.js ecosystem.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`The contractor is leaning towards Ruby due to their organization being proficient in this ecosystem. The vets.gov Platform team members have similar reasoning for their experience with Node.js.`}</MDXTag>\n      <h2 id=\"decision-meeting---may-10-2016\">Decision Meeting - May 10, 2016</h2>\n      <MDXTag name=\"p\" components={components}>{`The meeting included several folks:`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Jeff Maher (vets.gov Tech Lead)`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Albert Wong (vets.gov HCA and Platform Teams)`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Alex Ose (vets.gov Platform Team Lead)`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Robbie Holmes (vets.gov Platform Team)`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Greg Gershman (Ad Hoc Co-Lead)`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Paul Smith (Ad Hoc Co-Lead)`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"p\" components={components}>{`The team settled on the following criteria for making a decision:`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Good for APIs`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Good performance for I/O`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Ecosystem is stable and active`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Operational complexity for DevOps is low`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Maintainable`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Can we afford to retrain folks?`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"p\" components={components}>{`The discussion bounced around across several topics, but addressed our criteria in the following ways:`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Good for APIs`}</MDXTag>{`: Both can easily be utilized to build APIs.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Good performance for I/O`}</MDXTag>{`: Node.js is slightly faster in terms of runtime performance, but speed benefits negligible for our use case.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Ecosystem is stable and active`}</MDXTag>{`: Both ecosystems are active, with ample documentation, libraries, and build systems. Problems that impact one ecosystem, impact the other. Node.js's ecosystem moves more rapidly, making it slightly less stable, but this concern is alleviated due to LTS releases.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Operational complexity for DevOps is low`}</MDXTag>{`: Same for both languages.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Maintainable`}</MDXTag>{`: Both inherently have the same maintainability levels`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Can we afford to retrain folks?`}</MDXTag>{`: If we chose Node.js, Ad Hoc would have to change its hiring criteria and might make folks that have received offers no longer eligible. If we chose Ruby, Alex Ose and Robbie Holmes on the Platform team would have to adjust to using Ruby.`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Based on our criteria, the team essentially winds up back at a crossroads, with one language not being the obvious choice over the other.`}</MDXTag>\n      <h2 id=\"other-factors\">Other Factors</h2>\n      <MDXTag name=\"p\" components={components}>{`With the stacks being equal, what are reasons to choose one language over the other? What will get us to functioning products the quickest over the next six months?`}</MDXTag>\n      <h3 id=\"why-ruby\">Why Ruby?</h3>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Team has existing applications in this stack already`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`We've already figured out tools needed to comply with VA processes (security compliance, 508 accessibility, unit testing)`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Maintains parity with the Appeals team's tech stack (Makes ATO paperwork similar, and team members can transition teams easily)`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Ad Hoc can use existing hires to send to vets.gov team`}</MDXTag>\n      </MDXTag>\n      <h3 id=\"why-nodejs\">Why Node.js</h3>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Alex Ose and Robbie Holmes are already onboard and can start building the Platform in a stack they are familiar with`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n            <MDXTag name=\"li\" components={components} parentName=\"ul\">{`USDS's hiring process hones in on polyglot developers that are able to learn new things, so this might be a non-point`}</MDXTag>\n          </MDXTag></MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`According to the Stack Overflow Annual Developer Survey, this ecosystem has already gained a popularity that has surpassed Ruby (might be easier to hire folks)`}</MDXTag>\n      </MDXTag>\n      <h3 id=\"content-management-decision\">Content Management Decision</h3>\n      <MDXTag name=\"p\" components={components}>{`The initial decision around tech stack include `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://jekyllrb.com/\"\n        }}>{`Jekyll`}</MDXTag>{` for content management. However, when the decision was made to combine all frontend React applications into a `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://github.com/department-of-veterans-affairs/vets-website\"\n        }}>{`single repo`}</MDXTag>{`, it made sense to move to a content management system driven by Node.js. The content management system chosen is `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"http://www.metalsmith.io/\"\n        }}>{`Metal Smith`}</MDXTag>{`.  The driving factor was to simplify and streamline our build process for the vets-website content and dynamic front-end components to a single process. We were using `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://webpack.js.org/\"\n        }}>{`Webpack`}</MDXTag>{` for to bundle and transpile our `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://facebook.github.io/react/\"\n        }}>{`React.js`}</MDXTag>{` components into code that could be consumed by web browsers, and the content was in Jekyll and required Ruby, and a seperate build process.  By moving to Metalsmith we were able to align our build process to one language, and because the build script for the content was just Node.js we could call Webpack from within that script.`}</MDXTag>\n      <h2 id=\"the-decision\">The Decision</h2>\n      <MDXTag name=\"p\" components={components}>{`For building web applications, the team has made the following decision for building stuff:`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Backend Language`}</MDXTag>{`: Ruby`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Backend Web Framework`}</MDXTag>{`: Undefined (Rails is preferred, but other frameworks acceptable too based on use cases)`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Frontend / Component Library Framework`}</MDXTag>{`: React`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Content Management`}</MDXTag>{`: Metal Smith`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"p\" components={components}>{`In the short term, standardizing on these languages and frameworks enables our small team to have a consistent tech stack to learn and hire against. In the long term, we'll aim to utilize API-driven development (i.e. REST/JSON) such that it is easy for the future version of our team to pivot to newer technologies as becomes needed.`}</MDXTag>\n           </MDXTag>;\n  }\n\n}\nexport const _frontmatter = {};\n    "],"sourceRoot":""}