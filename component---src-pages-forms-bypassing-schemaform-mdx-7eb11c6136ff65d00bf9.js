(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{"3dLD":function(e,t,a){"use strict";a.d(t,"a",(function(){return b}));var n=a("q1tI"),i=a.n(n),o=a("FRpb");function r(e){var t=e.sourceUrl;return t?i.a.createElement("div",null,i.a.createElement("i",{class:"fa fa-edit","aria-hidden":"true"})," ",i.a.createElement("a",{href:t},"Edit this page on GitHub")):null}var l=a("8FPV");function b(e){var t=e.children,a=e.location,n=e.pageContext;return i.a.createElement(l.a,{location:a},i.a.createElement("div",{className:"vads-l-row site-l-wrapper"},i.a.createElement(o.a,{location:a}),i.a.createElement("div",{id:"main-content",className:"vads-l-col--8 site-c-content__content docSearch-content"},t,i.a.createElement(r,{sourceUrl:n.sourceUrl}))))}},FRpb:function(e,t,a){"use strict";a.d(t,"a",(function(){return p}));var n=a("q1tI"),i=a.n(n),o=a("Wbzz");function r(e){var t=e.item;return t.href?i.a.createElement("li",{key:t.name},i.a.createElement(o.Link,{to:t.href},t.name)):i.a.createElement("li",{key:t.name},t.name," (future)")}function l(e){var t=e.items,a=e.isSublist,n=void 0!==a&&a;return t.length?i.a.createElement("ul",{className:"site-c-sidenav-list"},t.map((function(e){return e.items?i.a.createElement("li",{key:e.name},n&&i.a.createElement(r,{item:e}),!n&&i.a.createElement("h2",{className:"heading-level-4"},e.name),i.a.createElement(l,{isSublist:!0,items:e.items})):i.a.createElement(r,{item:e,key:e.name})}))):null}var b=a("MEl4"),m=a.n(b);function p(e){var t=e.location,a=m.a.sections.find((function(e){return t.pathname.includes(e.href)}));return a?i.a.createElement("div",{className:"vads-l-col--4 site-c-content__nav"},i.a.createElement("div",{className:"site-c-sidenav"},i.a.createElement(l,{items:a.items}))):null}},zIMr:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return l})),a.d(t,"default",(function(){return p}));var n=a("zLVn"),i=(a("q1tI"),a("7ljp")),o=a("3dLD"),r=["components"],l={},b={_frontmatter:l},m=o.a;function p(e){var t=e.components,a=Object(n.a)(e,r);return Object(i.b)(m,Object.assign({},b,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"bypassing-the-schemaform"},"Bypassing the SchemaForm"),Object(i.b)("p",null,"The schema-based forms library can be used to quickly build simple form applications. It handles a lot of common things under the hood such as validation, routing, and state management."),Object(i.b)("p",null,"For more complicated pages, however, it can be very difficult to work with the ",Object(i.b)("inlineCode",{parentName:"p"},"schema")," and ",Object(i.b)("inlineCode",{parentName:"p"},"uiSchema")," to do what you need to. This is where bypassing the ",Object(i.b)("inlineCode",{parentName:"p"},"SchemaForm")," comes in."),Object(i.b)("h2",{id:"what-does-bypassing-the-schemaform-mean"},'What does "bypassing the SchemaForm" mean?'),Object(i.b)("p",null,"The schema-based forms library in ",Object(i.b)("inlineCode",{parentName:"p"},"vets-website")," renders a component called ",Object(i.b)("inlineCode",{parentName:"p"},"SchemaForm"),". This component uses ",Object(i.b)("inlineCode",{parentName:"p"},"react-jsonschema-form")," to render form fields using the ",Object(i.b)("inlineCode",{parentName:"p"},"schema")," and ",Object(i.b)("inlineCode",{parentName:"p"},"uiSchema")," for a page in the ",Object(i.b)("inlineCode",{parentName:"p"},"formConfig"),". ",Object(i.b)("strong",{parentName:"p"},"Bypassing the ",Object(i.b)("inlineCode",{parentName:"strong"},"SchemaForm")," component means you can render a form page using plain React components.")," No ",Object(i.b)("inlineCode",{parentName:"p"},"schema"),". No ",Object(i.b)("inlineCode",{parentName:"p"},"uiSchema"),"."),Object(i.b)("p",null,"You may bypass ",Object(i.b)("inlineCode",{parentName:"p"},"SchemaForm")," for one page at a time. This means you can use ",Object(i.b)("inlineCode",{parentName:"p"},"schema")," and ",Object(i.b)("inlineCode",{parentName:"p"},"uiSchema")," when it's helpful, and ignore it when it isn't."),Object(i.b)("h2",{id:"how-to-bypass-schemaform"},"How to bypass SchemaForm"),Object(i.b)("p",null,"In your form's ",Object(i.b)("inlineCode",{parentName:"p"},"formConfig")," for a given page, you may supply ",Object(i.b)("inlineCode",{parentName:"p"},"CustomPage")," and ",Object(i.b)("inlineCode",{parentName:"p"},"CustomPageReview")," properties which contain React components."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Example")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"// form/config.js\nimport CustomPage from './CustomPage'; // React component\nimport CustomPageReview from './CustomPageReview'; // React component\n\nexport const formConfig = {\n  // Some config here...\n  chapters: {\n    chapterOneName: {\n      // Chapter config here...\n      pages: {\n        mySchemalessPage: {\n          path: 'my-schemaless-page',\n          title: 'Bypassing the SchemaForm',\n          CustomPage,\n          CustomPageReview,\n          schema: { // This does still need to be here or it'll throw an error\n            type: 'object',\n            properties: {}, // But the properties can be empty\n          },\n          uiSchema: {},\n        }\n      }\n    }\n  }\n}\n")),Object(i.b)("p",null,"There are a few important things going on here:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"We pass ",Object(i.b)("inlineCode",{parentName:"li"},"CustomPage")," to the page's config"),Object(i.b)("li",{parentName:"ol"},"We pass ",Object(i.b)("inlineCode",{parentName:"li"},"CustomPageReview")," to the page's config"),Object(i.b)("li",{parentName:"ol"},"We ",Object(i.b)("em",{parentName:"li"},"still")," supply a ",Object(i.b)("inlineCode",{parentName:"li"},"schema")," and ",Object(i.b)("inlineCode",{parentName:"li"},"uiSchema"),", but leave them (essentially) empty",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"If we leave them out entirely, the library will throw an error")))),Object(i.b)("h3",{id:"custompage-props"},"CustomPage props"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"name"),": String",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The name of the page in the ",Object(i.b)("inlineCode",{parentName:"li"},"formConfig")),Object(i.b)("li",{parentName:"ul"},"In the example above, it's ",Object(i.b)("inlineCode",{parentName:"li"},"mySchemalessPage")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"title"),": String",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The title of the page in the ",Object(i.b)("inlineCode",{parentName:"li"},"formConfig")),Object(i.b)("li",{parentName:"ul"},"In the example above, it's ",Object(i.b)("inlineCode",{parentName:"li"},"Bypassing the SchemaForm")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"data"),": Object",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The entire form data"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Important:")," It contains the form data for the entire form, not just for the page"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"pagePerItemIndex"),": Number | undefined",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"If ",Object(i.b)("inlineCode",{parentName:"li"},"showPagePerItem")," is true for the page, this contains the array index"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"onReviewPage"),": Boolean",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"True if the page is being rendered in edit mode on the review page"),Object(i.b)("li",{parentName:"ul"},"This is useful for rendering either the form navigation buttons or the update button on the review page",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"See ",Object(i.b)("a",{parentName:"li",href:"#render-the-form-navigation-or-update-button"},"Common tasks")," below for more information"))))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"trackingPrefix"),": String",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The tracking prefix specified in for the form in ",Object(i.b)("inlineCode",{parentName:"li"},"formConfig")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"uploadFile"),": Function",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The function to call to upload a file"),Object(i.b)("li",{parentName:"ul"},"Not supplied when ",Object(i.b)("inlineCode",{parentName:"li"},"CustomPage")," is rendered on the review page"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"goBack"),": () => void",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The function to call to move back a page in the form"),Object(i.b)("li",{parentName:"ul"},"Not supplied when ",Object(i.b)("inlineCode",{parentName:"li"},"CustomPage")," is rendered on the review page"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"goForward"),": () => void",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The function to call to move forward a page in the form"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Caveat:")," Rather than assigning this to a button's ",Object(i.b)("inlineCode",{parentName:"li"},"onClick")," event handler, make that button a submit button and use ",Object(i.b)("inlineCode",{parentName:"li"},"<form onSubmit={goForward}>...</form>")," so the user only navigates to the next page if there are no validation errors",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"See ",Object(i.b)("a",{parentName:"li",href:"#render-the-form-navigation-or-update-button"},"Common tasks")," below for more information"))))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"goToPath"),": Function",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Function to call if you need to go to a specific path within the form"),Object(i.b)("li",{parentName:"ul"},"When callign this function with a valid active path, it will return you to that page. An invalid paths will send you back one page, so be careful. For example, ",Object(i.b)("inlineCode",{parentName:"li"},"goToPath('/second-page')")),Object(i.b)("li",{parentName:"ul"},"Not supplied when ",Object(i.b)("inlineCode",{parentName:"li"},"CustomPage")," is rendered on the review page"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"updatePage"),": () => void",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Supplied only when rendering ",Object(i.b)("inlineCode",{parentName:"li"},"CustomPage")," on the review page"),Object(i.b)("li",{parentName:"ul"},"The function to call when the user is finished editing the data")))),Object(i.b)("h3",{id:"custompagereview-props"},"CustomPageReview props"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"editPage"),": () => void",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The function to call to initiate editing the data on the review page"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"name"),": String",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The name of the page in the ",Object(i.b)("inlineCode",{parentName:"li"},"formConfig")),Object(i.b)("li",{parentName:"ul"},"In the example above, it's ",Object(i.b)("inlineCode",{parentName:"li"},"mySchemalessPage")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"title"),": String",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The title of the page in the ",Object(i.b)("inlineCode",{parentName:"li"},"formConfig")),Object(i.b)("li",{parentName:"ul"},"In the example above, it's ",Object(i.b)("inlineCode",{parentName:"li"},"Bypassing the SchemaForm")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"data"),": Object",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The entire form data"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Important:")," It contains the form data for the entire form, not just for the page"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"pagePerItemIndex"),": Number | undefined",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"If ",Object(i.b)("inlineCode",{parentName:"li"},"showPagePerItem")," is true for the page, this contains the array index")))),Object(i.b)("h2",{id:"the-review-page"},"The review page"),Object(i.b)("p",null,"There are three options for showing your page content on the review page:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Use the ",Object(i.b)("inlineCode",{parentName:"li"},"CustomPageReview")),Object(i.b)("li",{parentName:"ol"},"Automatically render the page content using ",Object(i.b)("inlineCode",{parentName:"li"},"schema")," and ",Object(i.b)("inlineCode",{parentName:"li"},"uiSchema"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Important:")," You may still use ",Object(i.b)("inlineCode",{parentName:"li"},"CustomPage")," with this option; ",Object(i.b)("a",{parentName:"li",href:"#using-schema-and-uischema"},"see below")))),Object(i.b)("li",{parentName:"ol"},"Hide the page entirely")),Object(i.b)("h3",{id:"using-custompagereview"},"Using CustomPageReview"),Object(i.b)("p",null,"To bypass the automatic data rendering, you may supply a ",Object(i.b)("inlineCode",{parentName:"p"},"CustomPageReview"),". In your page's config:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Supply a React component to ",Object(i.b)("inlineCode",{parentName:"li"},"CustomPageReview"))),Object(i.b)("p",null,"See ",Object(i.b)("a",{parentName:"p",href:"#custompagereview-props"},Object(i.b)("inlineCode",{parentName:"a"},"CustomPageReview")," props")," for the props that will be passed to this component."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Note:")," You may use ",Object(i.b)("inlineCode",{parentName:"p"},"CustomPageReview")," with or without ",Object(i.b)("inlineCode",{parentName:"p"},"CustomPage"),". If your page has a ",Object(i.b)("inlineCode",{parentName:"p"},"CustomPage")," component and ",Object(i.b)("inlineCode",{parentName:"p"},"CustomPageReview"),", the ",Object(i.b)("inlineCode",{parentName:"p"},"schema")," and ",Object(i.b)("inlineCode",{parentName:"p"},"uiSchema")," will be ignored altogether, so you don't need to spend time writing them."),Object(i.b)("h3",{id:"using-schema-and-uischema"},"Using schema and uiSchema"),Object(i.b)("p",null,"You may bypass the ",Object(i.b)("inlineCode",{parentName:"p"},"SchemaForm")," on the form page but still retain the automatic review page data rendering. Do the following in your page's config:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Add the ",Object(i.b)("inlineCode",{parentName:"li"},"schema")," and ",Object(i.b)("inlineCode",{parentName:"li"},"uiSchema")," as normal"),Object(i.b)("li",{parentName:"ol"},"Set ",Object(i.b)("inlineCode",{parentName:"li"},"CustomPageReview")," to ",Object(i.b)("inlineCode",{parentName:"li"},"null"),".")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Note:")," If you have a ",Object(i.b)("inlineCode",{parentName:"p"},"CustomPage")," but ",Object(i.b)("inlineCode",{parentName:"p"},"CustomPageReview")," is ",Object(i.b)("inlineCode",{parentName:"p"},"undefined")," and ",Object(i.b)("inlineCode",{parentName:"p"},"schema.properties")," is empty, the forms library will throw an error. This is to make sure you're deliberately choosing to supply a custom page, use the automatic data rendering, or hide the page."),Object(i.b)("h3",{id:"hiding-the-page"},"Hiding the page"),Object(i.b)("p",null,"If you want the page to appear in the normal form flow but not on the review page, do the following in your page's config"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Supply a ",Object(i.b)("inlineCode",{parentName:"li"},"CustomPage")),Object(i.b)("li",{parentName:"ol"},"Set ",Object(i.b)("inlineCode",{parentName:"li"},"CustomPageReview")," to ",Object(i.b)("inlineCode",{parentName:"li"},"null")),Object(i.b)("li",{parentName:"ol"},"Set ",Object(i.b)("inlineCode",{parentName:"li"},"schema.properties")," to ",Object(i.b)("inlineCode",{parentName:"li"},"{}"))),Object(i.b)("h2",{id:"common-tasks"},"Common tasks"),Object(i.b)("p",null,"There are a few common tasks you'll need to perform when bypassing the ",Object(i.b)("inlineCode",{parentName:"p"},"SchemaForm"),"."),Object(i.b)("h3",{id:"render-the-form-navigation-or-update-button"},"Render the form navigation or update button"),Object(i.b)("p",null,"When using a ",Object(i.b)("inlineCode",{parentName:"p"},"CustomPage"),", you'll need to make sure to render the form navigation and review page update buttons. To simplify this, the forms library has a ",Object(i.b)("inlineCode",{parentName:"p"},"FormNavButtons")," component."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Example")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"// CustomPage.jsx\nimport React from 'react';\nimport { Formik } from 'formik';\nimport { TextField } from '@department-of-veterans-affairs/formulate';\n\nimport FormNavButtons from '~/platform/forms-system/src/js/components/FormNavButtons';\nimport Form from '~/platform/forms/formulate-integration/Form';\n\nconst CustomPage = ({\n  data,\n  goBack,\n  goForward,\n  onReviewPage,\n  updatePage,\n}) => {\n  const navButtons = <FormNavButtons goBack={goBack} submitToContinue />;\n  const updateButton = <button type=\"submit\">Review update button</button>;\n  return (\n    <Formik\n      initialValues={data}\n      onSubmit={onReviewPage ? updatePage : goForward}\n    >\n      <Form>\n        <TextField\n          name=\"theData\"\n          label=\"The data to collect\"\n          required\n        />\n        {onReviewPage ? updateButton : navButtons}\n      </Form>\n    </Formik>\n  );\n};\n\nexport default CustomPage;\n")),Object(i.b)("p",null,"There are a few important parts to note here:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"The navigation buttons are imported from ",Object(i.b)("inlineCode",{parentName:"li"},"~/platform/forms-system/src/js/components/FormNavButtons")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"goForward")," is supplied to the ",Object(i.b)("inlineCode",{parentName:"li"},"onSubmit")," event handler prop and ",Object(i.b)("inlineCode",{parentName:"li"},"submitToContinue")," is passed to ",Object(i.b)("inlineCode",{parentName:"li"},"FormNavButtons"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"This is so the ",Object(i.b)("inlineCode",{parentName:"li"},"Continue")," button is ",Object(i.b)("inlineCode",{parentName:"li"},'type="submit"')," and navigation only occurs if there are no validation errors"),Object(i.b)("li",{parentName:"ul"},"If ",Object(i.b)("inlineCode",{parentName:"li"},"const navButtons = <FormNavButtons goBack={goBack} goForward={goForward} />"),", then the user would continue to the next page even if there were validation errors"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"updateButton")," is ",Object(i.b)("inlineCode",{parentName:"li"},'type="submit"')," for the same reasons outlined above",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"We call ",Object(i.b)("inlineCode",{parentName:"li"},"updatePage")," if there are no validation errors by supplying ",Object(i.b)("inlineCode",{parentName:"li"},"onSubmit={updatePage}")," to ",Object(i.b)("inlineCode",{parentName:"li"},"<Formik>")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"{onReviewPage ? updateButton : navButtons }")," renders the context-appropriate buttons depending on where the ",Object(i.b)("inlineCode",{parentName:"li"},"CustomPage")," is rendered")),Object(i.b)("h3",{id:"render-the-edit-button-on-custompagereview"},"Render the edit button on CustomPageReview"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},"const CustomPageReview = ({ data, editPage }) => (\n  <>\n    <h1>\n      Hello, {data.name.first} {data.name.last}!\n    </h1>\n    <button onClick={editPage}>\n      Edit\n    </button>\n  </>\n);\n\nexport default CustomPageReview;\n")),Object(i.b)("p",null,"There's less going on here. Just make sure your ",Object(i.b)("inlineCode",{parentName:"p"},"CustomPageReview")," has an edit button that calls ",Object(i.b)("inlineCode",{parentName:"p"},"editPage")," if the user needs to be able to edit the data on that page."),Object(i.b)("h2",{id:"using-formulate"},"Using Formulate"),Object(i.b)("p",null,"See ",Object(i.b)("a",{parentName:"p",href:"#render-the-form-navigation-or-update-button"},"Render the form navigation or update button")," for an example of how to use ",Object(i.b)("a",{parentName:"p",href:"https://github.com/department-of-veterans-affairs/formulate"},"Formulate")," inside the schema-based forms library."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"The important parts")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"<Formik>")," is used to wrap the form contents on the page",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"https://formik.org/docs/overview"},"Formik")," is the library that Formulate uses for form state management"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"data")," is passed to ",Object(i.b)("inlineCode",{parentName:"li"},"initialValues")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"goForward")," is passed to ",Object(i.b)("inlineCode",{parentName:"li"},"onSubmit")," so navigation to the next page only occurs if there are no validation errors"),Object(i.b)("li",{parentName:"ul"},"See the ",Object(i.b)("a",{parentName:"li",href:"https://formik.org/docs/tutorial"},"Formik tutorial")," for more information on how to use Formik"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Form")," is imported form the ",Object(i.b)("inlineCode",{parentName:"li"},"src/platform/forms/formulate-integration/Form.jsx"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"This component observes the Formik state and dispatches the schema-based forms library's ",Object(i.b)("inlineCode",{parentName:"li"},"setData")," redux action to update the redux store containing the form data so its accessible to the rest of the forms library"))),Object(i.b)("li",{parentName:"ul"},"The ",Object(i.b)("a",{parentName:"li",href:"https://formik.org/docs/api/field#name"},Object(i.b)("inlineCode",{parentName:"a"},"name")," prop")," supplied to Formulate's ",Object(i.b)("inlineCode",{parentName:"li"},"TextField")," uses dot notation to represent the path to the data in Formik; this corresponds to redux store at ",Object(i.b)("inlineCode",{parentName:"li"},"form.data.<name>")," when ",Object(i.b)("inlineCode",{parentName:"li"},"initialValues")," is set to ",Object(i.b)("inlineCode",{parentName:"li"},"data"))),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Note:")," The schema-based forms library renders inputs with ",Object(i.b)("inlineCode",{parentName:"p"},"name")," attributes prefixed with ",Object(i.b)("inlineCode",{parentName:"p"},"root_"),". When using Formulate / Formik, the input ",Object(i.b)("inlineCode",{parentName:"p"},"name")," attributes do ",Object(i.b)("em",{parentName:"p"},"not")," follow the same naming convention, so the automated form tester may not work for these pages."))}p.isMDXComponent=!0},zLVn:function(e,t,a){"use strict";function n(e,t){if(null==e)return{};var a,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}a.d(t,"a",(function(){return n}))}}]);
//# sourceMappingURL=component---src-pages-forms-bypassing-schemaform-mdx-7eb11c6136ff65d00bf9.js.map