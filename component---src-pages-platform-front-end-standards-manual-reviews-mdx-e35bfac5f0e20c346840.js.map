{"version":3,"sources":["webpack:///./src/components/sidebar/SidebarItems.jsx","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./src/layouts/SidebarLayout.jsx","webpack:///./src/pages/platform/front-end-standards/manual-reviews.mdx"],"names":["ComponentList","query","render","data","SidebarItems","items","components","edges","map","comp","href","node","path","name","context","SidebarItem","item","key","to","isSublist","length","className","Sidebar","location","sidebarSection","sidebarData","sections","find","section","pathname","includes","SidebarLayout","children","Layout","id","layoutProps","MDXContent","props","layout","DefaultLayout","this","Object","assign","parentName","React","Component","_frontmatter"],"mappings":"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","file":"component---src-pages-platform-front-end-standards-manual-reviews-mdx-e35bfac5f0e20c346840.js","sourcesContent":["import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nfunction ComponentList() {\n  return (\n    <StaticQuery\n      query={graphql`\n        query ComponentListQuery {\n          components: allSitePage(\n            filter: { context: { source: { eq: \"component\" } } }\n          ) {\n            edges {\n              node {\n                path\n                context {\n                  source\n                  name\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <SidebarItems\n          items={data.components.edges.map(comp => ({\n            href: comp.node.path,\n            name: comp.node.context.name,\n          }))}\n        />\n      )}\n    />\n  );\n}\n\nfunction SidebarItem({ item }) {\n  if (item.href) {\n    return (\n      <li key={item.name}>\n        <Link to={item.href}>{item.name}</Link>\n      </li>\n    );\n  }\n  return <li key={item.name}>{item.name} (future)</li>;\n}\nexport default function SidebarItems({ items, isSublist = false }) {\n  if (!items.length) {\n    return null;\n  }\n\n  return (\n    <ul className=\"site-c-sidenav-list\">\n      {items.map(item => {\n        if (item.items) {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <SidebarItems isSublist items={item.items} />\n            </li>\n          );\n        }\n        if (item.query === 'componentList') {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <ComponentList />\n            </li>\n          );\n        }\n        return <SidebarItem item={item} key={item.name} />;\n      })}\n    </ul>\n  );\n}\n","import React from 'react';\nimport SidebarItems from './SidebarItems';\nimport sidebarData from '../../sidebar';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nexport default function Sidebar({ location }) {\n  const sidebarSection = sidebarData.sections.find(section =>\n    location.pathname.includes(section.href),\n  );\n\n  if (!sidebarSection) {\n    return null;\n  }\n\n  return (\n    <div className=\"vads-l-col--4 site-c-content__nav\">\n      <div className=\"site-c-sidenav\">\n        <SidebarItems items={sidebarSection.items} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Layout from './Layout';\nimport Sidebar from '../components/sidebar/Sidebar';\n\n/**\n * Layout\n *\n * @class Layout\n * @extends {React.Component}\n */\nexport default function SidebarLayout({ children, location }) {\n  return (\n    <Layout location={location}>\n      <div className=\"vads-l-row\">\n        <Sidebar location={location} />\n        <div\n          id=\"main-content\"\n          className=\"vads-l-col--8 site-c-content__content docSearch-content\"\n        >\n          {children}\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nSidebarLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport DefaultLayout from \"/home/jenkins/workspace/ran-facing-services-tools_master/packages/documentation/src/layouts/SidebarLayout.jsx\";\nconst layoutProps = {};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = DefaultLayout;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" Layout={this.layout} layoutProps={Object.assign({}, layoutProps, props)} components={components}>\n\n      <h1 id=\"automated-code-quality\">Automated code quality</h1>\n      <MDXTag name=\"p\" components={components}>{`Each pull request (PR) on `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`vets-website`}</MDXTag>{` runs through an automated process that looks for code additions and modifications that don't meet code quality standards. If no issues are found, the code does not need to be reviewed by a VSP engineer. If a potential issue is found, a bot will leave an automated comment and request a manual review from the `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`frontend-review-group`}</MDXTag>{`.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`   `}<MDXTag name=\"img\" components={components} parentName=\"p\" props={{\n          \"src\": \"https://images.zenhubusercontent.com/5e387fa505ac7e30c820a2da/a09c4c8c-ae32-4142-8fa5-0fc81b6a1892\",\n          \"alt\": \"Screen Shot\"\n        }}></MDXTag></MDXTag>\n      <h2 id=\"manual-reviews\">Manual reviews</h2>\n      <MDXTag name=\"p\" components={components}>{`The following items trigger a manual review:`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`A call to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Sentry`}</MDXTag></MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`ESLint being disabled`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`An icon is added with `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`<i ...`}</MDXTag></MDXTag>\n      </MDXTag>\n      <h3 id=\"sentry-calls\">Sentry calls</h3>\n      <MDXTag name=\"p\" components={components}>{`VSP reviews logs to Sentry to ensure that any new logs are useful and do not contain personally identifiable information (PII).`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Examples:`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Do not log an entire request response if all that's important is an error code.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Do not log PII such as names, emails, or user IDs.`}</MDXTag>\n      </MDXTag>\n      <h3 id=\"eslint\">ESLint</h3>\n      <MDXTag name=\"p\" components={components}>{`VSP enforces `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://github.com/department-of-veterans-affairs/va.gov-team/tree/master/platform/engineering/frontend/eslint\"\n        }}>{`ESLint rules`}</MDXTag>{` through CircleCI to enforce code quality. ESLint rules are included in the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`.eslintrc`}</MDXTag>{` file, which is located in the root folder. Any rules that VSP is `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://github.com/department-of-veterans-affairs/va.gov-team/blob/master/platform/engineering/frontend/eslint/adding-new-rules.md\"\n        }}>{`testing for inclusion`}</MDXTag>{` are located in the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://github.com/department-of-veterans-affairs/vets-website/blob/master/circle.eslint.json\"\n        }}><MDXTag name=\"inlineCode\" components={components} parentName=\"a\">{`circle.eslint.json`}</MDXTag></MDXTag>{` file.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`When ESLint rules are disabled, VSP will review each case individually. `}</MDXTag>\n      <h3 id=\"icons\">Icons</h3>\n      <MDXTag name=\"p\" components={components}>{`VSP uses Font Awesome as a dependency, which uses the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<i>`}</MDXTag>{` tag for adding icons. Sometimes an icon is used as decoration, but other times it is used to convey meaning to the user. VSP reviews the code to ensure that whenever an icon is being used to convey meaning, the meaning is also conveyed to a screen reader.`}</MDXTag>\n      <h2 id=\"actions-to-take\">Actions to take</h2>\n      <MDXTag name=\"p\" components={components}>{`If a manual review is triggered, you can use the error information provided in the comment to identify the problem and resolve any errors. A member of the VSP team will review the PR and confirm that all issues have been resolved or will follow up with more feedback. `}</MDXTag>\n           </MDXTag>;\n  }\n\n}\nexport const _frontmatter = {};\n    "],"sourceRoot":""}