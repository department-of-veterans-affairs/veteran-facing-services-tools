(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{"3dLD":function(e,t,a){"use strict";a.d(t,"a",(function(){return o}));var n=a("q1tI"),s=a.n(n),r=a("FRpb");function i(e){var t=e.sourceUrl;return t?s.a.createElement("div",null,s.a.createElement("i",{class:"fa fa-edit","aria-hidden":"true"})," ",s.a.createElement("a",{href:t},"Edit this page on GitHub")):null}var l=a("8FPV");function o(e){var t=e.children,a=e.location,n=e.pageContext;return s.a.createElement(l.a,{location:a},s.a.createElement("div",{className:"vads-l-row site-l-wrapper"},s.a.createElement(r.a,{location:a}),s.a.createElement("div",{id:"main-content",className:"vads-l-col--8 site-c-content__content docSearch-content"},t,s.a.createElement(i,{sourceUrl:n.sourceUrl}))))}},EWft:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return l})),a.d(t,"default",(function(){return p}));var n=a("zLVn"),s=(a("q1tI"),a("7ljp")),r=a("3dLD"),i=["components"],l={},o={_frontmatter:l},c=r.a;function p(e){var t=e.components,a=Object(n.a)(e,i);return Object(s.b)(c,Object.assign({},o,a,{components:t,mdxType:"MDXLayout"}),Object(s.b)("h1",{id:"writing-an-end-to-end-test"},"Writing an end-to-end test"),Object(s.b)("p",null,"Front end engineers use end-to-end (e2e) tests in ",Object(s.b)("inlineCode",{parentName:"p"},"vets-website")," to validate multipage applications with client-side routing. They are primarily used to assert that:"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"client applications render their inputs"),Object(s.b)("li",{parentName:"ul"},"client-side navigation occurs when the required fields are populated")),Object(s.b)("h2",{id:"end-to-end-testing-overview"},"End-to-end testing overview"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"vets-website")," uses ",Object(s.b)("a",{parentName:"li",href:"https://www.cypress.io/"},"Cypress")," to write end-to-end tests. See ",Object(s.b)("a",{parentName:"li",href:"https://github.com/department-of-veterans-affairs/va.gov-team/blob/master/platform/testing/end-to-end/cypress-best-practices-on-vsp.md"},"Cypress Best Practices on VSP")," and ",Object(s.b)("a",{parentName:"li",href:"https://github.com/department-of-veterans-affairs/va.gov-team/blob/master/platform/testing/end-to-end/vsp-cypress-resources.md"},"Cypress Resources Reference Guide")," for detailed use cases and documented helpers/mocks.",Object(s.b)("ul",{parentName:"li"},Object(s.b)("li",{parentName:"ul"},"Some older end-to-end tests were written in ",Object(s.b)("a",{parentName:"li",href:"https://nightwatchjs.org"},"Nightwatch")," prior to Cypress. All new tests should be written using Cypress moving forward and Nightwatch tests are in the process of being deprecated/migrated to Cypress."),Object(s.b)("li",{parentName:"ul"},"Refer to the ",Object(s.b)("a",{parentName:"li",href:"https://github.com/department-of-veterans-affairs/va.gov-team/blob/master/platform/testing/end-to-end/cypress-migration-guide.md"},"Cypress migration guide")," to convert old tests or write new tests."))),Object(s.b)("li",{parentName:"ul"},"End-to-end tests are ",Object(s.b)("strong",{parentName:"li"},"collocated in application folder")," with the application they test"),Object(s.b)("li",{parentName:"ul"},"Cypress tests can be run using the command ",Object(s.b)("inlineCode",{parentName:"li"},"yarn cy:run")," (after ",Object(s.b)("inlineCode",{parentName:"li"},"yarn watch")," to ",Object(s.b)("inlineCode",{parentName:"li"},"yarn build"),").")),Object(s.b)("h2",{id:"end-to-end-tests-conventions"},"End-to-end tests conventions"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"Use a comment to indicate what page is being tested"),Object(s.b)("li",{parentName:"ul"},"Disable scrolling"),Object(s.b)("li",{parentName:"ul"},"Assert navigation is successful"),Object(s.b)("li",{parentName:"ul"},"Use functions from the helper file to perform all actions on the page")),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"These are recommendations, not requirements, except where labeled as 'REQUIRED'")),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"Separate navigation from field input",Object(s.b)("ul",{parentName:"li"},Object(s.b)("li",{parentName:"ul"},"Use a ",Object(s.b)("strong",{parentName:"li"},"main test file")," for navigation, assertions, and calls helpers"),Object(s.b)("li",{parentName:"ul"},"Use a ",Object(s.b)("strong",{parentName:"li"},"helper file")," for filling out forms"))),Object(s.b)("li",{parentName:"ul"},"Create separate, numbered ",Object(s.b)("strong",{parentName:"li"},"main test files")," to organize tests by their focus:",Object(s.b)("ul",{parentName:"li"},Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"00-all-fields.cypress.spec.js")," - required and optional fields"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"01-required.cypress.spec.js")," - only required fields"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"02-accessibility.cypress.spec.js")," - validates accessibility"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"03-auth.cypress.spec.js")," - validates authentication"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"04-cross-cutting-feature.cypress.spec.js")," - validates one feature used across several pages (e.g. save in progress)"))),Object(s.b)("li",{parentName:"ul"},"Group tests by pages and use a comment to indicate what page is being tested"),Object(s.b)("li",{parentName:"ul"},"Mock all api responses before starting the test. See ",Object(s.b)("a",{parentName:"li",href:"https://github.com/department-of-veterans-affairs/va.gov-team/tree/master/platform/testing/end-to-end#mocks"},"Mock API responses")),Object(s.b)("li",{parentName:"ul"},"Use ",Object(s.b)("inlineCode",{parentName:"li"},"waitForElementVisible")," before interacting with any element on the page"),Object(s.b)("li",{parentName:"ul"},"Use ",Object(s.b)("inlineCode",{parentName:"li"},"Timeouts")," constants for setting timeouts (",Object(s.b)("inlineCode",{parentName:"li"},"platform/testing/e2e/timeouts.js"),")"),Object(s.b)("li",{parentName:"ul"},"Use helpers for filling data and performing actions on the page"),Object(s.b)("li",{parentName:"ul"},"(",Object(s.b)("em",{parentName:"li"},"REQUIRED"),") Perform ",Object(s.b)("inlineCode",{parentName:"li"},"axeCheck")," on the main body of the application on each page - see ",Object(s.b)("a",{parentName:"li",href:"https://github.com/department-of-veterans-affairs/vets-website/blob/main/src/platform/testing/e2e/cypress/support/commands/axeCheck.js"},"axeCheck")),Object(s.b)("li",{parentName:"ul"},"Assert that each navigation is successful")),Object(s.b)("h2",{id:"mocking-api-responses"},"Mocking API responses"),Object(s.b)("p",null,"A mock server runs with the end-to-end tests to allow tests to make production-like calls."),Object(s.b)("p",null,"See the ",Object(s.b)("a",{parentName:"p",href:"https://github.com/department-of-veterans-affairs/va.gov-team/blob/master/platform/testing/end-to-end/vsp-cypress-resources.md#mocks"},"Mocks section of Cypress Resources Reference Guide")," for detailed mock API examples currently used."),Object(s.b)("p",null,"Below are some of the commonly used Cypress mocks (accessible from the link above)."),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"confirmedVA"),Object(s.b)("li",{parentName:"ul"},"confirmedCC"),Object(s.b)("li",{parentName:"ul"},"requests"),Object(s.b)("li",{parentName:"ul"},"cancelReasons"),Object(s.b)("li",{parentName:"ul"},"supportedSites"),Object(s.b)("li",{parentName:"ul"},"facilities"),Object(s.b)("li",{parentName:"ul"},"facilities983"),Object(s.b)("li",{parentName:"ul"},"clinicList983"),Object(s.b)("li",{parentName:"ul"},"slots"),Object(s.b)("li",{parentName:"ul"},"getVAAppointmentMock"),Object(s.b)("li",{parentName:"ul"},"getExpressCareRequestCriteriaMock"),Object(s.b)("li",{parentName:"ul"},"getParentSiteMock")),Object(s.b)("h2",{id:"custom-cypress-commands"},"Custom Cypress commands"),Object(s.b)("p",null,"Cypress supports extending its client api with ",Object(s.b)("a",{parentName:"p",href:"https://github.com/department-of-veterans-affairs/vets-website/blob/main/src/platform/testing/e2e/cypress/support/commands"},"custom commands"),"."),Object(s.b)("p",null,"Below are some of the commonly used custom Cypress commands."),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"https://github.com/department-of-veterans-affairs/vets-website/blob/main/src/platform/testing/e2e/cypress/support/commands/axeCheck.js"},"axeCheck")," - Callback from a11y check that logs aXe violations to console output."),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"https://github.com/department-of-veterans-affairs/vets-website/blob/main/src/platform/testing/e2e/cypress/support/commands/expandAccordions.js"},"expandAccordions")," - Expands all accordions and AdditionalInfo components."),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"https://github.com/department-of-veterans-affairs/vets-website/blob/main/src/platform/testing/e2e/cypress/support/commands/hasCount.js"},"injectAxeThenAxeCheck")," - Combines two common, sequentially called functions."),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"https://github.com/department-of-veterans-affairs/vets-website/blob/main/src/platform/testing/e2e/cypress/support/commands/login.js"},"login")," - Simulates a logged in session."),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"https://github.com/department-of-veterans-affairs/vets-website/blob/main/src/platform/testing/e2e/cypress/support/commands/syncFixtures.js"},"syncFixtures")," - Runs task to sync fixtures under a temp path in the Cypress fixtures folder then overwrites ",Object(s.b)("inlineCode",{parentName:"li"},"cy.fixture")," and the fixture shorthand in ",Object(s.b)("inlineCode",{parentName:"li"},"cy.route")," to look for fixtures under that temp path."),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"https://github.com/department-of-veterans-affairs/vets-website/blob/main/src/platform/testing/e2e/cypress/support/commands/upload.js"},"upload")," - Workaround to support file upload functionality in tests, which is currently not officially implemented."),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"https://github.com/department-of-veterans-affairs/vets-website/blob/main/src/platform/testing/e2e/cypress/support/commands/viewportPreset.js"},"viewportPreset")," - Sets the viewport by preset name.")),Object(s.b)("h2",{id:"helpers"},"Helpers"),Object(s.b)("p",null,"The ",Object(s.b)("a",{parentName:"p",href:"https://github.com/department-of-veterans-affairs/va.gov-team/tree/master/platform/testing/end-to-end"},"Cypress Resources Reference Guide")," contains a list of currently utilized Cypress & VAOS Helpers adn Appointment Helpers."))}p.isMDXComponent=!0},FRpb:function(e,t,a){"use strict";a.d(t,"a",(function(){return p}));var n=a("q1tI"),s=a.n(n),r=a("Wbzz");function i(e){var t=e.item;return t.href?s.a.createElement("li",{key:t.name},s.a.createElement(r.Link,{to:t.href},t.name)):s.a.createElement("li",{key:t.name},t.name," (future)")}function l(e){var t=e.items,a=e.isSublist,n=void 0!==a&&a;return t.length?s.a.createElement("ul",{className:"site-c-sidenav-list"},t.map((function(e){return e.items?s.a.createElement("li",{key:e.name},n&&s.a.createElement(i,{item:e}),!n&&s.a.createElement("h2",{className:"heading-level-4"},e.name),s.a.createElement(l,{isSublist:!0,items:e.items})):s.a.createElement(i,{item:e,key:e.name})}))):null}var o=a("MEl4"),c=a.n(o);function p(e){var t=e.location,a=c.a.sections.find((function(e){return t.pathname.includes(e.href)}));return a?s.a.createElement("div",{className:"vads-l-col--4 site-c-content__nav"},s.a.createElement("div",{className:"site-c-sidenav"},s.a.createElement(l,{items:a.items}))):null}},zLVn:function(e,t,a){"use strict";function n(e,t){if(null==e)return{};var a,n,s={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(s[a]=e[a]);return s}a.d(t,"a",(function(){return n}))}}]);
//# sourceMappingURL=component---src-pages-getting-started-common-tasks-new-end-to-end-test-mdx-942efb8de2d205f47af6.js.map