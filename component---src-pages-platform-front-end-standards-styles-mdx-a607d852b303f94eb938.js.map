{"version":3,"sources":["webpack:///./src/components/sidebar/SidebarItems.jsx","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./src/components/EditLink.jsx","webpack:///./src/layouts/SidebarLayout.jsx","webpack:///./src/pages/platform/front-end-standards/styles.mdx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["SidebarItem","item","href","key","name","to","SidebarItems","items","isSublist","length","className","map","Sidebar","location","sidebarSection","sidebarData","sections","find","section","pathname","includes","EditLink","sourceUrl","class","aria-hidden","SidebarLayout","children","pageContext","Layout","id","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","_objectWithoutPropertiesLoose","source","excluded","i","target","sourceKeys","Object","keys","indexOf"],"mappings":"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","file":"component---src-pages-platform-front-end-standards-styles-mdx-a607d852b303f94eb938.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nfunction SidebarItem({ item }) {\n  if (item.href) {\n    return (\n      <li key={item.name}>\n        <Link to={item.href}>{item.name}</Link>\n      </li>\n    );\n  }\n  return <li key={item.name}>{item.name} (future)</li>;\n}\n\nexport default function SidebarItems({ items, isSublist = false }) {\n  if (!items.length) {\n    return null;\n  }\n\n  return (\n    <ul className=\"site-c-sidenav-list\">\n      {items.map(item => {\n        if (item.items) {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <SidebarItems isSublist items={item.items} />\n            </li>\n          );\n        }\n        return <SidebarItem item={item} key={item.name} />;\n      })}\n    </ul>\n  );\n}\n","import React from 'react';\nimport SidebarItems from './SidebarItems';\nimport sidebarData from '../../sidebar';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nexport default function Sidebar({ location }) {\n  const sidebarSection = sidebarData.sections.find(section =>\n    location.pathname.includes(section.href),\n  );\n\n  if (!sidebarSection) {\n    return null;\n  }\n\n  return (\n    <div className=\"vads-l-col--4 site-c-content__nav\">\n      <div className=\"site-c-sidenav\">\n        <SidebarItems items={sidebarSection.items} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function EditLink({ sourceUrl }) {\n  return sourceUrl ? (\n    <div>\n      <i class=\"fa fa-edit\" aria-hidden=\"true\" />{' '}\n      <a href={sourceUrl}>Edit this page on GitHub</a>\n    </div>\n  ) : null;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Sidebar from '../components/sidebar/Sidebar';\nimport EditLink from '../components/EditLink';\nimport Layout from './Layout';\n\n/**\n * SidebarLayout\n *\n * @class SidebarLayout\n * @extends {React.Component}\n */\nexport default function SidebarLayout({ children, location, pageContext }) {\n  return (\n    <Layout location={location}>\n      <div className=\"vads-l-row\">\n        <Sidebar location={location} />\n        <div\n          id=\"main-content\"\n          className=\"vads-l-col--8 site-c-content__content docSearch-content\"\n        >\n          {children}\n          <EditLink sourceUrl={pageContext.sourceUrl} />\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nSidebarLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/jenkins/workspace/ran-facing-services-tools_master/packages/documentation/src/layouts/SidebarLayout.jsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"guidelines-for-good-scss--css\"\n    }}>{`Guidelines for good SCSS / CSS`}</h1>\n    <p>{`Some guidelines for writing good CSS that scales well and doesn't make your colleagues ragey.`}</p>\n    <h2 {...{\n      \"id\": \"use-low-specificity-selectors\"\n    }}>{`Use low-specificity selectors`}</h2>\n    <p>{`The more specific the selector is, the less reusable the accompanying CSS is and/or the longer a selector you need to override it. (Or you add `}<inlineCode parentName=\"p\">{`!important`}</inlineCode>{` in places you shouldn't.)`}</p>\n    <p>{`The following should be used sparingly in CSS`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`id`}</inlineCode>{` selectors.`}</li>\n      <li parentName=\"ul\">{`Complex element/type selectors with attributes such as `}<inlineCode parentName=\"li\">{`button[type=button]`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`input[type=text]`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Descendant combinators such as `}<inlineCode parentName=\"li\">{`#main ol li ul`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`.process p a`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Chaining class names. `}<inlineCode parentName=\"li\">{`button`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`button.lg`}</inlineCode>{`)`}</li>\n    </ul>\n    <p>{`High specificity selectors are more likely to create side effects, that have to be undone with more CSS rules or longer selectors.`}</p>\n    <h2 {...{\n      \"id\": \"avoid-nesting-scss-selectors-prematurely\"\n    }}>{`Avoid nesting SCSS selectors prematurely`}</h2>\n    <p>{`SCSS compiles nested selectors into descendant combinators. For example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`#content {\n  ol {\n    p {}\n  }\n}\n`}</code></pre>\n    <p>{`Compiles to:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`#content ol p {}\n`}</code></pre>\n    <p>{`There's a high likelihood, however that your selectors don't need to be that long; `}<inlineCode parentName=\"p\">{`ol p`}</inlineCode>{` would provide the same styling. If the worry is being overly broad, you can get the same results using a class name. This is related to the previous point. Specific selectors are often caused by SCSS nesting.`}</p>\n    <p>{`Nesting selectors can be useful, however, when creating variants. For example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`.button {\n  &-link {\n  }\n}\n`}</code></pre>\n    <p>{`Compiles to `}<inlineCode parentName=\"p\">{`button-link`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"restrict-class-names-to-a-single-pattern-or-component-type\"\n    }}>{`Restrict class names to a single pattern or component type.`}</h2>\n    <p>{`For example, don't use `}<inlineCode parentName=\"p\">{`.process`}</inlineCode>{` for lists `}<em parentName=\"p\">{`and`}</em>{` as a `}<inlineCode parentName=\"p\">{`div`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`section`}</inlineCode>{` type. Rules you introduce for `}<inlineCode parentName=\"p\">{`div.process`}</inlineCode>{` probably aren't related to those for `}<inlineCode parentName=\"p\">{`ol.process`}</inlineCode>{`. Instead use `}<inlineCode parentName=\"p\">{`.list-process`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`.section-process`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"favor-descriptive-class-names-that-describe-what-the-class-does-or-the-kind-of-content-it-affects\"\n    }}>{`Favor descriptive class names that describe what the class does or the kind of content it affects`}</h2>\n    <p>{`Class names such as `}<inlineCode parentName=\"p\">{`.primary`}</inlineCode>{`, or `}<inlineCode parentName=\"p\">{`.section`}</inlineCode>{` are confusing and more likely to be misused by a colleague than `}<inlineCode parentName=\"p\">{`.intro-text`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`.sidebar`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"use-a-product-specific-prefix-to-avoid-class-name-collisions\"\n    }}>{`Use a product-specific prefix to avoid class name collisions`}</h2>\n    <p>{`This keeps selector specificity low, while also restricting the side-effects of any one selector.`}</p>\n    <h2 {...{\n      \"id\": \"dont-use-extend\"\n    }}>{`Don't use @extend`}</h2>\n    <p>{`SCSS `}<inlineCode parentName=\"p\">{`@extend`}</inlineCode>{` repeats every instance of the extended selector for the extendee selector. (This will be flagged by our Sass-lint configuration.)`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`h4 {\n  color: #c09;\n  font-size: 1.2rem;\n  font-weight: 100;\n}\n\nlabel {\n  @extend h4;\n  cursor: pointer;\n}\n\n.footer h4 {\n  display: inline;\n}\n`}</code></pre>\n    <p>{`Compiles to:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`h4, label {\n  color: #c09;\n  font-size: 1.2rem;\n  font-weight: 100; }\n\nlabel {\n  cursor: pointer; }\n\n.footer h4, .footer label {\n  display: inline; }\n`}</code></pre>\n    <p>{`Every instance of `}<inlineCode parentName=\"p\">{`h4`}</inlineCode>{` will also be applied to `}<inlineCode parentName=\"p\">{`label`}</inlineCode>{`. This is usually not the behavior we want, particularly across an entire code base.`}</p>\n    <h1 {...{\n      \"id\": \"check-your-output\"\n    }}>{`CHECK. YOUR. OUTPUT.`}</h1>\n    <p>{`Periodially check your generated CSS files (JavaScript too!) to ensure that you didn't introduce bloat with your selectors or asset imports.`}</p>\n    <p>{`True story: we reduced the size of our home page CSS by ~400K by removing SVG fonts. Our Webpack configuration included base64-encoded versions of SVG fonts which dramatically inflated our file size. This fact was discovered only after viewing the generated CSS files.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}