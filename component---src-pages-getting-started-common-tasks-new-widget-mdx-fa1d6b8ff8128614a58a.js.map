{"version":3,"sources":["webpack:///./src/components/EditLink.jsx","webpack:///./src/layouts/SidebarLayout.jsx","webpack:///./src/pages/getting-started/common-tasks/new-widget.mdx","webpack:///./src/components/sidebar/SidebarItems.jsx","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["EditLink","sourceUrl","class","aria-hidden","href","SidebarLayout","children","location","pageContext","Layout","className","Sidebar","id","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","SidebarItem","item","key","name","to","SidebarItems","items","isSublist","length","map","sidebarSection","sidebarData","sections","find","section","pathname","includes","_objectWithoutPropertiesLoose","source","excluded","i","target","sourceKeys","Object","keys","indexOf"],"mappings":"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","file":"component---src-pages-getting-started-common-tasks-new-widget-mdx-fa1d6b8ff8128614a58a.js","sourcesContent":["import React from 'react';\n\nexport default function EditLink({ sourceUrl }) {\n  return sourceUrl ? (\n    <div>\n      <i class=\"fa fa-edit\" aria-hidden=\"true\" />{' '}\n      <a href={sourceUrl}>Edit this page on GitHub</a>\n    </div>\n  ) : null;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Sidebar from '../components/sidebar/Sidebar';\nimport EditLink from '../components/EditLink';\nimport Layout from './Layout';\n\n/**\n * SidebarLayout\n *\n * @class SidebarLayout\n * @extends {React.Component}\n */\nexport default function SidebarLayout({ children, location, pageContext }) {\n  return (\n    <Layout location={location}>\n      <div className=\"vads-l-row site-l-wrapper\">\n        <Sidebar location={location} />\n        <div\n          id=\"main-content\"\n          className=\"vads-l-col--8 site-c-content__content docSearch-content\"\n        >\n          {children}\n          <EditLink sourceUrl={pageContext.sourceUrl} />\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nSidebarLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/jenkins/workspace/ran-facing-services-tools_master@2/packages/documentation/src/layouts/SidebarLayout.jsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"creating-a-new-react-widget\"\n    }}>{`Creating a new React widget`}</h1>\n    <p>{`Note: Check out the `}<a parentName=\"p\" {...{\n        \"href\": \"/veteran-facing-services-tools/getting-started/common-tasks/new-feature\"\n      }}>{`Adding a new feature`}</a>{` doc to make sure you're trying to add the right type of feature to VA.gov.`}</p>\n    <h2 {...{\n      \"id\": \"adding-a-new-widget\"\n    }}>{`Adding a new widget`}</h2>\n    <p>{`All the static pages use the `}<inlineCode parentName=\"p\">{`static-pages`}</inlineCode>{` entry bundle, so any JS code included from that file will be on all static pages. In order to add a widget, you'll want to create a function that loads your desired React components (or plain JS) asynchronously, and mounts to an element on the page with your widget id.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Ensure your page includes the `}<inlineCode parentName=\"li\">{`static-pages`}</inlineCode>{` bundle:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-markdown\"\n      }}>{`title: My awesome widget page\nlayout: page.html\n---\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Note:`}</strong>{` The `}<inlineCode parentName=\"p\">{`entryname`}</inlineCode>{` must be absent from the markdown file's front matter or the resulting HTML file will include `}<inlineCode parentName=\"p\">{`\\${entryname}.js`}</inlineCode>{` instead of `}<inlineCode parentName=\"p\">{`static-pages.js`}</inlineCode>{`.`}</p>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Add a mount point element in the static content page your widget will live on:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<div data-widget-type=\"my-new-widget\" id=\"someId\"></div>\n`}</code></pre>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`Add a start up function to: `}<inlineCode parentName=\"li\">{`src/applications/static-pages/static-pages-entry.js`}</inlineCode>{`:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`...\ncreateMyWidget(store, widgetTypes.MY_NEW_WIDGET);\n...\n`}</code></pre>\n    <p>{`You should also add a constant for your widget type in `}<inlineCode parentName=\"p\">{`src/applications/static-pages/widgetTypes.js`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`export default {\n  ...\n  MY_NEW_WIDGET: 'my-new-widget',\n  ...\n}\n`}</code></pre>\n    <ol {...{\n      \"start\": 4\n    }}>\n      <li parentName=\"ol\">{`Write your create widget function:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`export default async function createMyWidget(store, widgetType) {\n  const widget = document.querySelector(\\`[data-widget-type=\"\\${widgetType}\"]\\`);\n\n  if (widget) {\n    // Load widget if there's a mount point for it\n    const {\n      default: MyNewWidget,\n    } = await import(/* webpackChunkName: \"my-new-widget\" */ '../../platform/site-wide/my-new-widget');\n\n    // Do whatever you need to do to start up your widget\n    ReactDOM.render(<MyNewWidget>, widget);\n  }\n}\n`}</code></pre>\n    <p>{`Note that we don't import the widget code unless there's a mount point in the DOM. This function will run on every page, so we want to make sure we only download the bulk of the widget code when we're actually going to use it.`}</p>\n    <h2 {...{\n      \"id\": \"guidelines-for-using-react-on-a-static-page\"\n    }}>{`Guidelines for using React on a static page`}</h2>\n    <p>{`We should be careful to not create a bad user experience when using React on static pages. Here are some guidelines you should follow:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`JS and React take time to download, parse, and render. Make sure you are providing the appropriate feedback to users while that is happening, with a spinner or another method from the UX team.`}</li>\n      <li parentName=\"ol\">{`Make sure the page is still usable if your React code fails to work. This can mean it fails to download, an error occurs, or just handling the different login states a user can be in.`}</li>\n      <li parentName=\"ol\">{`Be aware of how much weight you're adding to the static-pages bundle and code-split/lazy load when it makes sense.`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"common-widget-code\"\n    }}>{`Common widget code`}</h2>\n    <p>{`There's a simple static page widget feature that you can use to help with the first two points above. The code is in `}<inlineCode parentName=\"p\">{`src/applications/static-pages/static-page-widgets.js`}</inlineCode>{`. Using this will inline some JS that can handle displaying a loading spinner and showing an error message if something goes wrong before the React code can take over rendering. Several pension pages use this functionality (`}<inlineCode parentName=\"p\">{`pages/pension/index.md`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`pages/pension/apply.md`}</inlineCode>{` in `}<inlineCode parentName=\"p\">{`vagov-content`}</inlineCode>{`). It's controlled by defining a widgets list in the front matter for the static content page you're on. The options are:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`- widgets\n  - root: someId \n    timeout: 20\n    showSpinnerUnauthed: false\n    slowLoadingThreshold: 6\n    loadingMessage: Loading\n    slowMessage: Sorry, this is taking longer than expected.\n    errorMessage: Sorry, something went wrong.\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`root: The id of the div where the React component will mount.`}</li>\n      <li parentName=\"ul\">{`timeout: The amount of time in seconds before the error message is shown.`}</li>\n      <li parentName=\"ul\">{`showSpinnerUnauthed: By default, a spinner is shown only if a user has a session token. This will override that and show it always.`}</li>\n      <li parentName=\"ul\">{`slowLoadingThreshold: The amount of time in seconds before the slow loading message is shown. This is skipped if the threshold is greater than the overall timeout. Defaulted to 6 seconds.`}</li>\n      <li parentName=\"ul\">{`slowMessage: Message shown when the slowThreshold is passed. Defaulted to message above.`}</li>\n      <li parentName=\"ul\">{`loadingMessage: Message shown while the JS code is loading. This should probably match any loading message in your React code.`}</li>\n      <li parentName=\"ul\">{`errorMessage: Message shown when the JS code fails or times out.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"running-end-to-end-tests-on-a-widget\"\n    }}>{`Running end-to-end tests on a widget`}</h2>\n    <p>{`Before running end-to-end (e2e) tests for a widget, you must add an entry for your widget to `}<inlineCode parentName=\"p\">{`src/applications/registry.scaffold.json`}</inlineCode>{`. This will allow a landing page to be generated for your widget so you can run end-to-end tests in `}<inlineCode parentName=\"p\">{`vets-website`}</inlineCode>{`. An example entry looks something like:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n   \"appName\": \"About VA Disability Ratings\",\n   \"rootUrl\": \"/disability/about-disability-ratings\",\n   \"widgetType\": \"disability-rating-calculator\"\n},\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`appName`}</inlineCode>{`: The name of the title that will be used for the page.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`rootUrl`}</inlineCode>{`: The relative url of the page that the widget will be mounted on.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`widgetType`}</inlineCode>{`: The name of the `}<inlineCode parentName=\"li\">{`data-widget-type`}</inlineCode>{` attribute that will be used to mount your widget on the page.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react';\nimport { Link } from 'gatsby';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nfunction SidebarItem({ item }) {\n  if (item.href) {\n    return (\n      <li key={item.name}>\n        <Link to={item.href}>{item.name}</Link>\n      </li>\n    );\n  }\n  return <li key={item.name}>{item.name} (future)</li>;\n}\n\nexport default function SidebarItems({ items, isSublist = false }) {\n  if (!items.length) {\n    return null;\n  }\n\n  return (\n    <ul className=\"site-c-sidenav-list\">\n      {items.map(item => {\n        if (item.items) {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <SidebarItems isSublist items={item.items} />\n            </li>\n          );\n        }\n        return <SidebarItem item={item} key={item.name} />;\n      })}\n    </ul>\n  );\n}\n","import React from 'react';\nimport SidebarItems from './SidebarItems';\nimport sidebarData from '../../sidebar';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nexport default function Sidebar({ location }) {\n  const sidebarSection = sidebarData.sections.find(section =>\n    location.pathname.includes(section.href),\n  );\n\n  if (!sidebarSection) {\n    return null;\n  }\n\n  return (\n    <div className=\"vads-l-col--4 site-c-content__nav\">\n      <div className=\"site-c-sidenav\">\n        <SidebarItems items={sidebarSection.items} />\n      </div>\n    </div>\n  );\n}\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}