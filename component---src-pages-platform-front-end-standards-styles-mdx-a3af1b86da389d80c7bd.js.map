{"version":3,"sources":["webpack:///./src/components/EditLink.jsx","webpack:///./src/layouts/SidebarLayout.jsx","webpack:///./src/components/sidebar/SidebarItems.jsx","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./src/pages/platform/front-end-standards/styles.mdx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["EditLink","sourceUrl","class","aria-hidden","href","SidebarLayout","children","location","pageContext","Layout","className","Sidebar","id","SidebarItem","item","key","name","to","SidebarItems","items","isSublist","length","map","sidebarSection","sidebarData","sections","find","section","pathname","includes","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","_objectWithoutPropertiesLoose","source","excluded","i","target","sourceKeys","Object","keys","indexOf"],"mappings":"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","file":"component---src-pages-platform-front-end-standards-styles-mdx-a3af1b86da389d80c7bd.js","sourcesContent":["import React from 'react';\n\nexport default function EditLink({ sourceUrl }) {\n  return sourceUrl ? (\n    <div>\n      <i class=\"fa fa-edit\" aria-hidden=\"true\" />{' '}\n      <a href={sourceUrl}>Edit this page on GitHub</a>\n    </div>\n  ) : null;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Sidebar from '../components/sidebar/Sidebar';\nimport EditLink from '../components/EditLink';\nimport Layout from './Layout';\n\n/**\n * SidebarLayout\n *\n * @class SidebarLayout\n * @extends {React.Component}\n */\nexport default function SidebarLayout({ children, location, pageContext }) {\n  return (\n    <Layout location={location}>\n      <div className=\"vads-l-row site-l-wrapper\">\n        <Sidebar location={location} />\n        <div\n          id=\"main-content\"\n          className=\"vads-l-col--8 site-c-content__content docSearch-content\"\n        >\n          {children}\n          <EditLink sourceUrl={pageContext.sourceUrl} />\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nSidebarLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport { Link } from 'gatsby';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nfunction SidebarItem({ item }) {\n  if (item.href) {\n    return (\n      <li key={item.name}>\n        <Link to={item.href}>{item.name}</Link>\n      </li>\n    );\n  }\n  return <li key={item.name}>{item.name} (future)</li>;\n}\n\nexport default function SidebarItems({ items, isSublist = false }) {\n  if (!items.length) {\n    return null;\n  }\n\n  return (\n    <ul className=\"site-c-sidenav-list\">\n      {items.map(item => {\n        if (item.items) {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <SidebarItems isSublist items={item.items} />\n            </li>\n          );\n        }\n        return <SidebarItem item={item} key={item.name} />;\n      })}\n    </ul>\n  );\n}\n","import React from 'react';\nimport SidebarItems from './SidebarItems';\nimport sidebarData from '../../sidebar';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nexport default function Sidebar({ location }) {\n  const sidebarSection = sidebarData.sections.find(section =>\n    location.pathname.includes(section.href),\n  );\n\n  if (!sidebarSection) {\n    return null;\n  }\n\n  return (\n    <div className=\"vads-l-col--4 site-c-content__nav\">\n      <div className=\"site-c-sidenav\">\n        <SidebarItems items={sidebarSection.items} />\n      </div>\n    </div>\n  );\n}\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/veteran-facing-services-tools/veteran-facing-services-tools/packages/documentation/src/layouts/SidebarLayout.jsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"guidelines-for-good-scss--css\"\n    }}>{`Guidelines for good SCSS / CSS`}</h1>\n    <div className=\"deprecation-message\">\n    <h2>We're moving our docs!</h2>\n    <h3>Find <a href=\"https://depo-platform-documentation.scrollhelp.site/developer-docs/Guidelines-for-good-SCSS-%2F-CSS.1844740108.html\">the latest version of this page</a> on the Platform website.</h3>\n    <h3>Still can't find what you're looking for? Reach out to <a href=\"https://dsva.slack.com/archives/CBU0KDSB1\">#vfs-platform-support</a> on Slack.</h3>\n    </div>\n    <p>{`Some guidelines for writing good CSS that scales well and doesn't make your colleagues ragey.`}</p>\n    <h2 {...{\n      \"id\": \"use-low-specificity-selectors\"\n    }}>{`Use low-specificity selectors`}</h2>\n    <p>{`The more specific the selector is, the less reusable the accompanying CSS is and/or the longer a selector you need to override it. (Or you add `}<inlineCode parentName=\"p\">{`!important`}</inlineCode>{` in places you shouldn't.)`}</p>\n    <p>{`The following should be used sparingly in CSS`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`id`}</inlineCode>{` selectors.`}</li>\n      <li parentName=\"ul\">{`Complex element/type selectors with attributes such as `}<inlineCode parentName=\"li\">{`button[type=button]`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`input[type=text]`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Descendant combinators such as `}<inlineCode parentName=\"li\">{`#main ol li ul`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`.process p a`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Chaining class names. `}<inlineCode parentName=\"li\">{`button`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`button.lg`}</inlineCode>{`)`}</li>\n    </ul>\n    <p>{`High specificity selectors are more likely to create side effects, that have to be undone with more CSS rules or longer selectors.`}</p>\n    <h2 {...{\n      \"id\": \"avoid-nesting-scss-selectors-prematurely\"\n    }}>{`Avoid nesting SCSS selectors prematurely`}</h2>\n    <p>{`SCSS compiles nested selectors into descendant combinators. For example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`#content {\n  ol {\n    p {}\n  }\n}\n`}</code></pre>\n    <p>{`Compiles to:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`#content ol p {}\n`}</code></pre>\n    <p>{`There's a high likelihood, however that your selectors don't need to be that long; `}<inlineCode parentName=\"p\">{`ol p`}</inlineCode>{` would provide the same styling. If the worry is being overly broad, you can get the same results using a class name. This is related to the previous point. Specific selectors are often caused by SCSS nesting.`}</p>\n    <p>{`Nesting selectors can be useful, however, when creating variants. For example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`.button {\n  &-link {\n  }\n}\n`}</code></pre>\n    <p>{`Compiles to `}<inlineCode parentName=\"p\">{`button-link`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"restrict-class-names-to-a-single-pattern-or-component-type\"\n    }}>{`Restrict class names to a single pattern or component type.`}</h2>\n    <p>{`For example, don't use `}<inlineCode parentName=\"p\">{`.process`}</inlineCode>{` for lists `}<em parentName=\"p\">{`and`}</em>{` as a `}<inlineCode parentName=\"p\">{`div`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`section`}</inlineCode>{` type. Rules you introduce for `}<inlineCode parentName=\"p\">{`div.process`}</inlineCode>{` probably aren't related to those for `}<inlineCode parentName=\"p\">{`ol.process`}</inlineCode>{`. Instead use `}<inlineCode parentName=\"p\">{`.list-process`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`.section-process`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"favor-descriptive-class-names-that-describe-what-the-class-does-or-the-kind-of-content-it-affects\"\n    }}>{`Favor descriptive class names that describe what the class does or the kind of content it affects`}</h2>\n    <p>{`Class names such as `}<inlineCode parentName=\"p\">{`.primary`}</inlineCode>{`, or `}<inlineCode parentName=\"p\">{`.section`}</inlineCode>{` are confusing and more likely to be misused by a colleague than `}<inlineCode parentName=\"p\">{`.intro-text`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`.sidebar`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"use-a-product-specific-prefix-to-avoid-class-name-collisions\"\n    }}>{`Use a product-specific prefix to avoid class name collisions`}</h2>\n    <p>{`This keeps selector specificity low, while also restricting the side-effects of any one selector.`}</p>\n    <h2 {...{\n      \"id\": \"dont-use-extend\"\n    }}>{`Don't use @extend`}</h2>\n    <p>{`SCSS `}<inlineCode parentName=\"p\">{`@extend`}</inlineCode>{` repeats every instance of the extended selector for the extendee selector. (This will be flagged by our Sass-lint configuration.)`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`h4 {\n  color: #c09;\n  font-size: 1.2rem;\n  font-weight: 100;\n}\n\nlabel {\n  @extend h4;\n  cursor: pointer;\n}\n\n.footer h4 {\n  display: inline;\n}\n`}</code></pre>\n    <p>{`Compiles to:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`h4, label {\n  color: #c09;\n  font-size: 1.2rem;\n  font-weight: 100; }\n\nlabel {\n  cursor: pointer; }\n\n.footer h4, .footer label {\n  display: inline; }\n`}</code></pre>\n    <p>{`Every instance of `}<inlineCode parentName=\"p\">{`h4`}</inlineCode>{` will also be applied to `}<inlineCode parentName=\"p\">{`label`}</inlineCode>{`. This is usually not the behavior we want, particularly across an entire code base.`}</p>\n    <h1 {...{\n      \"id\": \"check-your-output\"\n    }}>{`CHECK. YOUR. OUTPUT.`}</h1>\n    <p>{`Periodially check your generated CSS files (JavaScript too!) to ensure that you didn't introduce bloat with your selectors or asset imports.`}</p>\n    <p>{`True story: we reduced the size of our home page CSS by ~400K by removing SVG fonts. Our Webpack configuration included base64-encoded versions of SVG fonts which dramatically inflated our file size. This fact was discovered only after viewing the generated CSS files.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}"],"sourceRoot":""}