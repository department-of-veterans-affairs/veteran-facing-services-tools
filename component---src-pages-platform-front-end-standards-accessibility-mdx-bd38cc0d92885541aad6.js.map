{"version":3,"sources":["webpack:///./src/components/sidebar/SidebarItems.jsx","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./src/components/EditLink.jsx","webpack:///./src/layouts/SidebarLayout.jsx","webpack:///./src/pages/platform/front-end-standards/accessibility.mdx"],"names":["ComponentList","query","render","data","SidebarItems","items","components","edges","map","comp","href","node","path","name","context","SidebarItem","item","key","to","isSublist","length","className","Sidebar","location","sidebarSection","sidebarData","sections","find","section","pathname","includes","EditLink","sourceUrl","class","aria-hidden","SidebarLayout","children","pageContext","Layout","id","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-platform-front-end-standards-accessibility-mdx-bd38cc0d92885541aad6.js","sourcesContent":["import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nfunction ComponentList() {\n  return (\n    <StaticQuery\n      query={graphql`\n        query ComponentListQuery {\n          components: allSitePage(\n            filter: { context: { source: { eq: \"formation-react\" } } }\n            sort: { fields: [context___name], order: ASC }\n          ) {\n            edges {\n              node {\n                path\n                context {\n                  source\n                  name\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <SidebarItems\n          items={data.components.edges.map(comp => ({\n            href: comp.node.path,\n            name: comp.node.context.name,\n          }))}\n        />\n      )}\n    />\n  );\n}\n\nfunction SidebarItem({ item }) {\n  if (item.href) {\n    return (\n      <li key={item.name}>\n        <Link to={item.href}>{item.name}</Link>\n      </li>\n    );\n  }\n  return <li key={item.name}>{item.name} (future)</li>;\n}\n\nexport default function SidebarItems({ items, isSublist = false }) {\n  if (!items.length) {\n    return null;\n  }\n\n  return (\n    <ul className=\"site-c-sidenav-list\">\n      {items.map(item => {\n        if (item.items) {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <SidebarItems isSublist items={item.items} />\n            </li>\n          );\n        }\n        if (item.query === 'componentList') {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <ComponentList />\n            </li>\n          );\n        }\n        return <SidebarItem item={item} key={item.name} />;\n      })}\n    </ul>\n  );\n}\n","import React from 'react';\nimport SidebarItems from './SidebarItems';\nimport sidebarData from '../../sidebar';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nexport default function Sidebar({ location }) {\n  const sidebarSection = sidebarData.sections.find(section =>\n    location.pathname.includes(section.href),\n  );\n\n  if (!sidebarSection) {\n    return null;\n  }\n\n  return (\n    <div className=\"vads-l-col--4 site-c-content__nav\">\n      <div className=\"site-c-sidenav\">\n        <SidebarItems items={sidebarSection.items} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function EditLink({ sourceUrl }) {\n  return sourceUrl ? (\n    <div>\n      <i class=\"fa fa-edit\" aria-hidden=\"true\" />{' '}\n      <a href={sourceUrl}>Edit this page on GitHub</a>\n    </div>\n  ) : null;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Sidebar from '../components/sidebar/Sidebar';\nimport EditLink from '../components/EditLink';\nimport Layout from './Layout';\n\n/**\n * SidebarLayout\n *\n * @class SidebarLayout\n * @extends {React.Component}\n */\nexport default function SidebarLayout({ children, location, pageContext }) {\n  return (\n    <Layout location={location}>\n      <div className=\"vads-l-row\">\n        <Sidebar location={location} />\n        <div\n          id=\"main-content\"\n          className=\"vads-l-col--8 site-c-content__content docSearch-content\"\n        >\n          {children}\n          <EditLink sourceUrl={pageContext.sourceUrl} />\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nSidebarLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/jenkins/workspace/ran-facing-services-tools_master/packages/documentation/src/layouts/SidebarLayout.jsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"accessibility-standards\"\n    }}>{`Accessibility standards`}</h1>\n    <h2 {...{\n      \"id\": \"three-rules-for-link-and-button-success-sup-idheading33sup\"\n    }}>{`Three rules for link and button success `}<sup parentName=\"h2\" {...{\n        \"id\": \"heading3\"\n      }}>{`3`}</sup></h2>\n    <ol>\n      <li parentName=\"ol\">{`Links go to to another page OR jump to an anchor ID in the current page`}\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">{`SUCCESS CRITERIA:`}</li>\n          <li parentName=\"ol\">{`Respond to ENTER keypress`}</li>\n          <li parentName=\"ol\">{`The browser URL changes`}</li>\n          <li parentName=\"ol\">{`HTML5 history object changes. (Not applicable if using React Router.)`}</li>\n          <li parentName=\"ol\">{`Avoid hash route URLs if possible. These interfere with in-page anchor links, and were common with early SPA libraries like Backbone. (Not applicable if using React Router.)`}</li>\n          <li parentName=\"ol\">{`Append anchor links to URL when a link points to an in-page anchor ID (skip nav, tabs)`}</li>\n          <li parentName=\"ol\">{`Do not add role=“button” to links. Screen readers announce the link as “button”, and changes user`}</li>\n          <li parentName=\"ol\">{`Recommended to underline links when in paragraphs or blocks of text`}</li>\n        </ol>\n      </li>\n      <li parentName=\"ol\">{`Buttons perform a UI action`}\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">{`SUCCESS CRITERIA:`}</li>\n          <li parentName=\"ol\">{`Respond to ENTER, SPACEBAR keypresses`}</li>\n          <li parentName=\"ol\">{`Perform UI actions that do not change the URL or load a new page`}</li>\n        </ol>\n      </li>\n      <li parentName=\"ol\">{`Call to action links can look like buttons as long as:`}\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">{`SUCCESS CRITERIA:`}</li>\n          <li parentName=\"ol\">{`Load another page URL (see rule #1 success criteria)`}</li>\n          <li parentName=\"ol\">{`Announce themselves as “links” to screen readers and assistive devices`}</li>\n        </ol>\n      </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"common-link-and-button-scenarios-sup-idheading44sup\"\n    }}>{`Common link and button scenarios `}<sup parentName=\"h2\" {...{\n        \"id\": \"heading4\"\n      }}>{`4`}</sup></h2>\n    <ul>\n      <li parentName=\"ul\">{`Imagine copy/pasting a URL into a new browser window, sight unseen. Good scenarios for a LINK:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`You expect the page to load scrolled down somewhere`}</li>\n          <li parentName=\"ul\">{`You have a call to action that navigates to another page`}</li>\n          <li parentName=\"ul\">{`You are loading a second or third tab, pre-selected`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Imagine you are presenting users with an action that does not load a new page. Good scenarios for a BUTTON:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`You have a conditional message that the user should trigger or dismiss`}</li>\n          <li parentName=\"ul\">{`You are adding or removing something like a receipt, prescription, appeal`}</li>\n          <li parentName=\"ul\">{`Show/hide accordions`}</li>\n          <li parentName=\"ul\">{`Submit a form asynchronously`}</li>\n          <li parentName=\"ul\">{`Submit an asynchronous request, then redirect users based on the server response. This is a middle ground, but feels like a good case for using a button, considering the original function was asynchronous and might keep users on the same page depending on the response.`}</li>\n          <li parentName=\"ul\">{`Open and close a modal dialog`}</li>\n          <li parentName=\"ul\">{`Alert boxes or confirmations`}</li>\n          <li parentName=\"ul\">{`Do not underline button text. Better to have a halo, background color, or border with plenty of hit space.`}</li>\n          <li parentName=\"ul\">{`Underline link text`}</li>\n          <li parentName=\"ul\">{`Calls to action links can omit the underline, but would be well served with a design that distinguishes them from buttons. Use these sparingly, maybe one per page.`}</li>\n        </ul>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}