{"version":3,"sources":["webpack:///./src/components/sidebar/SidebarItems.jsx","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./src/components/EditLink.jsx","webpack:///./src/layouts/SidebarLayout.jsx","webpack:///./src/pages/forms/creating-a-form-config-file.mdx"],"names":["ComponentList","query","render","data","SidebarItems","items","components","edges","map","comp","href","node","path","name","context","SidebarItem","item","key","to","isSublist","length","className","Sidebar","location","sidebarSection","sidebarData","sections","find","section","pathname","includes","EditLink","sourceUrl","class","aria-hidden","SidebarLayout","children","pageContext","Layout","id","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-forms-creating-a-form-config-file-mdx-ee47146ee7848be0701b.js","sourcesContent":["import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nfunction ComponentList() {\n  return (\n    <StaticQuery\n      query={graphql`\n        query ComponentListQuery {\n          components: allSitePage(\n            filter: { context: { source: { eq: \"formation-react\" } } }\n            sort: { fields: [context___name], order: ASC }\n          ) {\n            edges {\n              node {\n                path\n                context {\n                  source\n                  name\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <SidebarItems\n          items={data.components.edges.map(comp => ({\n            href: comp.node.path,\n            name: comp.node.context.name,\n          }))}\n        />\n      )}\n    />\n  );\n}\n\nfunction SidebarItem({ item }) {\n  if (item.href) {\n    return (\n      <li key={item.name}>\n        <Link to={item.href}>{item.name}</Link>\n      </li>\n    );\n  }\n  return <li key={item.name}>{item.name} (future)</li>;\n}\n\nexport default function SidebarItems({ items, isSublist = false }) {\n  if (!items.length) {\n    return null;\n  }\n\n  return (\n    <ul className=\"site-c-sidenav-list\">\n      {items.map(item => {\n        if (item.items) {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <SidebarItems isSublist items={item.items} />\n            </li>\n          );\n        }\n        if (item.query === 'componentList') {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <ComponentList />\n            </li>\n          );\n        }\n        return <SidebarItem item={item} key={item.name} />;\n      })}\n    </ul>\n  );\n}\n","import React from 'react';\nimport SidebarItems from './SidebarItems';\nimport sidebarData from '../../sidebar';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nexport default function Sidebar({ location }) {\n  const sidebarSection = sidebarData.sections.find(section =>\n    location.pathname.includes(section.href),\n  );\n\n  if (!sidebarSection) {\n    return null;\n  }\n\n  return (\n    <div className=\"vads-l-col--4 site-c-content__nav\">\n      <div className=\"site-c-sidenav\">\n        <SidebarItems items={sidebarSection.items} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function EditLink({ sourceUrl }) {\n  return sourceUrl ? (\n    <div>\n      <i class=\"fa fa-edit\" aria-hidden=\"true\" />{' '}\n      <a href={sourceUrl}>Edit this page on GitHub</a>\n    </div>\n  ) : null;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Sidebar from '../components/sidebar/Sidebar';\nimport EditLink from '../components/EditLink';\nimport Layout from './Layout';\n\n/**\n * SidebarLayout\n *\n * @class SidebarLayout\n * @extends {React.Component}\n */\nexport default function SidebarLayout({ children, location, pageContext }) {\n  return (\n    <Layout location={location}>\n      <div className=\"vads-l-row\">\n        <Sidebar location={location} />\n        <div\n          id=\"main-content\"\n          className=\"vads-l-col--8 site-c-content__content docSearch-content\"\n        >\n          {children}\n          <EditLink sourceUrl={pageContext.sourceUrl} />\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nSidebarLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/jenkins/workspace/ran-facing-services-tools_master/packages/documentation/src/layouts/SidebarLayout.jsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"creating-a-form-config-file\"\n    }}>{`Creating a form config file`}</h1>\n    <p>{`Your form is generated from a JSON Schema configuration file called `}<inlineCode parentName=\"p\">{`form.js`}</inlineCode>{`, along with a few other key configuration files.`}</p>\n    <h3 {...{\n      \"id\": \"in-this-guide\"\n    }}>{`In this guide`}</h3>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#elements-of-the-form-config\"\n        }}>{`Elements of the form config`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#how-react-components-are-rendered\"\n        }}>{`How React components are rendered`}</a></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"elements-of-the-form-config\"\n    }}>{`Elements of the form config`}</h3>\n    <p>{`The form config itself is an object with many properties that determine how your form is rendered. It must contain these elements:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Top level information about the form, such as title, URL, and whether or not certain features are enabled`}</li>\n      <li parentName=\"ul\">{`Nested objects for each `}<inlineCode parentName=\"li\">{`chapter`}</inlineCode>{` of the form (if you're building a multi-page form). Within each `}<inlineCode parentName=\"li\">{`chapter`}</inlineCode>{`, additional nested objects for each `}<inlineCode parentName=\"li\">{`page`}</inlineCode>{` within that `}<inlineCode parentName=\"li\">{`chapter`}</inlineCode>{`. For more information, see \"`}<a parentName=\"li\" {...{\n          \"href\": \"/forms/creating-custom-fields-and-widgets#supporting-multi-page-forms\"\n        }}>{`Supporting multi-page forms`}</a>{`.\"`}</li>\n      <li parentName=\"ul\">{`Top-level title and URL information about each `}<inlineCode parentName=\"li\">{`page`}</inlineCode>{` of the form, as well as 2 essential objects:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`schema`}</inlineCode>{`: Describes the form fields and the type of data each field accepts`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`uiSchema`}</inlineCode>{`: Describes all UI elements of the form fields, such as label text, error message text, or CSS classes`}</li>\n        </ul>\n      </li>\n    </ul>\n    <p>{`The `}<inlineCode parentName=\"p\">{`schema`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`uiSchema`}</inlineCode>{` contain the essential information to build all of the form fields. For more information, see \"`}<a parentName=\"p\" {...{\n        \"href\": \"/forms/about-the-schema-and-uischema-objects\"\n      }}>{`About the `}<inlineCode parentName=\"a\">{`schema`}</inlineCode>{` and `}<inlineCode parentName=\"a\">{`uiSchema`}</inlineCode>{` objects`}</a>{`.\" For a comprehensive example of a form config, with descriptions of the main properties you might include, see \"`}<a parentName=\"p\" {...{\n        \"href\": \"/forms/config-options\"\n      }}>{`config options`}</a>{`\".`}</p>\n    <h3 {...{\n      \"id\": \"how-react-components-are-rendered\"\n    }}>{`How React components are rendered`}</h3>\n    <p>{`The VAFS code uses the form config to determine which React components to render in order to build your form, usually automatically. React components require props to render properly. These are passed down through the top-level `}<inlineCode parentName=\"p\">{`Form`}</inlineCode>{` component, which takes the entire form config itself as a prop. The `}<inlineCode parentName=\"p\">{`Form`}</inlineCode>{` component is also connected to the store, so it has access to the form data as well.`}</p>\n    <p>{`For more information, see \"`}<a parentName=\"p\" {...{\n        \"href\": \"/forms/component-hierarchy\"\n      }}>{`About the component hierarchy`}</a>{`.\"`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}