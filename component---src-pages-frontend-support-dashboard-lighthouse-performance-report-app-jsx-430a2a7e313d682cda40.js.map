{"version":3,"sources":["webpack:///./src/pages/frontend-support-dashboard/lighthouse-performance-report/app.jsx"],"names":["transformCoverageReportToArray","report","a","Object","values","map","cov","rootUrl","path","s3","App","location","useState","coverageReportData","setCoverageReportData","useEffect","rawTableData","coverageReport","transformedTableData","handleCoverageReportData","length","className","id","keys","key","href"],"mappings":"iMAKMA,EAA8B,uCAAG,WAAMC,GAAN,SAAAC,EAAA,+EAE9BC,OAAOC,OAAOH,GAAQI,KAAI,SAAAC,GAC/B,MAAQ,CACNC,QAAQ,aAAcD,EAAIE,KAC1BC,GAAG,0FAA2FH,EAAIG,QALjE,2CAAH,sDAgDrBC,UAtCH,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACb,EAAoDC,mBAAS,IAAtDC,EAAP,KAA2BC,EAA3B,KAYA,OAVAC,qBAAU,YACsB,uCAAG,8BAAAb,EAAA,6DACzBc,EAAeC,EADU,SAEIjB,EAA+BgB,GAFnC,OAEzBE,EAFyB,OAG/BJ,EAAsBI,GAHS,2CAAH,qDAM9BC,KACC,IAE+B,IAA9BN,EAAmBO,OACd,KAIP,kBAAC,IAAD,CAAQT,SAAUA,GAChB,yBAAKU,UAAU,6BACb,kBAAC,IAAD,CAASV,SAAUA,IACnB,yBACEW,GAAG,wBACHD,UAAU,gFAEV,0DACA,kDACA,4BACGlB,OAAOoB,KAAKV,GAAoBR,KAAI,SAASmB,GAC5C,OAAO,4BAAI,uBAAGC,KAAMZ,EAAmBW,GAAKf,IAAKI,EAAmBW,GAAKjB,mB","file":"component---src-pages-frontend-support-dashboard-lighthouse-performance-report-app-jsx-430a2a7e313d682cda40.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Layout from '../../../layouts/Layout';\nimport Sidebar from '../../../components/sidebar/Sidebar';\nimport * as coverageReport from './lighthouse-report.json';\n\nconst transformCoverageReportToArray = async report => {\n  // Add each app coverage result to the table\n  return Object.values(report).map(cov => {\n    return ({\n      rootUrl: `www.va.gov${cov.path}`,\n      s3: `https://vetsgov-website-builds-s3-upload-test.s3-us-gov-west-1.amazonaws.com/lighthouse${cov.s3}`,\n    });\n  });\n};\n\nconst App = ({ location }) => {\n  const [coverageReportData, setCoverageReportData] = useState([]);\n\n  useEffect(() => {\n    const handleCoverageReportData = async () => {\n      const rawTableData = coverageReport.default;\n      const transformedTableData = await transformCoverageReportToArray(rawTableData);\n      setCoverageReportData(transformedTableData);\n    };\n\n    handleCoverageReportData();\n  }, []); \n  \n  if (coverageReportData.length === 0) {\n    return null;\n  }\n\n  return (\n    <Layout location={location}>\n      <div className=\"vads-l-row site-l-wrapper\">\n        <Sidebar location={location} />\n        <div\n          id=\"main-content-coverage\"\n          className=\"dash-coverage-table site-c-content__content docSearch-content vads-l-col--12\"\n        >\n          <h1>Frontend Support Dashboard</h1>\n          <h2>Performance Report</h2>\n          <ul>\n            {Object.keys(coverageReportData).map(function(key){\n              return <li><a href={coverageReportData[key].s3}>{coverageReportData[key].rootUrl}</a></li>;\n            })}\n          </ul>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default App;\n"],"sourceRoot":""}