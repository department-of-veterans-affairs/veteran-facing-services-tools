{"version":3,"sources":["webpack:///./src/pages/frontend-support-dashboard/cross-app-import-report/app.jsx","webpack:///./node_modules/@department-of-veterans-affairs/component-library/Table.js","webpack:///./src/components/dashboard/DashboardDataFetch.jsx","webpack:///./src/components/dashboard/definitions/constants.jsx"],"names":["getAppImportData","importGraph","Object","keys","map","appName","appImports","platformImports","Set","platformFilesThatImportFromThisApp","file","split","importingFromApp","appsToTest","slice","join","appImportingFrom","appsThatThisAppImportsFrom","isIsolated","icon","className","aria-label","aria-hidden","crossAppImportFields","label","value","App","location","useState","crossAppImportData","setCrossAppImportData","useEffect","a","crossAppImportDataFetch","vetsWebsiteInfo","crossAppImports","processImports","appImportData","totalAppCount","appsIsolated","stats","length","filter","app","percentIsolated","toFixed","id","data","fields","defineProperty","exports","_react","_interopRequireDefault","_classnames","obj","__esModule","borderClasses","_default","props","currentSort","ariaLabelledBy","createElement","role","field","nonSortable","key","scope","fa","order","item","rowIndex","concat","index","alignLeft","alignRight","DeployStatusDataFetch","repo","Promise","all","fetch","devBuildText","stagingBuildText","prodBuildText","owner","devBuildTextResponse","stagingBuildTextResponse","prodBuildTextResponse","commitsResponse","text","ok","Error","statusText","json","commits","result","TestCoverageDataFetch","prodTestCoverage","testCoverageDataResponse","statusDataFetch","backendStatus","statusDataResponse","console","log","crossAppImportDataResponse","contentBuildInfo"],"mappings":"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","file":"component---src-pages-frontend-support-dashboard-cross-app-import-report-app-jsx-990456f61e5f79692dcf.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Table from '@department-of-veterans-affairs/component-library/Table';\nimport Layout from '../../../layouts/Layout';\nimport Sidebar from '../../../components/sidebar/Sidebar';\nimport { crossAppImportDataFetch } from '../../../components/dashboard/DashboardDataFetch';\nimport { vetsWebsiteInfo } from '../../../components/dashboard/definitions/constants';\n\n/**\n * Gets a check or 'x' icon based on the given status.\n *\n * @param {boolean} status - Determines whether to return check or x icon.\n * @returns {JSX.Element} Status icon.\n */\nconst getStatusIcon = status => {\n  const trueIcon = (\n    <span className=\"dash-true-icon\" aria-label=\"True Icon\">\n      <i className=\"fas fa-check-circle fa-2x\" aria-hidden=\"true\" />\n    </span>\n  );\n  const falseIcon = (\n    <span className=\"dash-false-icon\" aria-label=\"False Icon\">\n      <i className=\"fas fa-times-circle fa-2x\" aria-hidden=\"true\" />\n    </span>\n  );\n\n  return status ? trueIcon : falseIcon;\n};\n\n/**\n * Transforms import graph data for table.\n *\n * @param {Object} importGraph - Cross app import graph.\n * @returns {Object[]} Transformed import graph data.\n */\nconst getAppImportData = importGraph => {\n  return Object.keys(importGraph).map(appName => {\n    const appImports = importGraph[appName];\n\n    // Platform directory paths with files that import from the app.\n    const platformImports = [\n      ...new Set(\n        appImports.platformFilesThatImportFromThisApp.map(\n          file => `platform/${file.split('/')[2]}`,\n        ),\n      ),\n    ];\n\n    // Apps in 'appsToTest' let us know which apps import from the app in question.\n    // The app itself is always first in 'appsToTest', so we need to remove it.\n    const importingFromApp =\n      [...appImports.appsToTest.slice(1), ...platformImports].join(', ') ||\n      null;\n\n    // Apps that the app in question is importing from.\n    const appImportingFrom =\n      Object.keys(appImports.appsThatThisAppImportsFrom).join(', ') || null;\n\n    const isIsolated = !importingFromApp && !appImportingFrom;\n    const icon = getStatusIcon(isIsolated);\n\n    return { appName, importingFromApp, appImportingFrom, icon, isIsolated };\n  });\n};\n\n/**\n * Gets statistics of isolated apps from the given import data.\n *\n * @param {Object[]} appImportData - Transformed app import data.\n * @returns {Object} Object with stats on isolated apps.\n */\nconst getIsolationStats = appImportData => {\n  const totalAppCount = appImportData.length;\n  const appsIsolated = appImportData.filter(app => app.isIsolated).length;\n\n  const percentIsolated = ((appsIsolated / totalAppCount) * 100).toFixed(2);\n\n  return { appsIsolated, totalAppCount, percentIsolated };\n};\n\nconst crossAppImportFields = [\n  { label: 'Application', value: 'appName' },\n  { label: 'Places importing from application', value: 'importingFromApp' },\n  { label: 'Places application imports from', value: 'appImportingFrom' },\n  { label: 'Isolated', value: 'icon' },\n];\n\nconst App = ({ location }) => {\n  const [crossAppImportData, setCrossAppImportData] = useState([]);\n\n  useEffect(() => {\n    const processImports = async () => {\n      const importGraph = await crossAppImportDataFetch(vetsWebsiteInfo);\n      const crossAppImports = getAppImportData(importGraph);\n\n      setCrossAppImportData(crossAppImports);\n    };\n\n    processImports();\n  }, []);\n\n  const stats = getIsolationStats(crossAppImportData);\n\n  return (\n    <Layout location={location}>\n      <div className=\"vads-l-row site-l-wrapper\">\n        <Sidebar location={location} />\n        <div\n          id=\"main-content-coverage\"\n          className=\"dash-coverage-table site-c-content__content docSearch-content vads-l-col--12\"\n        >\n          <h1>Frontend Support Dashboard</h1>\n          <h2>Cross App Import Report</h2>\n          <p>\n            <strong>\n              {stats.appsIsolated} out of {stats.totalAppCount} (\n              {stats.percentIsolated} %) application directories are isolated\n            </strong>\n          </p>\n\n          <Table data={crossAppImportData} fields={crossAppImportFields} />\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default App;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar borderClasses = 'vads-u-border-top--0 vads-u-border-right--0 vads-u-border-left--0 vads-u-font-family--sans vads-u-padding--0 vads-u-padding-y--0p5 medium-screen:vads-u-padding--2';\nvar rowPaddingClass = 'vads-u-padding-y--2';\n\nfunction Table(props) {\n  var currentSort = props.currentSort,\n      fields = props.fields,\n      data = props.data,\n      ariaLabelledBy = props.ariaLabelledBy;\n  return /*#__PURE__*/_react[\"default\"].createElement(\"table\", {\n    \"aria-labelledby\": ariaLabelledBy,\n    className: \"responsive\",\n    role: \"table\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"thead\", null, /*#__PURE__*/_react[\"default\"].createElement(\"tr\", {\n    role: \"row\"\n  }, fields.map(function (field) {\n    return field.nonSortable ? /*#__PURE__*/_react[\"default\"].createElement(\"th\", {\n      key: field.value\n    }, field.label) : /*#__PURE__*/_react[\"default\"].createElement(\"th\", {\n      key: field.value,\n      className: borderClasses,\n      role: \"columnheader\",\n      scope: \"col\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(\"button\", {\n      className: \"va-button-link vads-u-font-weight--bold vads-u-color--base vads-u-text-decoration--none\"\n    }, field.label, (currentSort === null || currentSort === void 0 ? void 0 : currentSort.value) === field.value && /*#__PURE__*/_react[\"default\"].createElement(\"i\", {\n      className: (0, _classnames[\"default\"])({\n        fa: true,\n        'fas fa-caret-down': currentSort.order === 'DESC',\n        'fas fa-caret-up': currentSort.order === 'ASC'\n      })\n    })));\n  }))), /*#__PURE__*/_react[\"default\"].createElement(\"tbody\", null, data.map(function (item, rowIndex) {\n    return /*#__PURE__*/_react[\"default\"].createElement(\"tr\", {\n      key: rowIndex,\n      className: \"\".concat(borderClasses, \" \").concat(rowPaddingClass),\n      role: \"row\"\n    }, fields.map(function (field, index) {\n      return /*#__PURE__*/_react[\"default\"].createElement(\"td\", {\n        \"data-index\": index,\n        className: (0, _classnames[\"default\"])(borderClasses, {\n          'vads-u-text-align--left': field.alignLeft,\n          'medium-screen:vads-u-text-align--right': field.alignRight\n        }),\n        \"data-label\": field.label,\n        key: \"\".concat(rowIndex, \"-\").concat(field.label),\n        role: \"cell\"\n      }, item[field.value] === null ? '---' : item[field.value]);\n    }));\n  })));\n}\n\nvar _default = Table;\nexports[\"default\"] = _default;","export async function DeployStatusDataFetch(repo) {\n  // https://dmitripavlutin.com/javascript-fetch-async-await/#5-parallel-fetch-requests\n  const [\n    devBuildTextResponse,\n    stagingBuildTextResponse,\n    prodBuildTextResponse,\n    commitsResponse,\n  ] = await Promise.all([\n    fetch(repo.devBuildText),\n    fetch(repo.stagingBuildText),\n    fetch(repo.prodBuildText),\n    // last 30 commits from vets-website\n    fetch(`https://api.github.com/repos/${repo.owner}/${repo.repo}/commits`),\n  ]);\n\n  const devBuildText = await devBuildTextResponse.text();\n  if (!devBuildTextResponse.ok) {\n    throw Error(devBuildTextResponse.statusText);\n  }\n  const stagingBuildText = await stagingBuildTextResponse.text();\n  if (!stagingBuildTextResponse.ok) {\n    throw Error(stagingBuildTextResponse.statusText);\n  }\n  const prodBuildText = await prodBuildTextResponse.text();\n  if (!prodBuildTextResponse.ok) {\n    throw Error(prodBuildTextResponse.statusText);\n  }\n  const commits = await commitsResponse.json();\n  if (!commitsResponse.ok) {\n    throw Error(commitsResponse.statusText);\n  }\n\n  const result = {\n    devBuildText,\n    stagingBuildText,\n    prodBuildText,\n    commits,\n  };\n\n  return result;\n}\n\nexport async function TestCoverageDataFetch(repo) {\n  const testCoverageDataResponse = await fetch(repo.prodTestCoverage);\n  if (!testCoverageDataResponse.ok) {\n    throw Error(testCoverageDataResponse.statusText);\n  }\n  return testCoverageDataResponse.json();\n}\n\nexport async function statusDataFetch(repo) {\n  const statusDataResponse = await fetch(repo.backendStatus);\n  console.log(statusDataResponse);\n  if (!statusDataResponse.ok) {\n    throw Error(statusDataResponse.statusText);\n  }\n  return statusDataResponse.json();\n}\n\nexport async function crossAppImportDataFetch(repo) {\n  const crossAppImportDataResponse = await fetch(repo.crossAppImports);\n  if (!crossAppImportDataResponse.ok) {\n    throw Error(crossAppImportDataResponse.statusText);\n  }\n  return crossAppImportDataResponse.json();\n}\n","// https://github.com/department-of-veterans-affairs/vets-website/blob/1cee564813462d6fe3896a10e477016f7cac2ebd/jenkins/common.groovy#L316\nexport const vetsWebsiteInfo = {\n  owner: 'department-of-veterans-affairs',\n  repo: 'vets-website',\n  devBuildText:\n    'https://dev-va-gov-assets.s3-us-gov-west-1.amazonaws.com/BUILD.txt',\n  stagingBuildText:\n    'https://staging-va-gov-assets.s3-us-gov-west-1.amazonaws.com/BUILD.txt',\n  prodBuildText:\n    'https://prod-va-gov-assets.s3-us-gov-west-1.amazonaws.com/BUILD.txt',\n  prodTestCoverage:\n    'https://s3-us-gov-west-1.amazonaws.com/vetsgov-website-builds-s3-upload-test/coverage/test-coverage-report.json',\n  backendStatus: 'https://api.va.gov/v0/backend_statuses',\n  crossAppImports:\n    'https://s3-us-gov-west-1.amazonaws.com/vetsgov-website-builds-s3-upload-test/cross-app-imports/cross-app-imports.json',\n};\n\n// https://github.com/department-of-veterans-affairs/content-build/blob/844d3170a92005dbee70a7ecf643362137ba68c3/jenkins/common.groovy#L280\nexport const contentBuildInfo = {\n  owner: 'department-of-veterans-affairs',\n  repo: 'content-build',\n  devBuildText: 'https://dev.va.gov/BUILD.txt',\n  stagingBuildText: 'https://staging.va.gov/BUILD.txt',\n  prodBuildText: 'https://www.va.gov/BUILD.txt',\n};\n"],"sourceRoot":""}