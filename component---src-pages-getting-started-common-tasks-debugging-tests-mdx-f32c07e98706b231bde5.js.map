{"version":3,"sources":["webpack:///./src/components/sidebar/SidebarItems.jsx","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./src/components/EditLink.jsx","webpack:///./src/layouts/SidebarLayout.jsx","webpack:///./src/pages/getting-started/common-tasks/debugging-tests.mdx"],"names":["ComponentList","query","render","data","SidebarItems","items","components","edges","map","comp","href","node","path","name","context","SidebarItem","item","key","to","isSublist","length","className","Sidebar","location","sidebarSection","sidebarData","sections","find","section","pathname","includes","EditLink","sourceUrl","class","aria-hidden","SidebarLayout","children","pageContext","Layout","id","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","props","mdxType","parentName","isMDXComponent"],"mappings":"qKASA,SAASA,IACP,OACE,kBAAC,cAAD,CACEC,MAAK,WAkBLC,OAAQ,SAAAC,GAAI,OACV,kBAACC,EAAD,CACEC,MAAOF,EAAKG,WAAWC,MAAMC,KAAI,SAAAC,GAAI,MAAK,CACxCC,KAAMD,EAAKE,KAAKC,KAChBC,KAAMJ,EAAKE,KAAKG,QAAQD,cAQpC,SAASE,EAAT,GAAgC,IAATC,EAAQ,EAARA,KACrB,OAAIA,EAAKN,KAEL,wBAAIO,IAAKD,EAAKH,MACZ,kBAAC,OAAD,CAAMK,GAAIF,EAAKN,MAAOM,EAAKH,OAI1B,wBAAII,IAAKD,EAAKH,MAAOG,EAAKH,KAA1B,aAGM,SAAST,EAAT,GAAqD,IAA7BC,EAA4B,EAA5BA,MAA4B,IAArBc,iBAAqB,SACjE,OAAKd,EAAMe,OAKT,wBAAIC,UAAU,uBACXhB,EAAMG,KAAI,SAAAQ,GACT,OAAIA,EAAKX,MAEL,wBAAIY,IAAKD,EAAKH,MACXM,GAAa,kBAACJ,EAAD,CAAaC,KAAMA,KAC/BG,GAAa,wBAAIE,UAAU,mBAAmBL,EAAKH,MACrD,kBAACT,EAAD,CAAce,WAAS,EAACd,MAAOW,EAAKX,SAIvB,kBAAfW,EAAKf,MAEL,wBAAIgB,IAAKD,EAAKH,MACXM,GAAa,kBAACJ,EAAD,CAAaC,KAAMA,KAC/BG,GAAa,wBAAIE,UAAU,mBAAmBL,EAAKH,MACrD,kBAACb,EAAD,OAIC,kBAACe,EAAD,CAAaC,KAAMA,EAAMC,IAAKD,EAAKH,WAxBvC,K,yBC7CI,SAASS,EAAT,GAAgC,IAAbC,EAAY,EAAZA,SAC1BC,EAAiBC,IAAYC,SAASC,MAAK,SAAAC,GAAO,OACtDL,EAASM,SAASC,SAASF,EAAQlB,SAGrC,OAAKc,EAKH,yBAAKH,UAAU,qCACb,yBAAKA,UAAU,kBACb,kBAACjB,EAAD,CAAcC,MAAOmB,EAAenB,UANjC,KCdI,SAAS0B,EAAT,GAAkC,IAAdC,EAAa,EAAbA,UACjC,OAAOA,EACL,6BACE,uBAAGC,MAAM,aAAaC,cAAY,SAAU,IAC5C,uBAAGxB,KAAMsB,GAAT,6BAEA,K,gBCKS,SAASG,EAAT,GAA6D,IAApCC,EAAmC,EAAnCA,SAAUb,EAAyB,EAAzBA,SAAUc,EAAe,EAAfA,YAC1D,OACE,kBAACC,EAAA,EAAD,CAAQf,SAAUA,GAChB,yBAAKF,UAAU,cACb,kBAACC,EAAD,CAASC,SAAUA,IACnB,yBACEgB,GAAG,eACHlB,UAAU,2DAETe,EACD,kBAACL,EAAD,CAAUC,UAAWK,EAAYL,iB,kLCjB9BQ,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDtC,EAEC,EAFDA,WACGuC,EACF,8BACD,OAAO,cAACH,EAAD,iBAAeD,EAAiBI,EAAhC,CAAuCvC,WAAYA,EAAYwC,QAAQ,cAG5E,mBAAQ,CACN,GAAM,mBADR,mBAGA,uBAAG,wBAAQC,WAAW,KAAI,oBAAIA,WAAW,UAAf,kBAC1B,wBACE,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,gHAEF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,2CACA,oBAAIA,WAAW,MACb,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,SAA6B,iCAAGA,WAAW,KAAQ,CAC/C,KAAQ,sBADiB,qBAA7B,MAIF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,SAA6B,4BAAYA,WAAW,KAAvB,YAA7B,8EAAgK,wBAAQA,WAAW,KAAnB,SAAhK,kDAA4P,wBAAQA,WAAW,KAAnB,SAA5P,uBACA,qBAAKA,WAAW,MAAK,oCAAMA,WAAW,OAAU,IAA3B,oGAOvB,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,uBACA,qBAAKA,WAAW,MAAK,oCAAMA,WAAW,OAAU,IAA3B,+LAGvB,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,iDAAqE,4BAAYA,WAAW,KAAvB,iBAArE,+GAEF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,6HAEF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,6FAEF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,6EAIN,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,0CACA,oBAAIA,WAAW,MACb,oBAAIA,WAAW,MAAf,YAAiC,4BAAYA,WAAW,MAAvB,eAAjC,0BAAoH,4BAAYA,WAAW,MAAvB,uBAApH,QAA6L,qBAAKA,WAAW,MAAK,oCAAMA,WAAW,OAAU,IAA3B,4rBAsBlN,oBAAIA,WAAW,MAAf,+GAIN,+CACA,wBACE,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,2CAA+D,4BAAYA,WAAW,KAAvB,YAA/D,+GACA,qBAAKA,WAAW,MAAK,oCAAMA,WAAW,OAAU,IAA3B,wJAOvB,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,8CAAkE,4BAAYA,WAAW,KAAvB,YAAlE,4GACA,oBAAIA,WAAW,MACb,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,sCACA,qBAAKA,WAAW,MAAK,oCAAMA,WAAW,OAAU,IAA3B,wMAWvB,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,WAA+B,iCAAGA,WAAW,KAAQ,CACjD,KAAQ,qBADmB,oBAA/B,sBAIF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,gFAAoG,4BAAYA,WAAW,KAAvB,iBAApG,wCACA,qBAAKA,WAAW,MAAK,oCAAMA,WAAW,OAAU,IAA3B,+IAGvB,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,iDAAqE,4BAAYA,WAAW,KAAvB,iBAArE,+GAEF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,6HAEF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,gIASZH,EAAWI,gBAAiB","file":"component---src-pages-getting-started-common-tasks-debugging-tests-mdx-f32c07e98706b231bde5.js","sourcesContent":["import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nfunction ComponentList() {\n  return (\n    <StaticQuery\n      query={graphql`\n        query ComponentListQuery {\n          components: allSitePage(\n            filter: { context: { source: { eq: \"formation-react\" } } }\n            sort: { fields: [context___name], order: ASC }\n          ) {\n            edges {\n              node {\n                path\n                context {\n                  source\n                  name\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <SidebarItems\n          items={data.components.edges.map(comp => ({\n            href: comp.node.path,\n            name: comp.node.context.name,\n          }))}\n        />\n      )}\n    />\n  );\n}\n\nfunction SidebarItem({ item }) {\n  if (item.href) {\n    return (\n      <li key={item.name}>\n        <Link to={item.href}>{item.name}</Link>\n      </li>\n    );\n  }\n  return <li key={item.name}>{item.name} (future)</li>;\n}\n\nexport default function SidebarItems({ items, isSublist = false }) {\n  if (!items.length) {\n    return null;\n  }\n\n  return (\n    <ul className=\"site-c-sidenav-list\">\n      {items.map(item => {\n        if (item.items) {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <SidebarItems isSublist items={item.items} />\n            </li>\n          );\n        }\n        if (item.query === 'componentList') {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <ComponentList />\n            </li>\n          );\n        }\n        return <SidebarItem item={item} key={item.name} />;\n      })}\n    </ul>\n  );\n}\n","import React from 'react';\nimport SidebarItems from './SidebarItems';\nimport sidebarData from '../../sidebar';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nexport default function Sidebar({ location }) {\n  const sidebarSection = sidebarData.sections.find(section =>\n    location.pathname.includes(section.href),\n  );\n\n  if (!sidebarSection) {\n    return null;\n  }\n\n  return (\n    <div className=\"vads-l-col--4 site-c-content__nav\">\n      <div className=\"site-c-sidenav\">\n        <SidebarItems items={sidebarSection.items} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function EditLink({ sourceUrl }) {\n  return sourceUrl ? (\n    <div>\n      <i class=\"fa fa-edit\" aria-hidden=\"true\" />{' '}\n      <a href={sourceUrl}>Edit this page on GitHub</a>\n    </div>\n  ) : null;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Sidebar from '../components/sidebar/Sidebar';\nimport EditLink from '../components/EditLink';\nimport Layout from './Layout';\n\n/**\n * SidebarLayout\n *\n * @class SidebarLayout\n * @extends {React.Component}\n */\nexport default function SidebarLayout({ children, location, pageContext }) {\n  return (\n    <Layout location={location}>\n      <div className=\"vads-l-row\">\n        <Sidebar location={location} />\n        <div\n          id=\"main-content\"\n          className=\"vads-l-col--8 site-c-content__content docSearch-content\"\n        >\n          {children}\n          <EditLink sourceUrl={pageContext.sourceUrl} />\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nSidebarLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/jenkins/workspace/ran-facing-services-tools_master/packages/documentation/src/layouts/SidebarLayout.jsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"debugging-tests\"\n    }}>{`Debugging tests`}</h1>\n    <p><strong parentName=\"p\"><em parentName=\"strong\">{` Unit Tests `}</em></strong></p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`You can put a console.log in your test code. When you run the test, the output will be in the command line.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Use Chrome devtools to debug unit tests`}</p>\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`Go to `}<a parentName=\"p\" {...{\n                \"href\": \"chrome://inspect/\"\n              }}>{`chrome://inspect/`}</a>{`.`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`Add a `}<inlineCode parentName=\"p\">{`debugger`}</inlineCode>{` statement in your test code and if you want to run only your test add the `}<strong parentName=\"p\">{`.only`}</strong>{` on your test like so. Make sure to remove the `}<strong parentName=\"p\">{`.only`}</strong>{` once you are done.`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`  it.only('testing something', () => {\n    debugger\n\n    expect(value).to.eq(true);\n  })\n`}</code></pre>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`run in the terminal`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`  $ BABEL_ENV=test node_modules/.bin/mocha --inspect-brk --opts src/platform/testing/unit/mocha.opts --recursive '{test,src}/**/*.unit.spec.js?(x)' src/platform/testing/unit/helper.js\n`}</code></pre>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`Go to your Node Chrome Developer Tools. Under `}<inlineCode parentName=\"p\">{`Remote Target`}</inlineCode>{` you should see your test running. Click on the link where your test is running to open the debugger tool.`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`You will want to press the debugger play button to start the program. It will initially pause on the first line of code.`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`It might take awhile for the tests to setup, just be patient and eventually it will run.`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`Once the test runs, your code should break at your debugger statement.`}</p>\n          </li>\n        </ol>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`VSCode's debugging tool for unit tests`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Add this `}<inlineCode parentName=\"li\">{`Mocha Tests`}</inlineCode>{` configuration to your `}<inlineCode parentName=\"li\">{`.vscode/launch.json`}</inlineCode>{` file`}<pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`  {\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"type\": \"node\",\n            \"request\": \"launch\",\n            \"name\": \"Mocha Tests\",\n            \"env\": {\"BABEL_ENV\": \"test\"},\n            \"runtimeExecutable\": \"\\${workspaceFolder}/node_modules/.bin/mocha\",\n            \"runtimeArgs\": [\n                \"--inspect\",\n                \"--opts\",\n                \"\\${workspaceFolder}/src/platform/testing/unit/mocha.opts\",\n                \"--recursive\",\n                \"\\${workspaceFolder}/{test,src}/**/*.unit.spec.js?(x)\",\n                \"\\${workspaceFolder}/src/platform/testing/unit/helper.js\"\n            ],\n            \"port\": 9229\n        }\n    ]\n  }\n`}</code></pre></li>\n          <li parentName=\"ul\">{`Now you can add breakpoints or debugger statements to debug your code through the VSCode debugger tools.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <p>{`*** End to End tests`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`It's possible to set an infinite pause (`}<inlineCode parentName=\"p\">{`.pause()`}</inlineCode>{`) in the test code and then see what's happening at a given point in the browser where the test is running.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`  client\n    .openUrl('http://localhost:3000')\n    .waitForElementVisible('body', Timeouts.normal)\n    .pause()\n    .click('.submit_button')\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Using Node Chrome DevTools. You can add a (`}<inlineCode parentName=\"p\">{`.perform`}</inlineCode>{`) method and either console.log or add a debugger statement to debug your code in the callback function.`}</p>\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`add a perform method in your code.`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`client\n  .openUrl('http://localhost:3000')\n  .waitForElementVisible('body', Timeouts.normal)\n  .perform(() => {\n    console.log(testData);\n\n    debugger\n  })\n  .click('.submit_button')\n`}</code></pre>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`open up `}<a parentName=\"p\" {...{\n                \"href\": \"chrome://inspect\"\n              }}>{`chrome://inspect`}</a>{` in your browser.`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`In your terminal run. You can pass in a specific file path to test after the `}<inlineCode parentName=\"p\">{`nightwatch.js`}</inlineCode>{` or leave it blank to run all tests.`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`$ BABEL_ENV=test WEB_PORT=3001 node --inspect-brk node_modules/nightwatch/bin/runner.js -c config/nightwatch.js [optional file to test]\n`}</code></pre>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`Go to your Node Chrome Developer Tools. Under `}<inlineCode parentName=\"p\">{`Remote Target`}</inlineCode>{` you should see your test running. Click on the link where your test is running to open the debugger tool.`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`You will want to press the debugger play button to start the program. It will initially pause on the first line of code.`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`after the program starts it should pause at your debugger statement or you should see your console.logs in the console.`}</p>\n          </li>\n        </ol>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}