{"version":3,"sources":["webpack:///./src/components/sidebar/SidebarItems.jsx","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./src/layouts/SidebarLayout.jsx","webpack:///./src/pages/platform/architecture/static-site/urls.mdx"],"names":["ComponentList","query","render","data","SidebarItems","items","components","edges","map","comp","href","node","path","name","context","SidebarItem","item","key","to","isSublist","length","className","Sidebar","location","sidebarSection","sidebarData","sections","find","section","pathname","includes","SidebarLayout","children","Layout","id","layoutProps","MDXContent","props","layout","DefaultLayout","this","Object","assign","parentName","React","Component","_frontmatter"],"mappings":"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","file":"component---src-pages-platform-architecture-static-site-urls-mdx-9b28c65332373223ac49.js","sourcesContent":["import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nfunction ComponentList() {\n  return (\n    <StaticQuery\n      query={graphql`\n        query ComponentListQuery {\n          components: allSitePage(\n            filter: { context: { source: { eq: \"component\" } } }\n          ) {\n            edges {\n              node {\n                path\n                context {\n                  source\n                  name\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <SidebarItems\n          items={data.components.edges.map(comp => ({\n            href: comp.node.path,\n            name: comp.node.context.name,\n          }))}\n        />\n      )}\n    />\n  );\n}\n\nfunction SidebarItem({ item }) {\n  if (item.href) {\n    return (\n      <li key={item.name}>\n        <Link to={item.href}>{item.name}</Link>\n      </li>\n    );\n  }\n  return <li key={item.name}>{item.name} (future)</li>;\n}\nexport default function SidebarItems({ items, isSublist = false }) {\n  if (!items.length) {\n    return null;\n  }\n\n  return (\n    <ul className=\"site-c-sidenav-list\">\n      {items.map(item => {\n        if (item.items) {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <SidebarItems isSublist items={item.items} />\n            </li>\n          );\n        }\n        if (item.query === 'componentList') {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <ComponentList />\n            </li>\n          );\n        }\n        return <SidebarItem item={item} key={item.name} />;\n      })}\n    </ul>\n  );\n}\n","import React from 'react';\nimport SidebarItems from './SidebarItems';\nimport sidebarData from '../../sidebar';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nexport default function Sidebar({ location }) {\n  const sidebarSection = sidebarData.sections.find(section =>\n    location.pathname.includes(section.href),\n  );\n\n  if (!sidebarSection) {\n    return null;\n  }\n\n  return (\n    <div className=\"vads-l-col--4 site-c-content__nav\">\n      <div className=\"site-c-sidenav\">\n        <SidebarItems items={sidebarSection.items} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Layout from './Layout';\nimport Sidebar from '../components/sidebar/Sidebar';\n\n/**\n * Layout\n *\n * @class Layout\n * @extends {React.Component}\n */\nexport default function SidebarLayout({ children, location }) {\n  return (\n    <Layout location={location}>\n      <div className=\"vads-l-row\">\n        <Sidebar location={location} />\n        <div\n          id=\"main-content\"\n          className=\"vads-l-col--8 site-c-content__content docSearch-content\"\n        >\n          {children}\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nSidebarLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport DefaultLayout from \"/home/jenkins/workspace/ran-facing-services-tools_master/packages/documentation/src/layouts/SidebarLayout.jsx\";\nconst layoutProps = {};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = DefaultLayout;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" Layout={this.layout} layoutProps={Object.assign({}, layoutProps, props)} components={components}>\n\n      <h1 id=\"how-are-urls-created\">How Are URLs Created?</h1>\n      <MDXTag name=\"p\" components={components}>{`Understanding how content URLs are generated by Metalsmith helps prevent build errors. Here's how it works.`}</MDXTag>\n      <h2 id=\"pages-in-vagov-content\">Pages in vagov-content</h2>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Document paths are based on the Markdown file paths.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Each Markdown file generates a corresponding directory and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`index.html`}</MDXTag>{` file. For example:`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n            <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`_education/tools-programs.md`}</MDXTag>{` `}{`→`}{` `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`/education/tools-programs/index.html`}</MDXTag></MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`_education/tools-programs/index.md`}</MDXTag>{` `}{`→`}{` `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`/education/tools-programs/index.html`}</MDXTag></MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`_education/work-learn/non-traditional.md`}</MDXTag>{` `}{`→`}{` `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`_education/work-learn/non-traditional/index.html`}</MDXTag></MDXTag>\n          </MDXTag></MDXTag>\n      </MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"em\" components={components} parentName=\"p\"><MDXTag name=\"strong\" components={components} parentName=\"em\">{`Make sure that every collection sub-directory also has a Markdown file that shares its name.`}</MDXTag></MDXTag>{` Take the the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`_employment/job-seekers/`}</MDXTag>{` directory as an example. It also has an `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`_employment/job-seekers.md`}</MDXTag>{` file. Each Markdown file in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`_employment/job-seekers/`}</MDXTag>{` compiles to  `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`employment/jobs-seekers/name_of_markdown_file/index.html`}</MDXTag>{`, while `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`_employment/job-seekers.md`}</MDXTag>{` itself compiles to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`employment/job-seekers/index.html`}</MDXTag>{`.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Failing to take the above step means that you could generate breadcrumbs to pages that do not exist.`}</MDXTag>\n      <h2 id=\"pages-in-drupal\">Pages in Drupal</h2>\n      <MDXTag name=\"p\" components={components}>{`In Drupal, URLs are created based off the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`entityUrl.path`}</MDXTag>{` property included on each node. Similar to vagov-content pages, an index.html page is appended to that path, so that urls can reference just the path without an html extension.`}</MDXTag>\n           </MDXTag>;\n  }\n\n}\nexport const _frontmatter = {};\n    "],"sourceRoot":""}