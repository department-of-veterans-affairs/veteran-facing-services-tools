{"version":3,"sources":["webpack:///./src/components/EditLink.jsx","webpack:///./src/layouts/SidebarLayout.jsx","webpack:///./src/components/sidebar/SidebarItems.jsx","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./src/pages/gatsby-configurations.mdx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["EditLink","sourceUrl","class","aria-hidden","href","SidebarLayout","children","location","pageContext","Layout","className","Sidebar","id","SidebarItem","item","key","name","to","SidebarItems","items","isSublist","length","map","sidebarSection","sidebarData","sections","find","section","pathname","includes","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","_objectWithoutPropertiesLoose","source","excluded","i","target","sourceKeys","Object","keys","indexOf"],"mappings":"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","file":"component---src-pages-gatsby-configurations-mdx-26fefc55af3be43463a1.js","sourcesContent":["import React from 'react';\n\nexport default function EditLink({ sourceUrl }) {\n  return sourceUrl ? (\n    <div>\n      <i class=\"fa fa-edit\" aria-hidden=\"true\" />{' '}\n      <a href={sourceUrl}>Edit this page on GitHub</a>\n    </div>\n  ) : null;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Sidebar from '../components/sidebar/Sidebar';\nimport EditLink from '../components/EditLink';\nimport Layout from './Layout';\n\n/**\n * SidebarLayout\n *\n * @class SidebarLayout\n * @extends {React.Component}\n */\nexport default function SidebarLayout({ children, location, pageContext }) {\n  return (\n    <Layout location={location}>\n      <div className=\"vads-l-row site-l-wrapper\">\n        <Sidebar location={location} />\n        <div\n          id=\"main-content\"\n          className=\"vads-l-col--8 site-c-content__content docSearch-content\"\n        >\n          {children}\n          <EditLink sourceUrl={pageContext.sourceUrl} />\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nSidebarLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport { Link } from 'gatsby';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nfunction SidebarItem({ item }) {\n  if (item.href) {\n    return (\n      <li key={item.name}>\n        <Link to={item.href}>{item.name}</Link>\n      </li>\n    );\n  }\n  return <li key={item.name}>{item.name} (future)</li>;\n}\n\nexport default function SidebarItems({ items, isSublist = false }) {\n  if (!items.length) {\n    return null;\n  }\n\n  return (\n    <ul className=\"site-c-sidenav-list\">\n      {items.map(item => {\n        if (item.items) {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <SidebarItems isSublist items={item.items} />\n            </li>\n          );\n        }\n        return <SidebarItem item={item} key={item.name} />;\n      })}\n    </ul>\n  );\n}\n","import React from 'react';\nimport SidebarItems from './SidebarItems';\nimport sidebarData from '../../sidebar';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nexport default function Sidebar({ location }) {\n  const sidebarSection = sidebarData.sections.find(section =>\n    location.pathname.includes(section.href),\n  );\n\n  if (!sidebarSection) {\n    return null;\n  }\n\n  return (\n    <div className=\"vads-l-col--4 site-c-content__nav\">\n      <div className=\"site-c-sidenav\">\n        <SidebarItems items={sidebarSection.items} />\n      </div>\n    </div>\n  );\n}\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/jenkins/workspace/ran-facing-services-tools_master/packages/documentation/src/layouts/SidebarLayout.jsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"gatsby-configurations\"\n    }}>{`Gatsby Configurations`}</h2>\n    <h3 {...{\n      \"id\": \"why-we-chose-gatsby\"\n    }}>{`Why we chose Gatsby`}</h3>\n    <p>{`Gatsby was effectively chosen because it gave us the flexibility to create\ndocumentation for React Components and also regular documentation for developers.\nWe wanted to be able to generate documentation that lived inside of the code and\nalso generate information on propTypes. We also wanted the flexibility of creating\nmarkdown files for our normal documentation. Gatsby's plugin eco-system gave us a\nlot of flexibilities to customize it how we want it.`}</p>\n    <h3 {...{\n      \"id\": \"what-is-gatsby\"\n    }}>{`What is Gatsby`}</h3>\n    <p><inlineCode parentName=\"p\">{`\"Gatsby is a blazing fast modern site generator for React.\"`}</inlineCode></p>\n    <p>{`Gatsby utilizes React, Node, and GraphQL to generate a blazing fast static websites.\nYou can find more information at `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.gatsbyjs.org\"\n      }}>{`https://www.gatsbyjs.org`}</a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"our-custom-configurations\"\n    }}>{`Our Custom Configurations`}</h3>\n    <p>{`There are a few things that we wanted that Gatsby did not have out of the box.\nWe wanted to be able to document all our React components and generate PropType\ndocumentation. We also wanted to be able to transfer over all our markdown documentatation\nfrom `}<inlineCode parentName=\"p\">{`vets.gov-team`}</inlineCode>{` repo. Using Gatsby plugin eco-system. Below are the plugins\nand directions on how we inplemented them.`}</p>\n    <h3 {...{\n      \"id\": \"plugins\"\n    }}>{`Plugins`}</h3>\n    <p>{`All the plugins we use can be found in `}<inlineCode parentName=\"p\">{`gatsby-configs.js`}</inlineCode>{`.`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"https://www.gatsbyjs.org/packages/@benjie/gatsby-mdx/?=gatsby-mdx\"\n          }}>{`gatsby-mdx`}</a></p>\n        <blockquote parentName=\"li\">\n          <p parentName=\"blockquote\">{`MDX is a new templating format which uses both JSX(React templating) and markdown.\nThis gaves us the best of both worlds. Being able to write markdown to generate\nquick documentation and use React components within that page.`}</p>\n        </blockquote>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"https://www.gatsbyjs.org/packages/gatsby-plugin-sass/?=gatsby-plugin-sass\"\n          }}>{`gatsby-plugin-sass`}</a></p>\n        <blockquote parentName=\"li\">\n          <p parentName=\"blockquote\">{`Be able to use Sass/Scss in our project.`}</p>\n        </blockquote>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"https://www.gatsbyjs.org/packages/gatsby-transformer-react-docgen/?=gatsby-transformer-react-docgen\"\n          }}>{`gatsby-transformer-react-docgen`}</a></p>\n        <blockquote parentName=\"li\">\n          <p parentName=\"blockquote\">{`Helps extracting information from React components, and generate documentation\nfrom it. This is created by Facebook. This is what is used for\n`}<a parentName=\"p\" {...{\n              \"href\": \"https://github.com/styleguidist/react-styleguidist\"\n            }}>{`react-styleguidist`}</a>{`.`}</p>\n        </blockquote>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"https://www.gatsbyjs.org/packages/gatsby-source-filesystem/\"\n          }}>{`gatsby-source-filesystem`}</a></p>\n        <blockquote parentName=\"li\">\n          <p parentName=\"blockquote\">{`A Gatsby source plugin for sourcing data into your Gatsby application from your local filesystem.`}</p>\n        </blockquote>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"https://www.gatsbyjs.org/packages/gatsby-remark-images/\"\n          }}>{`https://www.gatsbyjs.org/packages/gatsby-remark-images/`}</a></p>\n        <blockquote parentName=\"li\">\n          <p parentName=\"blockquote\">{`We are using this to add images to our .mdx pages. This allows us to add\nimages to the folder and use it directly into our .mdx pages.`}</p>\n        </blockquote>\n      </li>\n    </ul>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"how-we-setup-gatsby-mdx\"\n    }}>{`How we setup gatsby-mdx`}</h3>\n    <p>{`Plugin: `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.gatsbyjs.org/packages/@benjie/gatsby-mdx\"\n      }}>{`https://www.gatsbyjs.org/packages/@benjie/gatsby-mdx`}</a>{`\nGuide: `}<a parentName=\"p\" {...{\n        \"href\": \"https://gatsby-mdx.netlify.com/guides\"\n      }}>{`https://gatsby-mdx.netlify.com/guides`}</a></p>\n    <h4 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`yarn add gatsby-mdx\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// gatsby-configs.js\n\nmodule.exports = {\n  plugins: [\\`gatsby-mdx\\`]\n};\n`}</code></pre>\n    <p>{`Once this is setup, you will be able to use both markdown and jsx on the page.\nMore information can be found on `}<a parentName=\"p\" {...{\n        \"href\": \"https://mdxjs.com/\"\n      }}>{`https://mdxjs.com/`}</a></p>\n    <h4 {...{\n      \"id\": \"adding-a-specific-layout-for-your-pages\"\n    }}>{`Adding a Specific layout for your pages`}</h4>\n    <p>{`To add a specific layout to be used for the default pages. You need to change\nthe plugin to an Object with options like so.`}</p>\n    <p>{`Change this code:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`// gatsby-configs.js\n\nmodule.exports = {\n  plugins: [\\`gatsby-mdx\\`]\n};\n`}</code></pre>\n    <p>{`To this code:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`// gatsby-configs.js\n\nmodule.exports = {\n  plugins: [\n    {\n      resolve: \\`gatsby-mdx\\`,\n      options: {\n        defaultLayouts: {\n          default: require.resolve(\"./src/layouts/SidebarLayout.jsx\"),\n        }\n      }\n    },\n  ]\n};\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"adding-your-own-folders\"\n    }}>{`Adding Your Own Folders`}</h4>\n    <p>{`By default gatsby-mdx will only look in the src/pages folder.\nWe need to add some configurations to be able to add non-default folders.`}</p>\n    <p><strong parentName=\"p\">{`Add the `}<inlineCode parentName=\"strong\">{`gatsby-source-filesystem`}</inlineCode>{` plugin:`}</strong></p>\n    <p>{`This plugin can be added multiple times in the plugins object.\nThis plugin is used for sourcing data into your Gatsby application\nfrom your local filesystem. Here we add a name and path to the\nimages folder. This will now be added to our GraphQL\ndatabase so we can use it in our project.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// gatsby-configs.js\n\nplugins: [\n  {\n    resolve: \\`gatsby-source-filesystem\\`,\n    options: {\n      path: \\`./src/images\\`,\n      name: 'images'\n    }\n  },\n]\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Creating Pages from GraphQL data:`}</strong></p>\n    <p>{`Now that we have this data in GraphQL, we need to tell Gatsby to make some\npages out of them. To do this we need to add some code to the gatsby-node.js\nfile. This is were you create pages or customize things before it get built.`}</p>\n    <p>{`first we export createPages and then do a query to GraphQL. You can test it\nout at http://localhost:8000/___graphql. This is an interactive interface\nfor GraphQL. Here we are getting all the mdx pages and then we are checking if the\ndocument has a name property in the frontmatter. If it doesn't we won't create\na page for it.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// gatsby-node.js\n\nexports.createPages = ({ graphql, actions }) => {\n  const { createPage } = actions;\n  return new Promise((resolve, reject) => {\n    resolve(\n      graphql(\n        \\`\n          {\n            allMdx {\n              edges {\n                node {\n                  id\n                  frontmatter {\n                    title\n                    name\n                  }\n                  parent {\n                    ... on File {\n                      name\n                      sourceInstanceName\n                    }\n                  }\n                  code {\n                    scope\n                  }\n                }\n              }\n            }\n          }\n        \\`\n      ).then(result => {\n        if (result.errors) {\n          console.log(result.errors)\n          reject(result.errors)\n        }\n\n        result.data.allMdx.edges.forEach(async ({ node }) => {\n          if (node.frontmatter.name) { <--- checking for frontmatter name property\n            createPage({\n              path: \\`/\\${node.parent.name.toLowerCase()}/\\`,\n              component: path.resolve('./src/layouts/module-components.js'),\n              context: {\n                id: node.id,\n                name: node.frontmatter.name,\n              },\n            })\n          }\n        })\n      })\n    )\n  })\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Sample of Query Results from Above Query:`}</strong></p>\n    <p>{`Here is a sample of what the output would be for the Query above. You'll notice\nthat we get more then just the MDX files in the project. Not sure why this is\nbut that is what we get back when doing the Query.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`{\n  \"data\": {\n    \"allMdx\": {\n      \"edges\": [\n        {\n          \"node\": {\n            \"id\": \"db665b4f-22a1-5485-8ef9-4f66f0da7e1b\",\n            \"frontmatter\": {\n              \"title\": \"AcceptTermsPrompt\",\n              \"name\": \"AcceptTermsPrompt\"\n            },\n            \"parent\": {\n              \"name\": \"AcceptTermsPrompt\",\n              \"sourceInstanceName\": \"components\"\n            },\n            \"code\": {\n              \"scope\": \"\"\n            }\n          }\n        },\n        {\n          \"node\": {\n            \"id\": \"fdaeaef8-da4f-53d8-a981-0ef2e4a9acf0\",\n            \"frontmatter\": {\n              \"title\": \"AdditionalInfo\",\n              \"name\": \"AdditionalInfo\"\n            },\n            \"parent\": {\n              \"name\": \"AdditionalInfo\",\n              \"sourceInstanceName\": \"components\"\n            },\n            \"code\": {\n              \"scope\": \"\"\n            }\n          }\n        },\n        {\n          \"node\": {\n            \"id\": \"17c10940-f231-560f-a391-e3a3173f1ed2\",\n            \"frontmatter\": {\n              \"title\": \"\",\n              \"name\": null\n            },\n            \"parent\": {},\n            \"code\": {\n              \"scope\": \"\"\n            }\n          }\n        },\n        {\n          \"node\": {\n            \"id\": \"3121c909-74b5-5ccc-9884-bd72709d7885\",\n            \"frontmatter\": {\n              \"title\": \"\",\n              \"name\": null\n            },\n            \"parent\": {},\n            \"code\": {\n              \"scope\": \"\"\n            }\n          }\n        },\n        {\n          \"node\": {\n            \"id\": \"6d019eeb-8db4-56ce-8bd7-bf14e618d096\",\n            \"frontmatter\": {\n              \"title\": \"How to Add Documents and Components\",\n              \"name\": null\n            },\n            \"parent\": {\n              \"name\": \"how-to\",\n              \"sourceInstanceName\": \"pages\"\n            },\n            \"code\": {\n              \"scope\": \"\"\n            }\n          }\n        },\n        {\n          \"node\": {\n            \"id\": \"2503f180-5b43-5470-9665-cff9f512d7cd\",\n            \"frontmatter\": {\n              \"title\": \"This is the index\",\n              \"name\": null\n            },\n            \"parent\": {\n              \"name\": \"index\",\n              \"sourceInstanceName\": \"pages\"\n            },\n            \"code\": {\n              \"scope\": \"\"\n            }\n          }\n        },\n        {\n          \"node\": {\n            \"id\": \"51b7ecd7-76e7-5ceb-ac57-d2a9c92494de\",\n            \"frontmatter\": {\n              \"title\": \"Internal Tools\",\n              \"name\": null\n            },\n            \"parent\": {\n              \"name\": \"internal-tools\",\n              \"sourceInstanceName\": \"pages\"\n            },\n            \"code\": {\n              \"scope\": \"\"\n            }\n          }\n        },\n        {\n          \"node\": {\n            \"id\": \"b683ccc8-0ddd-5b23-8b5c-0cc8e2889aa9\",\n            \"frontmatter\": {\n              \"title\": \"Notes on Writing MDX with Gatsby\",\n              \"name\": null\n            },\n            \"parent\": {\n              \"name\": \"new-component\",\n              \"sourceInstanceName\": \"pages\"\n            },\n            \"code\": {\n              \"scope\": \"\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n`}</code></pre>\n    <p>{`You will need to create a path for the pages. This is done with the path property`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`createPage({\n  path: \\`/\\${node.parent.name.toLowerCase()}/\\`, <------- Create path here\n  component: path.resolve('./src/layouts/module-components.js'),\n  context: {\n    id: node.id,\n    name: node.frontmatter.name,\n  },\n})\n`}</code></pre>\n    <p>{`Set your component page layout`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`createPage({\n  path: \\`/\\${node.parent.name.toLowerCase()}/\\`,\n  component: path.resolve('./src/layouts/module-components.js'), <------- default layout\n  context: {\n    id: node.id,\n    name: node.frontmatter.name,\n  },\n})\n`}</code></pre>\n    <p>{`In our createPage you will see a context property. This will be available on\nyour page for quering with GraphQL.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`createPage({\n  path: \\`/\\${node.parent.name.toLowerCase()}/\\`,\n  context: {\n    id: node.id, <--- available on your page for GraphQL queries\n    name: node.frontmatter.name, <--- available on your page for GraphQL queries\n  },\n})\n`}</code></pre>\n    <p>{`Now that we have that setup we need to add the layout for our components pages.\nIf you go to `}<inlineCode parentName=\"p\">{`src/layouts/module-components.js`}</inlineCode>{` you can see how we setup our pages\nto be able to render MDX. Here is a sample of the JSX.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`  <MDXProvider components={{ code: MyCodeComponent }}>\n    <Layout>\n      <div className=\"content\">\n        {children}\n        <h2>{data.componentMetadata.displayName}</h2>\n        <p>{data.componentMetadata.docblock}</p>\n        <MDXRenderer tableOfContents={tableOfContents}>\n          {data.mdx.code.body}\n        </MDXRenderer>\n        <h2 style={{ marginTop: '2rem' }}>Props:</h2>\n        <PropsTable\n          propMetaData={data.componentMetadata.childrenComponentProp}/>\n      </div>\n    </Layout>\n  </MDXProvider>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"how-do-we-automatically-generate-our-proptypes\"\n    }}>{`How do we automatically generate our propTypes`}</h3>\n    <p>{`Since one of the big requirements for our component documents is PropType\ndefinitions, we had to make sure we can populate the propTypes dynamically.\nTo do this we are going to a module called\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/reactjs/react-docgen\"\n      }}><inlineCode parentName=\"a\">{`react-docgen`}</inlineCode></a>{`. This was created by\nFacebook to handle documentation. What it does is parse component files and\ngenerates data from your components into a json file. We will be using the\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.gatsbyjs.org/packages/gatsby-transformer-react-docgen/?=gatsby-transformer-react-docgen\"\n      }}><inlineCode parentName=\"a\">{`gatsby-transformer-react-docgen`}</inlineCode></a>{`\nplugin to do this for us in gatsby. This will add the data into GraphQL so we\ncan query it in our pages.`}</p>\n    <p>{`This is what the query looks like in our layout page. The `}<inlineCode parentName=\"p\">{`childrenComponentProp`}</inlineCode>{`\nis were we get our propType definitions.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`export const pageQuery = graphql\\`\n  query($id: String!, $name: String!) {\n    mdx(id: { eq: $id }) {\n      id\n      code {\n        body\n      }\n      tableOfContents\n    }\n    componentMetadata(displayName: { eq: $name }) {\n      id\n      displayName\n      docblock\n      doclets\n      childrenComponentProp {\n        name\n        docblock\n        required\n        parentType {\n          name\n        }\n        type {\n          value\n        }\n        defaultValue {\n          value\n          computed\n        }\n      }\n      composes\n    }\n  }\n\\`;\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"adding-live-code\"\n    }}>{`Adding Live Code`}</h3>\n    <p>{`Here is an example of how you add live editable code onto your page.\nNote: This has not been fully implemented on our pages yet. This is something\nwe need to explore further if we really want to have this feature.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`import React, {Component} from \"react\";\nimport { LiveProvider, LiveEditor, LiveError, LivePreview } from \"react-live\";\nimport { MDXProvider } from '@mdx-js/tag'\n\nconst MyCodeComponent = ({ children, ...props }) => (\n  <LiveProvider code={children}>\n    <LiveEditor />\n    <LiveError />\n    <LivePreview />\n  </LiveProvider>\n);\n\nexport default class MyPageLayout extends Component {\n  render() {\n    return <MDXProvider components={{code: MyCodeComponent}}>\n      <div>{this.props.children}</div>\n    </MDXProvider>\n  }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"image-plugin-for-mdx-files\"\n    }}>{`Image plugin for MDX files`}</h3>\n    <p>{`We are using a plugin to be able to use images in .mdx pages. This allows us\nto access the images with relative paths.`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://gatsby-mdx.netlify.com/guides/using-gatsby-remark-images\"\n      }}>{`https://gatsby-mdx.netlify.com/guides/using-gatsby-remark-images`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}