{"version":3,"sources":["webpack:///./src/components/sidebar/SidebarItems.jsx","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./src/layouts/SidebarLayout.jsx","webpack:///./src/pages/platform/tools/feature-toggles.mdx"],"names":["ComponentList","query","render","data","SidebarItems","items","components","edges","map","comp","href","node","path","name","context","SidebarItem","item","key","to","isSublist","length","className","Sidebar","location","sidebarSection","sidebarData","sections","find","section","pathname","includes","SidebarLayout","children","Layout","id","layoutProps","MDXContent","props","layout","DefaultLayout","this","Object","assign","parentName","React","Component","_frontmatter"],"mappings":"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","file":"component---src-pages-platform-tools-feature-toggles-mdx-0370f965e8ce63b5fb67.js","sourcesContent":["import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nfunction ComponentList() {\n  return (\n    <StaticQuery\n      query={graphql`\n        query ComponentListQuery {\n          components: allSitePage(\n            filter: { context: { source: { eq: \"component\" } } }\n          ) {\n            edges {\n              node {\n                path\n                context {\n                  source\n                  name\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <SidebarItems\n          items={data.components.edges.map(comp => ({\n            href: comp.node.path,\n            name: comp.node.context.name,\n          }))}\n        />\n      )}\n    />\n  );\n}\n\nfunction SidebarItem({ item }) {\n  if (item.href) {\n    return (\n      <li key={item.name}>\n        <Link to={item.href}>{item.name}</Link>\n      </li>\n    );\n  }\n  return <li key={item.name}>{item.name} (future)</li>;\n}\nexport default function SidebarItems({ items, isSublist = false }) {\n  if (!items.length) {\n    return null;\n  }\n\n  return (\n    <ul className=\"site-c-sidenav-list\">\n      {items.map(item => {\n        if (item.items) {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <SidebarItems isSublist items={item.items} />\n            </li>\n          );\n        }\n        if (item.query === 'componentList') {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <ComponentList />\n            </li>\n          );\n        }\n        return <SidebarItem item={item} key={item.name} />;\n      })}\n    </ul>\n  );\n}\n","import React from 'react';\nimport SidebarItems from './SidebarItems';\nimport sidebarData from '../../sidebar';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nexport default function Sidebar({ location }) {\n  const sidebarSection = sidebarData.sections.find(section =>\n    location.pathname.includes(section.href),\n  );\n\n  if (!sidebarSection) {\n    return null;\n  }\n\n  return (\n    <div className=\"vads-l-col--4 site-c-content__nav\">\n      <div className=\"site-c-sidenav\">\n        <SidebarItems items={sidebarSection.items} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Layout from './Layout';\nimport Sidebar from '../components/sidebar/Sidebar';\n\n/**\n * Layout\n *\n * @class Layout\n * @extends {React.Component}\n */\nexport default function SidebarLayout({ children, location }) {\n  return (\n    <Layout location={location}>\n      <div className=\"vads-l-row\">\n        <Sidebar location={location} />\n        <div\n          id=\"main-content\"\n          className=\"vads-l-col--8 site-c-content__content docSearch-content\"\n        >\n          {children}\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nSidebarLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport DefaultLayout from \"/home/jenkins/workspace/ran-facing-services-tools_master/packages/documentation/src/layouts/SidebarLayout.jsx\";\nconst layoutProps = {};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = DefaultLayout;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" Layout={this.layout} layoutProps={Object.assign({}, layoutProps, props)} components={components}>\n\n      <h1 id=\"feature-toggles\">Feature toggles</h1>\n      <MDXTag name=\"p\" components={components}>{`Feature toggles (also known as feature flags or feature flippers) can be used in both vets-api and vets-website to manage unreleased features in a continuous integration environment. Feature toggles enable VFS teams to test out new functionality (applications, features, VA.gov content pages, Metalsmith) in the VSP development, staging, or production environments for a set of users. Teams can enable or disable a feature for all users, a percentage of all users, a percentage of all logged-in users, a list of users, or users defined in a method.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Feature toggles:`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Allow for production toggle switching without redeploying vets-website`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Provide a user interface for managing feature toggle behavior`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Provide code helpers for handling common user experience scenarios`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Are powered by an open-source gem called `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"https://github.com/jnunemaker/flipper\"\n          }}>{`Flipper gem`}</MDXTag></MDXTag>\n      </MDXTag>\n      <MDXTag name=\"p\" components={components}>{`See the following sections for information about creating feature toggles:`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"#writing-good-feature-toggles\"\n          }}>{`Writing good feature toggles`}</MDXTag></MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Adding a new feature toggle`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n            <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n                \"href\": \"#add-feature\"\n              }}>{`Frontend`}</MDXTag></MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n                \"href\": \"#backend\"\n              }}>{`Backend`}</MDXTag></MDXTag>\n          </MDXTag></MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"#flipper-ui\"\n          }}>{`Enabling and disabling features`}</MDXTag></MDXTag>\n      </MDXTag>\n      <h2 id=\"a-idwriting-good-feature-toggleswriting-good-feature-togglesa\"><a id=\"writing-good-feature-toggles\">Writing good feature toggles</a></h2>\n      <MDXTag name=\"p\" components={components}>{`Keep the following items in mind as you add feature toggles:`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Remember that each environment has its own set of feature toggle values.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Test your feature toggle in staging before using it in production.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Remove feature toggles as soon as they are not needed.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Make toggles that are `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"https://programmingisterrible.com/post/139222674273/write-code-that-is-easy-to-delete-not-easy-to\"\n          }}>{`easy to delete`}</MDXTag>{` by gating a behavior in as few places as possible. It's often better to have blocks of repeating code that can be quickly deleted later than it is to gate several small pieces of code.`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"p\" components={components}>{`After a page is rendered, the feature toggle client retrieves the latest toggle values from the feature toggle service and the page is updated using the latest feature toggle values. The application shows a loading state for the new feature while the toggle values are retrieved from the service.`}</MDXTag>\n      <h2 id=\"a-idadd-featureadding-a-new-feature-toggle-frontenda\"><a id=\"add-feature\">Adding a new feature toggle (frontend)</a></h2>\n      <MDXTag name=\"p\" components={components}>{`Follow these steps to add and use a new feature toggle in vets-website:`}</MDXTag>\n      <MDXTag name=\"ol\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ol\">\n          <MDXTag name=\"p\" components={components} parentName=\"li\">{`Determine your feature toggle name.`}</MDXTag>\n          <MDXTag name=\"p\" components={components} parentName=\"li\"><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Note:`}</MDXTag>{` There are no naming conventions yet. Current examples put the application name first, such as `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`facilityLocatorShowCommunityCares`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`profileShowDirectDeposit`}</MDXTag>{`.`}</MDXTag>\n        </MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ol\">\n          <MDXTag name=\"p\" components={components} parentName=\"li\">{`Add the feature name to vets-api (in snake case) by updating `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n              \"href\": \"https://github.com/department-of-veterans-affairs/vets-api/blob/master/config/features.yml\"\n            }}>{`config/features.yml`}</MDXTag>{`:`}</MDXTag>\n          <MDXTag name=\"pre\" components={components} parentName=\"li\"><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n              \"className\": \"language-yml\"\n            }}>{`features:\n app_name_then_your_feature_name:\n   actor_type: user\n   description: >\n     This describes what the feature does and\n     which team is responsible for the toggle.\n`}</MDXTag></MDXTag>\n        </MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ol\">\n          <MDXTag name=\"p\" components={components} parentName=\"li\">{`Determine how you want the feature toggle to be \"sticky\".\nFor the behavior to be consistent across all devices for a logged in user choose \"user\" as the  actor_type.\nFor the behavior to be consistent for a user for the duration of a cookie within a single browser, regardless of their logged in status choose \"cookie_id\" as the actor_type.`}</MDXTag>\n        </MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ol\">\n          <MDXTag name=\"p\" components={components} parentName=\"li\">{`Run vets-api locally. This can be done on master after your pull request (PR) is merged or off of your feature branch.`}</MDXTag>\n        </MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ol\">\n          <MDXTag name=\"p\" components={components} parentName=\"li\">{`Navigate to `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n              \"href\": \"http://localhost:3000/flipper/features\"\n            }}>{`http://localhost:3000/flipper/features`}</MDXTag>{` and verify that you see your new feature name. If not, restart your rails server.`}</MDXTag>\n        </MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ol\">\n          <MDXTag name=\"p\" components={components} parentName=\"li\">{`Add the feature toggle name (in camel case) to vets-website by updating `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n              \"href\": \"https://github.com/department-of-veterans-affairs/vets-website/blob/master/src/platform/utilities/feature-toggles/featureFlagNames.js\"\n            }}>{`featureFlagNames.js`}</MDXTag>{`.`}</MDXTag>\n        </MDXTag>\n      </MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-js\"\n        }}>{`const FEATURE_FLAG_NAMES = Object.freeze({\n showYourFeatureName: 'appNameThenYourFeatureName',\n})\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"ol\" components={components} props={{\n        \"start\": 7\n      }}>\n        <MDXTag name=\"li\" components={components} parentName=\"ol\">\n          <MDXTag name=\"p\" components={components} parentName=\"li\">{`Submit a PR for each feature. Crosslinking the PRs in a comment will make it easier for the reviewers to check.`}</MDXTag>\n        </MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ol\">\n          <MDXTag name=\"p\" components={components} parentName=\"li\">{`Use the selector helper to build a `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n              \"href\": \"https://daveceddia.com/redux-selectors/\"\n            }}>{`selector`}</MDXTag>{` for your feature toggle. See an example `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n              \"href\": \"https://github.com/department-of-veterans-affairs/vets-website/blob/f6178ac59b1d691e0f31fb36903b8ba54091b517/src/applications/gi/containers/ProfilePage.jsx#L118\"\n            }}>{`here`}</MDXTag>{`.`}</MDXTag>\n          <MDXTag name=\"p\" components={components} parentName=\"li\"><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Note:`}</MDXTag>{` In the following example, the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`toggleValues`}</MDXTag>{` object is a flat list of `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`toggleName`}</MDXTag>{` and boolean key value pairs. Also, note that `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`toggleValues`}</MDXTag>{` is imported from `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`platform/site-wide/feature-toggles/selectors`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`FEATURE_FLAG_NAMES`}</MDXTag>{` is imported from `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`platform/utilities/feature-toggles/featureFlagNames`}</MDXTag>{`.`}</MDXTag>\n        </MDXTag>\n      </MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-js\"\n        }}>{`// import the toggleValues helper\nimport { toggleValues } from 'platform/site-wide/feature-toggles/selectors';\n\n// use the toggleValues helper to select the toggle values list\nexport const appNameThenYourFeatureName = state =>\n  toggleValues(state).appNameThenYourFeatureName;\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"ol\" components={components} props={{\n        \"start\": 9\n      }}>\n        <MDXTag name=\"li\" components={components} parentName=\"ol\">\n          <MDXTag name=\"p\" components={components} parentName=\"li\">{`Use the feature toggle value to gate your new behavior. For example, you can use the selector above in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`mapStateToProps`}</MDXTag>{` to pass the toggle as a prop into your component.`}</MDXTag>\n          <MDXTag name=\"p\" components={components} parentName=\"li\"><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Note:`}</MDXTag>{` Currently the feature toggle values are only available on the global redux state.`}</MDXTag>\n        </MDXTag>\n      </MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-js\"\n        }}>{`function mapStateToProps(state) {\n  return {\n    showYourFeatureName:\n      appNameThenYourFeatureName(state),\n  };\n}\n\n...\n// inside your connected component\n\nrender() {\n   const { showYourFeatureName } = this.props;\n\n   return (\n     { showYourFeatureName && <NewFeature /> }\n   );\n}\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"ol\" components={components} props={{\n        \"start\": 10\n      }}>\n        <MDXTag name=\"li\" components={components} parentName=\"ol\">{`Use the `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"#flipper-ui\"\n          }}>{`Flipper UI`}</MDXTag>{` to test out the toggle locally. Refresh the page to update the feature toggle state. This value can take up to a minute to update in staging and production.`}</MDXTag>\n      </MDXTag>\n      <h2 id=\"a-idbackendadding-a-new-feature-toggle-backenda\"><a id=\"backend\">Adding a new feature toggle (backend)</a></h2>\n      <MDXTag name=\"p\" components={components}>{`Follow these steps to add and use a new feature toggle in vets-api:`}</MDXTag>\n      <MDXTag name=\"ol\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ol\">\n          <MDXTag name=\"p\" components={components} parentName=\"li\">{`Determine your feature toggle name.`}</MDXTag>\n          <MDXTag name=\"p\" components={components} parentName=\"li\"><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Note:`}</MDXTag>{` There are no naming conventions yet. Current examples put the application name first, such as `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`facilityLocatorShowCommunityCares`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`profileShowDirectDeposit`}</MDXTag>{`.`}</MDXTag>\n        </MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ol\">\n          <MDXTag name=\"p\" components={components} parentName=\"li\">{`Add the feature name to vets-api (in snake case) by updating `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n              \"href\": \"https://github.com/department-of-veterans-affairs/vets-api/blob/master/config/features.yml\"\n            }}>{`config/features.yml`}</MDXTag>{`:`}</MDXTag>\n          <MDXTag name=\"pre\" components={components} parentName=\"li\"><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n              \"className\": \"language-yml\"\n            }}>{`features:\n   app_name_then_your_feature_name:\n   actor_type: user\n   description: >\n     This describes what the feature does and\n     which team is responsible for the toggle.\n`}</MDXTag></MDXTag>\n        </MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ol\">\n          <MDXTag name=\"p\" components={components} parentName=\"li\">{`Determine how you want the feature toggle to be \"sticky\".\nFor the behavior to be consistent across all devices for a logged in user choose \"user\" as the  actor_type.\nFor the behavior to be consistent for a user for the duration of a cookie within a single browser, regardless of their logged in status choose \"cookie_id\" as the actor_type.`}</MDXTag>\n        </MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ol\">\n          <MDXTag name=\"p\" components={components} parentName=\"li\">{`Run vets-api locally. This can be done on master after your PR is merged or off of your feature branch.`}</MDXTag>\n        </MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ol\">\n          <MDXTag name=\"p\" components={components} parentName=\"li\">{`Navigate to `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n              \"href\": \"http://localhost:3000/flipper/features\"\n            }}>{`http://localhost:3000/flipper/features`}</MDXTag>{` and verify that you see your new feature name. If not, restart your rails server.`}</MDXTag>\n        </MDXTag>\n      </MDXTag>\n      <h3 id=\"backend-example\">Backend example</h3>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-rb\"\n        }}>{`def base_method_name(params)\n  if Flipper.enabled?(:feature_flag, @current_user)\n    base_method_name_feature_enabled(params)\n  else\n    base_method_name_feature_disabled(params)\n  end\nend\ndef base_method_name_feature_enabled(params)\n  # How it behaves with the feature toggle enabled\nend\ndef base_method_name_feature_disabled(params)\n  # How it behaves without the feature toggle enabled\nend\n\n### spec\nRSpec.describe Object do\n  context \"Feature feature_flag=true\" do\n    before do\n      Flipper.enable(:feature_flag)\n    end\n    it \"behaves this way with the feature enabled\" do\n    end\n  end\n  context \"Feature feature_flag=false\" do\n    before do\n      Flipper.disable(:feature_flag)\n    end\n    it \"behaves this way with the feature disabled\" do\n    end\n  end\nend\n`}</MDXTag></MDXTag>\n      <h2 id=\"a-idflipper-uienabling-and-disabling-featuresa\"><a id=\"flipper-ui\">Enabling and disabling features</a></h2>\n      <MDXTag name=\"p\" components={components}>{`You can enable or disable features in the Flipper UI:`}</MDXTag>\n      <MDXTag name=\"ol\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ol\">{`Navigate to the Flipper UI at the following URLs:`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"table\" components={components}>\n        <MDXTag name=\"thead\" components={components} parentName=\"table\">\n          <MDXTag name=\"tr\" components={components} parentName=\"thead\">\n            <MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\n              \"align\": null\n            }}>{`Environment`}</MDXTag>\n            <MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\n              \"align\": null\n            }}>{`URL`}</MDXTag>\n          </MDXTag>\n        </MDXTag>\n        <MDXTag name=\"tbody\" components={components} parentName=\"table\">\n          <MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n            <MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\n              \"align\": null\n            }}>{`Dev`}</MDXTag>\n            <MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\n              \"align\": null\n            }}><MDXTag name=\"a\" components={components} parentName=\"td\" props={{\n                \"href\": \"http://localhost:3000/flipper/features\"\n              }}>{`http://localhost:3000/flipper/features`}</MDXTag></MDXTag>\n          </MDXTag>\n          <MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n            <MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\n              \"align\": null\n            }}>{`Staging`}</MDXTag>\n            <MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\n              \"align\": null\n            }}><MDXTag name=\"a\" components={components} parentName=\"td\" props={{\n                \"href\": \"https://staging-api.va.gov/flipper/features\"\n              }}>{`https://staging-api.va.gov/flipper/features`}</MDXTag></MDXTag>\n          </MDXTag>\n          <MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n            <MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\n              \"align\": null\n            }}>{`Production`}</MDXTag>\n            <MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\n              \"align\": null\n            }}><MDXTag name=\"a\" components={components} parentName=\"td\" props={{\n                \"href\": \"https://api.va.gov/flipper/features\"\n              }}>{`https://api.va.gov/flipper/features`}</MDXTag></MDXTag>\n          </MDXTag>\n        </MDXTag>\n      </MDXTag>\n      <MDXTag name=\"ol\" components={components} props={{\n        \"start\": 2\n      }}>\n        <MDXTag name=\"li\" components={components} parentName=\"ol\">{`To access the Flipper UI, you must sign in using an `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"https://github.com/department-of-veterans-affairs/va.gov-team/blob/master/products/identity-personalization/va.gov-login-process.md\"\n          }}>{`identity-verified id.me user`}</MDXTag>{` that is listed in `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"https://github.com/department-of-veterans-affairs/vets-api/blob/master/config/settings.yml\"\n          }}>{`settings.yml`}</MDXTag>{`:`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`flipper:\n  admin_user_emails:\n    - email@email.us\n    - email1@email.us\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`   `}<b>{`Notes:`}</b></MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`If you are not on the list, you can add yourself or your teammates to the file.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`If you're not sure if your account is identity-verified, you can check by going to `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"https://www.va.gov/profile/\"\n          }}>{`this page`}</MDXTag>{`. If you need to verify your account you'll see a \"Verify with ID.me\" button.`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"ol\" components={components} props={{\n        \"start\": 3\n      }}>\n        <MDXTag name=\"li\" components={components} parentName=\"ol\">\n          <MDXTag name=\"p\" components={components} parentName=\"li\">{`Once you have logged into the Flipper UI, you can perform the following actions:`}</MDXTag>\n          <MDXTag name=\"ul\" components={components} parentName=\"li\">\n            <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Select \"Enable for everyone\" or \"Disable for everyone\" to enable or disable the feature for all users.`}</MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\">{`For a gradual rollout or an a/b test you can use \"Percentage of Logged in Users.\" \"Percentage of Logged in Users\" will enable the feature for the same users each time they return to the site as long as you don't change the percentage.`}</MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Use \"Percentage of Time\" to enable a feature for all users for a percentage of time.`}</MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Register a \"Group\" of users to enable a feature for.`}</MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\">{`You can also roll out a feature for a select few users by adding their email address to the “Users” section. For performance reasons, the list of users is intended to be small — do not use this option for hundreds of users.`}</MDXTag>\n          </MDXTag>\n          <MDXTag name=\"p\" components={components} parentName=\"li\">{`The values of each toggle are cached in memory for one minute, so it may take that long to see the effect of enabling or disabling the toggle.`}</MDXTag>\n          <MDXTag name=\"p\" components={components} parentName=\"li\"><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\n              \"src\": \"https://user-images.githubusercontent.com/19188/74881655-b4d11a80-533b-11ea-8e97-fdea24c10830.png\",\n              \"alt\": \"Screen Shot\"\n            }}></MDXTag></MDXTag>\n        </MDXTag>\n      </MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"em\" components={components} parentName=\"p\">{`The following sections contain information that will be phased out.`}</MDXTag></MDXTag>\n      <h2 id=\"testing-new-applications-and-updates-to-existing-applications\">Testing new applications and updates to existing applications</h2>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"em\" components={components} parentName=\"p\">{`Use the method described above to `}<MDXTag name=\"a\" components={components} parentName=\"em\" props={{\n            \"href\": \"#add-feature\"\n          }}>{`add`}</MDXTag>{` and `}<MDXTag name=\"a\" components={components} parentName=\"em\" props={{\n            \"href\": \"#flipper-ui\"\n          }}>{`enable/disable`}</MDXTag>{` feature toggles. The method described in this section will be phased out.`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`In the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://staging.va.gov\"\n        }}>{`staging environment`}</MDXTag>{`, you can test unreleased features or applications using `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://github.com/department-of-veterans-affairs/vets-website/blob/master/src/platform/utilities/environment/index.js\"\n        }}>{`!isProduction()`}</MDXTag>{`.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`In the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://www.va.gov\"\n        }}>{`production environment`}</MDXTag>{`, you can test unreleased features and applications by checking `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://github.com/department-of-veterans-affairs/vets-website/blob/master/src/platform/utilities/storage/localStorage.js\"\n        }}>{`localstorage`}</MDXTag>{` for a developer-defined name/value. You can do this by:`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Adding the feature name/value to local storage with a console command in the browser`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Using application specific code that automatically checks when a certain query parameter is present`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"p\" components={components}><b>{`Note:`}</b>{` Unreleased applications can be made available on production behind a password by setting `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`protected: yes`}</MDXTag>{` in `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://github.com/department-of-veterans-affairs/devops/blob/master/ansible/deployment/config/revproxy-vagov/vars/react_routes.yml\"\n        }}>{`react_routes.yml`}</MDXTag>{`. External teams should work with their DSVA contact to request support for enabling this.`}</MDXTag>\n      <h2 id=\"testing-content-pages\">Testing content pages</h2>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"em\" components={components} parentName=\"p\">{`Use the method described above to `}<MDXTag name=\"a\" components={components} parentName=\"em\" props={{\n            \"href\": \"#add-feature\"\n          }}>{`add`}</MDXTag>{` and `}<MDXTag name=\"a\" components={components} parentName=\"em\" props={{\n            \"href\": \"#flipper-ui\"\n          }}>{`enable/disable`}</MDXTag>{` feature toggles. The method described in this section will be phased out.`}</MDXTag></MDXTag>\n      <h3 id=\"app-landing-pages-generated-by-registryjson\">App-landing pages generated by registry.json</h3>\n      <MDXTag name=\"p\" components={components}>{`Applications can control the HTML landing page associated with the application via a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`template`}</MDXTag>{` property in the application's entry in the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`src/applications/registry.json`}</MDXTag>{`. Properties defined inside the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`template`}</MDXTag>{` property will pass through the Metalsmith templating process the same way as a vagov-content `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`.md`}</MDXTag>{` file. This means that via the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`template`}</MDXTag>{` property, your appliations entry in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`registry.json`}</MDXTag>{` can implement a feature toggle the same way as a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`.md`}</MDXTag>{` file to prevent its HTML page from rendering in production environments. For example:`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-json\"\n        }}>{`{\n   \"appName\": \"Fantastic application\",\n   \"entryName\": \"fantastic-application\",\n   \"rootUrl\": \"/path/to/fantastic-application\",\n   \"template\": {\n       \"layout\": \"page-react.html\",\n       \"title\": \"Fantastic application\",\n       \"vagovprod\": false\n   }\n}\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`vagovprod`}</MDXTag>{` property explicitly set to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`false`}</MDXTag>{` will exclude this application from production builds.`}</MDXTag>\n      <h3 id=\"vagov-content-md-files\">vagov-content .md files</h3>\n      <MDXTag name=\"p\" components={components}>{`Unreleased content pages should always be made available on `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://staging.va.gov\"\n        }}>{`staging.va.gov`}</MDXTag>{` by adding an exclusion toggle to the front matter of the content page. For example, because this front matter includes `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`vagovprod: false`}</MDXTag>{`, this content page would be excluded from the build for the production environment:`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-markdown\"\n        }}>{`---\ntitle: Apply for disability benefits\nvagovprod: false\n---\n<nav aria-label=\"Breadcrumb\" aria-live=\"polite\" class=\"va-nav-breadcrumbs\"\nid=\"va-breadcrumbs\">\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Content pages can be excluded from any or all of these environments:`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-markdown\"\n        }}>{`vagovprod: false\nvagovstaging: false\nvagovdev: false\nlocalhost: false\n`}</MDXTag></MDXTag>\n      <h2 id=\"testing-cms-feature-toggles\">Testing CMS feature toggles</h2>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"em\" components={components} parentName=\"p\">{`Use the method described above to `}<MDXTag name=\"a\" components={components} parentName=\"em\" props={{\n            \"href\": \"#add-feature\"\n          }}>{`add`}</MDXTag>{` and `}<MDXTag name=\"a\" components={components} parentName=\"em\" props={{\n            \"href\": \"#flipper-ui\"\n          }}>{`enable/disable`}</MDXTag>{` feature toggles. The method described in this section will be phased out.`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`VA.gov creates some pages based on content from the VA's Drupal CMS. The CMS has its own content model, which can sometimes change. When those changes modify the existing structure of the content model, the queries and templates in vets-website that expect a different model may break. And because the CMS and vets-website are separate systems with different deployment processes, we can't push up changes in both systems simultaneously. In order to keep the two systems in sync, we need to be able to turn features on and off in vets-website depending on what environment we're in, and update that feature state whenever a cms deployment happens.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`We've created some infrastructure to make this a little easier to do.`}</MDXTag>\n      <h3 id=\"creating-a-toggle-and-turning-it-on-or-off\">Creating a toggle and turning it on or off</h3>\n      <MDXTag name=\"p\" components={components}>{`When running a new vets-website build, the script will fetch all CMS feature toggles from Drupal. This allows the toggles to be controlled from within Drupal.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Before writing any code to use a new feature toggle, it must first be created from within Drupal for all three environments. The feature toggles can be found at `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://dev.cms.va.gov/admin/config/system/feature_toggle\"\n        }}>{`https://dev.cms.va.gov/admin/config/system/feature_toggle`}</MDXTag>{` for dev. Staging and production have similar pages.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Important:`}</MDXTag>{` The new feature toggle `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`must`}</MDXTag>{` be in `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`every`}</MDXTag>{` Drupal environment or vets-website builds will fail when we try to use it! This is intentional so we don't have \"accidentally\" false feature toggles when Drupal doesn't have a toggle that vets-website is trying to use.`}</MDXTag>\n      <h3 id=\"using-toggles-in-graphql-queries\">Using toggles in GraphQL queries</h3>\n      <MDXTag name=\"p\" components={components}>{`Because the toggles are fetched dynamically, they aren't stored in a file that we can `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`require`}</MDXTag>{` from a GraphQL query file. The build script puts the current toggles are put into `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`global.cmsFeatureFlags`}</MDXTag>{` after it either fetches the most recent toggles or uses the cache.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Keep in mind the advice in the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"#writing-good-feature-toggles\"\n        }}>{`writing good feature toggles`}</MDXTag>{` section. You should write the logic in a way that is easy to remove later. It's often easier to change some logic and then add a conditional that modifies something with the toggle is not enabled. That lets you simply remove the conditional later.`}</MDXTag>\n      <h3 id=\"using-feature-toggles-in-liquid-templates\">Using feature toggles in Liquid templates</h3>\n      <MDXTag name=\"p\" components={components}>{`All liquid templates have access to the current feature toggle state:`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-liquid\"\n        }}>{`{% if enabledFeatureFlags.feature1 == true %}\n  <div>Fancy new feature</div>\n{% endif %}\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Note:`}</MDXTag>{` From within the JavaScript context, the feature toggles are in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`global.cmsFeatureFlags`}</MDXTag>{`, but within the Liquid template context, they can be found in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`enabledFeatureFlags`}</MDXTag>{`.`}</MDXTag>\n      <h2 id=\"need-assistance\">Need assistance?</h2>\n      <MDXTag name=\"p\" components={components}>{`Tag #vfs-platform-support in Slack if you need more information.`}</MDXTag>\n           </MDXTag>;\n  }\n\n}\nexport const _frontmatter = {};\n    "],"sourceRoot":""}