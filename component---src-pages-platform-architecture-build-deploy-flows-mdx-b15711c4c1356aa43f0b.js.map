{"version":3,"sources":["webpack:///./src/components/sidebar/SidebarItems.jsx","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./src/layouts/SidebarLayout.jsx","webpack:///./src/pages/platform/architecture/build-deploy-flows.mdx"],"names":["ComponentList","query","render","data","SidebarItems","items","components","edges","map","comp","href","node","path","name","context","SidebarItem","item","key","to","isSublist","length","className","Sidebar","location","sidebarSection","sidebarData","sections","find","section","pathname","includes","SidebarLayout","children","Layout","id","layoutProps","MDXContent","props","layout","DefaultLayout","this","Object","assign","parentName","React","Component","_frontmatter"],"mappings":"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","file":"component---src-pages-platform-architecture-build-deploy-flows-mdx-b15711c4c1356aa43f0b.js","sourcesContent":["import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nfunction ComponentList() {\n  return (\n    <StaticQuery\n      query={graphql`\n        query ComponentListQuery {\n          components: allSitePage(\n            filter: { context: { source: { eq: \"component\" } } }\n          ) {\n            edges {\n              node {\n                path\n                context {\n                  source\n                  name\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <SidebarItems\n          items={data.components.edges.map(comp => ({\n            href: comp.node.path,\n            name: comp.node.context.name,\n          }))}\n        />\n      )}\n    />\n  );\n}\n\nfunction SidebarItem({ item }) {\n  if (item.href) {\n    return (\n      <li key={item.name}>\n        <Link to={item.href}>{item.name}</Link>\n      </li>\n    );\n  }\n  return <li key={item.name}>{item.name} (future)</li>;\n}\nexport default function SidebarItems({ items, isSublist = false }) {\n  if (!items.length) {\n    return null;\n  }\n\n  return (\n    <ul className=\"site-c-sidenav-list\">\n      {items.map(item => {\n        if (item.items) {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <SidebarItems isSublist items={item.items} />\n            </li>\n          );\n        }\n        if (item.query === 'componentList') {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <ComponentList />\n            </li>\n          );\n        }\n        return <SidebarItem item={item} key={item.name} />;\n      })}\n    </ul>\n  );\n}\n","import React from 'react';\nimport SidebarItems from './SidebarItems';\nimport sidebarData from '../../sidebar';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nexport default function Sidebar({ location }) {\n  const sidebarSection = sidebarData.sections.find(section =>\n    location.pathname.includes(section.href),\n  );\n\n  if (!sidebarSection) {\n    return null;\n  }\n\n  return (\n    <div className=\"vads-l-col--4 site-c-content__nav\">\n      <div className=\"site-c-sidenav\">\n        <SidebarItems items={sidebarSection.items} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Layout from './Layout';\nimport Sidebar from '../components/sidebar/Sidebar';\n\n/**\n * Layout\n *\n * @class Layout\n * @extends {React.Component}\n */\nexport default function SidebarLayout({ children, location }) {\n  return (\n    <Layout location={location}>\n      <div className=\"vads-l-row\">\n        <Sidebar location={location} />\n        <div\n          id=\"main-content\"\n          className=\"vads-l-col--8 site-c-content__content docSearch-content\"\n        >\n          {children}\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nSidebarLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport DefaultLayout from \"/home/jenkins/workspace/ran-facing-services-tools_master/packages/documentation/src/layouts/SidebarLayout.jsx\";\nconst layoutProps = {};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = DefaultLayout;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" Layout={this.layout} layoutProps={Object.assign({}, layoutProps, props)} components={components}>\n\n      <h1 id=\"build-and-deploy-process-flows\">Build and deploy process flows</h1>\n      <MDXTag name=\"p\" components={components}>{`Here you'll find flow diagrames for the different types of build and deploy flows we have for VA.gov. Those different flows are:`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"#standard-masterpr-build\"\n          }}>{`Standard master/PR build`}</MDXTag></MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"#content-only-build-and-deploy\"\n          }}>{`Content only build and deploy`}</MDXTag></MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"#daily-deploy\"\n          }}>{`Daily deploy`}</MDXTag></MDXTag>\n      </MDXTag>\n      <h2 id=\"standard-masterpr-build\">Standard master/PR build</h2>\n      <MDXTag name=\"p\" components={components}>{`This is the typical Jenkins build for any vets-website branch. There is some logic that is different between master and other branches:`}</MDXTag>\n      <div className=\"mermaid\">{`graph TD\n1(Build starts)\n1 --> 2[Check for linter failures]\n1 --> 3[Check for security issues]\n1 --> 4[Run unit tests]\n2 --> 5(Build site and applications)\n3 --> 5\n4 --> 5\n5 --> 6[vagovdev build]\n5 --> 7[vagovstaging build]\n5 --> 8[vagovprod build]\n6 --> 9(Integration testing)\n7 --> 9\n8 --> 9\n9 --> 10[Accessibility tests]\n9 --> 11[End to end tests]\n11 --> 12[Create archives for each build and upload to S3]\n10 --> 12\n12 --> 13{On master branch?}\n13 -->|Yes| 14[Cache Drupal content and files to S3]\n14 --> 15[Deploy builds to dev and staging]\n13 -->|No| 16(Done)\n15 -->16`}</div>\n      <h2 id=\"content-only-deploy\">Content only deploy</h2>\n      <MDXTag name=\"p\" components={components}>{`When content is changed in Drupal, sometimes we need to publish it immediately on a va.gov site. There are two separate processes for this, one for staging/dev and another for production.`}</MDXTag>\n      <h3 id=\"stagingdev-content-deploy\">Staging/dev content deploy</h3>\n      <div className=\"mermaid\">{`graph TD\n1(Build started for dev or staging)\n1 --> 2[Fetch build for latest master commit from S3]\n2 --> 3[Build static pages with new content]\n3 --> 4[Skip Webpack build, use assets from most recent build for applications]\n4 --> 5[Create archive for build and upload to S3]\n5 --> 6[Cache Drupal content and files to S3]\n6 --> 7[Deploy build to dev or staging]`}</div>\n      <h3 id=\"production-content-deploy\">Production content deploy</h3>\n      <div className=\"mermaid\">{`graph TD\n1(Build started)\n1 --> 2[Fetch last released prod build from GitHub releases list]\n2 --> 3[Build static pages with new content]\n3 --> 4[Skip Webpack build, use assets last prod release for applications]\n4 --> 5[Create archive for build and upload to S3]\n5 --> 6[Deploy build to prod]\n6 --> 7[Deploy content preview servers]`}</div>\n      <h2 id=\"daily-deploy\">Daily deploy</h2>\n      <div className=\"mermaid\">{`graph TD\n1(Deploy started)\n1 --> 2[Fetch build for latest master commit from S3]\n2 --> 3[Build static pages with new content]\n3 --> 4[Skip Webpack build, use assets from most recent master build for applications]\n4 --> 5[Create archive for build and upload to S3]\n5 --> 6[Create GitHub release]\n6 --> 7[Wait for 60 minutes]\n7 --> 8[Deploy build to prod]\n8 --> 9[Deploy content preview servers]`}</div>\n           </MDXTag>;\n  }\n\n}\nexport const _frontmatter = {};\n    "],"sourceRoot":""}