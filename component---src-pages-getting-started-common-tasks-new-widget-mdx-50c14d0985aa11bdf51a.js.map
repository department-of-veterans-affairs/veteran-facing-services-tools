{"version":3,"sources":["webpack:///./src/components/sidebar/SidebarItems.jsx","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./src/layouts/SidebarLayout.jsx","webpack:///./src/pages/getting-started/common-tasks/new-widget.mdx"],"names":["ComponentList","query","render","data","SidebarItems","items","components","edges","map","comp","href","node","path","name","context","SidebarItem","item","key","to","isSublist","length","className","Sidebar","location","sidebarSection","sidebarData","sections","find","section","pathname","includes","SidebarLayout","children","Layout","id","layoutProps","MDXContent","props","layout","DefaultLayout","this","Object","assign","parentName","React","Component","_frontmatter"],"mappings":"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","file":"component---src-pages-getting-started-common-tasks-new-widget-mdx-50c14d0985aa11bdf51a.js","sourcesContent":["import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nfunction ComponentList() {\n  return (\n    <StaticQuery\n      query={graphql`\n        query ComponentListQuery {\n          components: allSitePage(\n            filter: { context: { source: { eq: \"component\" } } }\n          ) {\n            edges {\n              node {\n                path\n                context {\n                  source\n                  name\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <SidebarItems\n          items={data.components.edges.map(comp => ({\n            href: comp.node.path,\n            name: comp.node.context.name,\n          }))}\n        />\n      )}\n    />\n  );\n}\n\nfunction SidebarItem({ item }) {\n  if (item.href) {\n    return (\n      <li key={item.name}>\n        <Link to={item.href}>{item.name}</Link>\n      </li>\n    );\n  }\n  return <li key={item.name}>{item.name} (future)</li>;\n}\nexport default function SidebarItems({ items, isSublist = false }) {\n  if (!items.length) {\n    return null;\n  }\n\n  return (\n    <ul className=\"site-c-sidenav-list\">\n      {items.map(item => {\n        if (item.items) {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <SidebarItems isSublist items={item.items} />\n            </li>\n          );\n        }\n        if (item.query === 'componentList') {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <ComponentList />\n            </li>\n          );\n        }\n        return <SidebarItem item={item} key={item.name} />;\n      })}\n    </ul>\n  );\n}\n","import React from 'react';\nimport SidebarItems from './SidebarItems';\nimport sidebarData from '../../sidebar';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nexport default function Sidebar({ location }) {\n  const sidebarSection = sidebarData.sections.find(section =>\n    location.pathname.includes(section.href),\n  );\n\n  if (!sidebarSection) {\n    return null;\n  }\n\n  return (\n    <div className=\"vads-l-col--4 site-c-content__nav\">\n      <div className=\"site-c-sidenav\">\n        <SidebarItems items={sidebarSection.items} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Layout from './Layout';\nimport Sidebar from '../components/sidebar/Sidebar';\n\n/**\n * Layout\n *\n * @class Layout\n * @extends {React.Component}\n */\nexport default function SidebarLayout({ children, location }) {\n  return (\n    <Layout location={location}>\n      <div className=\"vads-l-row\">\n        <Sidebar location={location} />\n        <div\n          id=\"main-content\"\n          className=\"vads-l-col--8 site-c-content__content docSearch-content\"\n        >\n          {children}\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nSidebarLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport DefaultLayout from \"/home/jenkins/workspace/ran-facing-services-tools_master/packages/documentation/src/layouts/SidebarLayout.jsx\";\nconst layoutProps = {};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = DefaultLayout;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" Layout={this.layout} layoutProps={Object.assign({}, layoutProps, props)} components={components}>\n\n      <h1 id=\"creating-a-new-react-widget\">Creating a new React widget</h1>\n      <MDXTag name=\"p\" components={components}>{`Note: Check out the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"/veteran-facing-services-tools/getting-started/common-tasks/new-feature\"\n        }}>{`Adding a new feature`}</MDXTag>{` doc to make sure you're trying to add the right type of feature to VA.gov.`}</MDXTag>\n      <h2 id=\"adding-a-new-widget\">Adding a new widget</h2>\n      <MDXTag name=\"p\" components={components}>{`All the static pages use the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`static-pages`}</MDXTag>{` entry bundle, so any JS code included from that file will be on all static pages. In order to add a widget, you'll want to create a function that loads your desired React components (or plain JS) asynchronously, and mounts to an element on the page with your widget id.`}</MDXTag>\n      <MDXTag name=\"ol\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ol\">{`Add a mount point element in the static content page your widget will live on:`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-html\"\n        }}>{`<div data-widget-type=\"my-new-widget\" id=\"someId\"></div>\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"ol\" components={components} props={{\n        \"start\": 2\n      }}>\n        <MDXTag name=\"li\" components={components} parentName=\"ol\">{`Add a start up function to: `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`src/applications/static-pages/static-pages-entry.js`}</MDXTag>{`:`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-js\"\n        }}>{`...\ncreateMyWidget(store, widgetTypes.MY_NEW_WIDGET);\n...\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`You should also add a constant for your widget type in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`src/applications/static-pages/widgetTypes.js`}</MDXTag>{`:`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-js\"\n        }}>{`export default {\n  ...\n  MY_NEW_WIDGET: 'my-new-widget',\n  ...\n}\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"ol\" components={components} props={{\n        \"start\": 3\n      }}>\n        <MDXTag name=\"li\" components={components} parentName=\"ol\">{`Write your create widget function:`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-js\"\n        }}>{`export default async function createMyWidget(store, widgetType) {\n  const widget = document.querySelector(\\`[data-widget-type=\"\\${widgetType}\"]\\`);\n\n  if (widget) {\n    // Load widget if there's a mount point for it\n    const {\n      default: MyNewWidget,\n    } = await import(/* webpackChunkName: \"my-new-widget\" */ '../../platform/site-wide/my-new-widget');\n\n    // Do whatever you need to do to start up your widget\n    ReactDOM.render(<MyNewWidget>, widget);\n  }\n}\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Note that we don't import the widget code unless there's a mount point in the DOM. This function will run on every page, so we want to make sure we only download the bulk of the widget code when we're actually going to use it.`}</MDXTag>\n      <h2 id=\"guidelines-for-using-react-on-a-static-page\">Guidelines for using React on a static page</h2>\n      <MDXTag name=\"p\" components={components}>{`We should be careful to not create a bad user experience when using React on static pages. Here are some guidelines you should follow:`}</MDXTag>\n      <MDXTag name=\"ol\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ol\">{`JS and React take time to download, parse, and render. Make sure you are providing the appropriate feedback to users while that is happening, with a spinner or another method from the UX team.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ol\">{`Make sure the page is still usable if your React code fails to work. This can mean it fails to download, an error occurs, or just handling the different login states a user can be in.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ol\">{`Be aware of how much weight you're adding to the static-pages bundle and code-split/lazy load when it makes sense.`}</MDXTag>\n      </MDXTag>\n      <h2 id=\"common-widget-code\">Common widget code</h2>\n      <MDXTag name=\"p\" components={components}>{`There's a simple static page widget feature that you can use to help with the first two points above. The code is in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`src/applications/static-pages/static-page-widgets.js`}</MDXTag>{`. Using this will inline some JS that can handle displaying a loading spinner and showing an error message if something goes wrong before the React code can take over rendering. Several pension pages use this functionality (`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`pages/pension/index.md`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`pages/pension/apply.md`}</MDXTag>{` in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`vagov-content`}</MDXTag>{`). It's controlled by defining a widgets list in the front matter for the static content page you're on. The options are:`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`- widgets\n  - root: someId \n    timeout: 20\n    showSpinnerUnauthed: false\n    slowLoadingThreshold: 6\n    loadingMessage: Loading\n    slowMessage: Sorry, this is taking longer than expected.\n    errorMessage: Sorry, something went wrong.\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`root: The id of the div where the React component will mount.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`timeout: The amount of time in seconds before the error message is shown.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`showSpinnerUnauthed: By default, a spinner is shown only if a user has a session token. This will override that and show it always.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`slowLoadingThreshold: The amount of time in seconds before the slow loading message is shown. This is skipped if the threshold is greater than the overall timeout. Defaulted to 6 seconds.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`slowMessage: Message shown when the slowThreshold is passed. Defaulted to message above.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`loadingMessage: Message shown while the JS code is loading. This should probably match any loading message in your React code.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`errorMessage: Message shown when the JS code fails or times out.`}</MDXTag>\n      </MDXTag>\n           </MDXTag>;\n  }\n\n}\nexport const _frontmatter = {};\n    "],"sourceRoot":""}