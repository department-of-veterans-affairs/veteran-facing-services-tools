{"version":3,"sources":["webpack:///./src/components/sidebar/SidebarItems.jsx","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./src/components/EditLink.jsx","webpack:///./src/layouts/SidebarLayout.jsx","webpack:///./src/pages/platform/site-structure/client-overview.mdx"],"names":["ComponentList","query","render","data","SidebarItems","items","components","edges","map","comp","href","node","path","name","context","SidebarItem","item","key","to","isSublist","length","className","Sidebar","location","sidebarSection","sidebarData","sections","find","section","pathname","includes","EditLink","sourceUrl","class","aria-hidden","SidebarLayout","children","pageContext","Layout","id","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-platform-site-structure-client-overview-mdx-76f8c9fe37a4d0a03f9e.js","sourcesContent":["import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nfunction ComponentList() {\n  return (\n    <StaticQuery\n      query={graphql`\n        query ComponentListQuery {\n          components: allSitePage(\n            filter: { context: { source: { eq: \"formation-react\" } } }\n            sort: { fields: [context___name], order: ASC }\n          ) {\n            edges {\n              node {\n                path\n                context {\n                  source\n                  name\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <SidebarItems\n          items={data.components.edges.map(comp => ({\n            href: comp.node.path,\n            name: comp.node.context.name,\n          }))}\n        />\n      )}\n    />\n  );\n}\n\nfunction SidebarItem({ item }) {\n  if (item.href) {\n    return (\n      <li key={item.name}>\n        <Link to={item.href}>{item.name}</Link>\n      </li>\n    );\n  }\n  return <li key={item.name}>{item.name} (future)</li>;\n}\n\nexport default function SidebarItems({ items, isSublist = false }) {\n  if (!items.length) {\n    return null;\n  }\n\n  return (\n    <ul className=\"site-c-sidenav-list\">\n      {items.map(item => {\n        if (item.items) {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <SidebarItems isSublist items={item.items} />\n            </li>\n          );\n        }\n        if (item.query === 'componentList') {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <ComponentList />\n            </li>\n          );\n        }\n        return <SidebarItem item={item} key={item.name} />;\n      })}\n    </ul>\n  );\n}\n","import React from 'react';\nimport SidebarItems from './SidebarItems';\nimport sidebarData from '../../sidebar';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nexport default function Sidebar({ location }) {\n  const sidebarSection = sidebarData.sections.find(section =>\n    location.pathname.includes(section.href),\n  );\n\n  if (!sidebarSection) {\n    return null;\n  }\n\n  return (\n    <div className=\"vads-l-col--4 site-c-content__nav\">\n      <div className=\"site-c-sidenav\">\n        <SidebarItems items={sidebarSection.items} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function EditLink({ sourceUrl }) {\n  return sourceUrl ? (\n    <div>\n      <i class=\"fa fa-edit\" aria-hidden=\"true\" />{' '}\n      <a href={sourceUrl}>Edit this page on GitHub</a>\n    </div>\n  ) : null;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Sidebar from '../components/sidebar/Sidebar';\nimport EditLink from '../components/EditLink';\nimport Layout from './Layout';\n\n/**\n * SidebarLayout\n *\n * @class SidebarLayout\n * @extends {React.Component}\n */\nexport default function SidebarLayout({ children, location, pageContext }) {\n  return (\n    <Layout location={location}>\n      <div className=\"vads-l-row\">\n        <Sidebar location={location} />\n        <div\n          id=\"main-content\"\n          className=\"vads-l-col--8 site-c-content__content docSearch-content\"\n        >\n          {children}\n          <EditLink sourceUrl={pageContext.sourceUrl} />\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nSidebarLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/jenkins/workspace/ran-facing-services-tools_master/packages/documentation/src/layouts/SidebarLayout.jsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"vagov-client-overview\"\n    }}>{`VA.gov client overview`}</h1>\n    <p>{`Welcome to the VA digital services platform front-end overview. The goal of this article is to provide a high level overview of our front end architecture to get you oriented with the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/department-of-veterans-affairs/vets-website\"\n      }}>{`vets-website`}</a>{` repository.`}</p>\n    <p>{`The overall architecture for VA.gov is comprised of an API backend written in Ruby on Rails (`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/department-of-veterans-affairs/vets-api\"\n      }}>{`vets-api`}</a>{`) and a static front-end, written in HTML, CSS, and Javascript (`}<inlineCode parentName=\"p\">{`vets-website`}</inlineCode>{`). There's no server-side rendering or processing for the front-end; the build process compiles everything into static resources which are served to users.`}</p>\n    <h2 {...{\n      \"id\": \"content-build-process\"\n    }}>{`Content build process`}</h2>\n    <p>{`The build process has two primary kinds of functionality that it processes: static content pages and Javascript applications. Most of VA.gov consists of content that lives in Markdown files and the Drupal CMS, and is converted into HTML by a Metalsmith plugin. There are shared templates and other enhancements to make this content easier to structure.`}</p>\n    <p>{`The content build process for this is controlled by a tool called `}<a parentName=\"p\" {...{\n        \"href\": \"http://www.metalsmith.io/\"\n      }}>{`Metalsmith`}</a>{`, which is a pluggable Node.js static site generator. In general, everything in Metalsmith is a plugin, so if you're looking for specific parts of the build process, expect to check out a plugin or two. We use Metalsmith because it's flexible and because it's Javascript based, it's easy to integrate with the rest of our tools.`}</p>\n    <h2 {...{\n      \"id\": \"javascript-applications\"\n    }}>{`Javascript applications`}</h2>\n    <p>{`Javascript applications are the other type of functionality in vets-website. These applications are written in `}<a parentName=\"p\" {...{\n        \"href\": \"https://reactjs.org/\"\n      }}>{`React`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"https://redux.js.org/\"\n      }}>{`Redux`}</a>{`, and live in `}<inlineCode parentName=\"p\">{`src/applications/`}</inlineCode>{` in `}<inlineCode parentName=\"p\">{`vets-website`}</inlineCode>{`. For each app, you'll find a `}<inlineCode parentName=\"p\">{`manifest.json`}</inlineCode>{` file that contains application information as well as an entry in the `}<inlineCode parentName=\"p\">{`src/applications/registry.json`}</inlineCode>{`.  The `}<inlineCode parentName=\"p\">{`manifest.json`}</inlineCode>{` is used by Webpack in the application build, while the `}<inlineCode parentName=\"p\">{`registry.json`}</inlineCode>{` is used by the content build. See `}<a parentName=\"p\" {...{\n        \"href\": \"/veteran-facing-services-tools/veteran-facing-services-tools/getting-started/common-tasks/new-application/#manual-set-up\"\n      }}>{`Creating a new application`}</a>{` for more information on the difference between the `}<inlineCode parentName=\"p\">{`manifest.json`}</inlineCode>{` files and the `}<inlineCode parentName=\"p\">{`registry.json`}</inlineCode>{` file.`}</p>\n    <p>{`You'll find the root url of the application, which you can use to navigate to that application on the site. These applications also usually have client-side routes, so opening that root url may allow you to click to other pages that are fully client-side.`}</p>\n    <p>{`If you're a developer, most of your time will likely be spent working on a React application. We use React because it's widely used by front end developers and provides a good balance of performance and approachability. We also use Redux to manage application state, also because it's commonly used with React and fits most of the applications on VA.gov well. We use `}<a parentName=\"p\" {...{\n        \"href\": \"https://reacttraining.com/react-router/\"\n      }}>{`React Router`}</a>{` for client-side routing and `}<a parentName=\"p\" {...{\n        \"href\": \"https://webpack.js.org/\"\n      }}>{`Webpack`}</a>{` as a build tool, both of which are the `}<em parentName=\"p\">{`de facto`}</em>{` standards in the Javascript world. For styles we use `}<a parentName=\"p\" {...{\n        \"href\": \"https://sass-lang.com/\"\n      }}>{`Sass`}</a>{`, and for dependency management we use `}<a parentName=\"p\" {...{\n        \"href\": \"https://yarnpkg.com/en/\"\n      }}>{`Yarn`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"design-system\"\n    }}>{`Design system`}</h2>\n    <p>{`You will also find that our visual components and site-wide styles live in an external `}<a parentName=\"p\" {...{\n        \"href\": \"https://department-of-veterans-affairs.github.io/design-system/\"\n      }}>{`design system`}</a>{`. This design system is based on the `}<a parentName=\"p\" {...{\n        \"href\": \"https://designsystem.digital.gov/\"\n      }}>{`US Web Design System`}</a>{`, with some additional modifications by our team. As part of that design system, we provide a set of React components covering common patterns, which is `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/@department-of-veterans-affairs/formation\"\n      }}>{`published to npm`}</a>{`. You'll likely use these components to make your apps accessible and consistent with the rest of VA.gov.`}</p>\n    <h2 {...{\n      \"id\": \"routing-for-react-apps\"\n    }}>{`Routing for React apps`}</h2>\n    <h3 {...{\n      \"id\": \"production\"\n    }}>{`Production`}</h3>\n    <p>{`The production deployment of the vet-website front end consists of static HTML, CSS, and JS assets deployed to an Amazon S3 bucket. We have an nginx server that serves those static assets and does some extra route handling for our single page React apps.`}</p>\n    <p>{`React applications have a single entry page created by the content build and a special nginx `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/department-of-veterans-affairs/devops/blob/master/ansible/deployment/config/revproxy-vetsgov/vars/react_routes.yml\"\n      }}>{`config entry`}</a>{`. Each of the React applications listed in that config are standalone single page apps, and for each of the urls listed in that section of the config, the nginx server routes anything that starts with that url to the static page at that url, instead of trying to find a content page for a client-side route with the app. See the example below for a step by step view of that process.`}</p>\n    <p>{`When that page is loaded and the JS bundle is downloaded and parsed, React Router sees the original route, removes the base url specified in the entry page from it, and routes to the page configured in the routes for the React app.`}</p>\n    <p>{`In summary, nginx routes a variety of different urls to the same static entry page, and React Router renders the correct component based on the route configuration client side.`}</p>\n    <h4 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h4>\n    <p>{`Here's an example using the claim status application:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`User opens `}<inlineCode parentName=\"li\">{`va.gov/track-claims/your-claims/2344/detail`}</inlineCode></li>\n      <li parentName=\"ol\">{`Nginx serves `}<inlineCode parentName=\"li\">{`va.gov/track-claims/index.html`}</inlineCode>{`, because `}<inlineCode parentName=\"li\">{`/track-claims`}</inlineCode>{` is configured as a React application`}</li>\n      <li parentName=\"ol\">{`In the browser, the JS bundle loads and React Router sees a url of `}<inlineCode parentName=\"li\">{`/track-claims/your-claims/2344/detail`}</inlineCode></li>\n      <li parentName=\"ol\">{`Since React Router has a base url of `}<inlineCode parentName=\"li\">{`/track-claims`}</inlineCode>{`, it runs its routing logic on `}<inlineCode parentName=\"li\">{`/your-claims/2344/detail`}</inlineCode>{`, and renders the appropriate component for that url.`}</li>\n    </ol>\n    <p>{`One other thing to note is that links that use the `}<inlineCode parentName=\"p\">{`Link`}</inlineCode>{` component or the `}<inlineCode parentName=\"p\">{`router`}</inlineCode>{` object in the React app use the history api to change the url without reloading the page. React Router listens for these url changes and renders the right component for you. This is why you have to use `}<inlineCode parentName=\"p\">{`Link`}</inlineCode>{` and not a regular `}<inlineCode parentName=\"p\">{`a`}</inlineCode>{` element, which results in a page refresh for the url you're trying to link to.`}</p>\n    <h3 {...{\n      \"id\": \"development\"\n    }}>{`Development`}</h3>\n    <p>{`Locally, we've configured the webpack dev server to do the same redirects as nginx, however they are duplicated in a couple places:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/department-of-veterans-affairs/vets-website/blob/master/script/build.js\"\n        }}>{`script/build.js`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/department-of-veterans-affairs/vets-website/blob/master/src/platform/testing/e2e/test-server.js\"\n        }}>{`src/platform/testing/e2e/test-server.js`}</a>{` (for e2e tests)`}</li>\n    </ul>\n    <p>{`You will need to update these locations as well as the nginx config when creating a new React application.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}