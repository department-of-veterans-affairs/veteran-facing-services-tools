{"version":3,"sources":["webpack:///./src/components/EditLink.jsx","webpack:///./src/layouts/SidebarLayout.jsx","webpack:///./src/components/sidebar/SidebarItems.jsx","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./src/pages/getting-started/common-tasks/debugging-tests.mdx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["EditLink","sourceUrl","class","aria-hidden","href","SidebarLayout","children","location","pageContext","Layout","className","Sidebar","id","SidebarItem","item","key","name","to","SidebarItems","items","isSublist","length","map","sidebarSection","sidebarData","sections","find","section","pathname","includes","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","_objectWithoutPropertiesLoose","source","excluded","i","target","sourceKeys","Object","keys","indexOf"],"mappings":"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","file":"component---src-pages-getting-started-common-tasks-debugging-tests-mdx-8a7c715e26e9f29594c3.js","sourcesContent":["import React from 'react';\n\nexport default function EditLink({ sourceUrl }) {\n  return sourceUrl ? (\n    <div>\n      <i class=\"fa fa-edit\" aria-hidden=\"true\" />{' '}\n      <a href={sourceUrl}>Edit this page on GitHub</a>\n    </div>\n  ) : null;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Sidebar from '../components/sidebar/Sidebar';\nimport EditLink from '../components/EditLink';\nimport Layout from './Layout';\n\n/**\n * SidebarLayout\n *\n * @class SidebarLayout\n * @extends {React.Component}\n */\nexport default function SidebarLayout({ children, location, pageContext }) {\n  return (\n    <Layout location={location}>\n      <div className=\"vads-l-row site-l-wrapper\">\n        <Sidebar location={location} />\n        <div\n          id=\"main-content\"\n          className=\"vads-l-col--8 site-c-content__content docSearch-content\"\n        >\n          {children}\n          <EditLink sourceUrl={pageContext.sourceUrl} />\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nSidebarLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport { Link } from 'gatsby';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nfunction SidebarItem({ item }) {\n  if (item.href) {\n    return (\n      <li key={item.name}>\n        <Link to={item.href}>{item.name}</Link>\n      </li>\n    );\n  }\n  return <li key={item.name}>{item.name} (future)</li>;\n}\n\nexport default function SidebarItems({ items, isSublist = false }) {\n  if (!items.length) {\n    return null;\n  }\n\n  return (\n    <ul className=\"site-c-sidenav-list\">\n      {items.map(item => {\n        if (item.items) {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <SidebarItems isSublist items={item.items} />\n            </li>\n          );\n        }\n        return <SidebarItem item={item} key={item.name} />;\n      })}\n    </ul>\n  );\n}\n","import React from 'react';\nimport SidebarItems from './SidebarItems';\nimport sidebarData from '../../sidebar';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nexport default function Sidebar({ location }) {\n  const sidebarSection = sidebarData.sections.find(section =>\n    location.pathname.includes(section.href),\n  );\n\n  if (!sidebarSection) {\n    return null;\n  }\n\n  return (\n    <div className=\"vads-l-col--4 site-c-content__nav\">\n      <div className=\"site-c-sidenav\">\n        <SidebarItems items={sidebarSection.items} />\n      </div>\n    </div>\n  );\n}\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/jenkins/workspace/ran-facing-services-tools_master/packages/documentation/src/layouts/SidebarLayout.jsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"debugging-tests\"\n    }}>{`Debugging tests`}</h1>\n    <p><strong parentName=\"p\"><em parentName=\"strong\">{` Unit Tests `}</em></strong></p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`To run tests with some extra debugging info, you can pass a `}<inlineCode parentName=\"p\">{`--log-level`}</inlineCode>{`:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`  yarn test:unit --log-level debug\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`You can put a `}<inlineCode parentName=\"p\">{`console.log()`}</inlineCode>{` in your test code. When you run the test, the output will be in the command line.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Use Chrome devtools to debug unit tests`}</p>\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`Go to `}<a parentName=\"p\" {...{\n                \"href\": \"chrome://inspect/\"\n              }}>{`chrome://inspect/`}</a>{`.`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`Add a `}<inlineCode parentName=\"p\">{`debugger`}</inlineCode>{` statement in your test code and if you want to run only your test add the `}<strong parentName=\"p\">{`.only`}</strong>{` on your test like so. Make sure to remove the `}<strong parentName=\"p\">{`.only`}</strong>{` once you are done.`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`  it.only('testing something', () => {\n    debugger\n\n    expect(value).to.eq(true);\n  })\n`}</code></pre>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`run in the terminal`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`  $ BABEL_ENV=test node_modules/.bin/mocha --inspect-brk --opts src/platform/testing/unit/mocha.opts --recursive '{test,src}/**/*.unit.spec.js?(x)' src/platform/testing/unit/helper.js\n`}</code></pre>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`Go to your Node Chrome Developer Tools. Under `}<inlineCode parentName=\"p\">{`Remote Target`}</inlineCode>{` you should see your test running. Click on the link where your test is running to open the debugger tool.`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`You will want to press the debugger play button to start the program. It will initially pause on the first line of code.`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`It might take awhile for the tests to setup, just be patient and eventually it will run.`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`Once the test runs, your code should break at your debugger statement.`}</p>\n          </li>\n        </ol>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`VSCode's debugging tool for unit tests`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Add this `}<inlineCode parentName=\"li\">{`Mocha Tests`}</inlineCode>{` configuration to your `}<inlineCode parentName=\"li\">{`.vscode/launch.json`}</inlineCode>{` file`}\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`  {\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"type\": \"node\",\n            \"request\": \"launch\",\n            \"name\": \"Mocha Tests\",\n            \"env\": {\"BABEL_ENV\": \"test\"},\n            \"runtimeExecutable\": \"\\${workspaceFolder}/node_modules/.bin/mocha\",\n            \"runtimeArgs\": [\n                \"--inspect\",\n                \"--opts\",\n                \"\\${workspaceFolder}/src/platform/testing/unit/mocha.opts\",\n                \"--recursive\",\n                \"\\${workspaceFolder}/{test,src}/**/*.unit.spec.js?(x)\",\n                \"\\${workspaceFolder}/src/platform/testing/unit/helper.js\"\n            ],\n            \"port\": 9229\n        }\n    ]\n  }\n`}</code></pre>\n          </li>\n          <li parentName=\"ul\">{`Now you can add breakpoints or debugger statements to debug your code through the VSCode debugger tools.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <p>{`*** End to End tests`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`It's possible to set an infinite pause (`}<inlineCode parentName=\"p\">{`.pause()`}</inlineCode>{`) in the test code and then see what's happening at a given point in the browser where the test is running.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`  client\n    .openUrl('http://localhost:3000')\n    .waitForElementVisible('body', Timeouts.normal)\n    .pause()\n    .click('.submit_button')\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Using Node Chrome DevTools. You can add a (`}<inlineCode parentName=\"p\">{`.perform`}</inlineCode>{`) method and either console.log or add a debugger statement to debug your code in the callback function.`}</p>\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`add a perform method in your code.`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`client\n  .openUrl('http://localhost:3000')\n  .waitForElementVisible('body', Timeouts.normal)\n  .perform(() => {\n    console.log(testData);\n\n    debugger\n  })\n  .click('.submit_button')\n`}</code></pre>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`open up `}<a parentName=\"p\" {...{\n                \"href\": \"chrome://inspect\"\n              }}>{`chrome://inspect`}</a>{` in your browser.`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`In your terminal run. You can pass in a specific file path to test after the `}<inlineCode parentName=\"p\">{`nightwatch.js`}</inlineCode>{` or leave it blank to run all tests.`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`$ BABEL_ENV=test WEB_PORT=3001 node --inspect-brk node_modules/nightwatch/bin/runner.js -c config/nightwatch.js [optional file to test]\n`}</code></pre>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`Go to your Node Chrome Developer Tools. Under `}<inlineCode parentName=\"p\">{`Remote Target`}</inlineCode>{` you should see your test running. Click on the link where your test is running to open the debugger tool.`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`You will want to press the debugger play button to start the program. It will initially pause on the first line of code.`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`after the program starts it should pause at your debugger statement or you should see your console.logs in the console.`}</p>\n          </li>\n        </ol>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}