{"version":3,"sources":["webpack:///./src/components/sidebar/SidebarItems.jsx","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./src/components/EditLink.jsx","webpack:///./src/layouts/SidebarLayout.jsx","webpack:///./src/pages/getting-started/index.mdx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["SidebarItem","item","href","key","name","to","SidebarItems","items","isSublist","length","className","map","Sidebar","location","sidebarSection","sidebarData","sections","find","section","pathname","includes","EditLink","sourceUrl","class","aria-hidden","SidebarLayout","children","pageContext","Layout","id","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","_objectWithoutPropertiesLoose","source","excluded","i","target","sourceKeys","Object","keys","indexOf"],"mappings":"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","file":"component---src-pages-getting-started-index-mdx-22019775ea4e86259573.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nfunction SidebarItem({ item }) {\n  if (item.href) {\n    return (\n      <li key={item.name}>\n        <Link to={item.href}>{item.name}</Link>\n      </li>\n    );\n  }\n  return <li key={item.name}>{item.name} (future)</li>;\n}\n\nexport default function SidebarItems({ items, isSublist = false }) {\n  if (!items.length) {\n    return null;\n  }\n\n  return (\n    <ul className=\"site-c-sidenav-list\">\n      {items.map(item => {\n        if (item.items) {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <SidebarItems isSublist items={item.items} />\n            </li>\n          );\n        }\n        return <SidebarItem item={item} key={item.name} />;\n      })}\n    </ul>\n  );\n}\n","import React from 'react';\nimport SidebarItems from './SidebarItems';\nimport sidebarData from '../../sidebar';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nexport default function Sidebar({ location }) {\n  const sidebarSection = sidebarData.sections.find(section =>\n    location.pathname.includes(section.href),\n  );\n\n  if (!sidebarSection) {\n    return null;\n  }\n\n  return (\n    <div className=\"vads-l-col--4 site-c-content__nav\">\n      <div className=\"site-c-sidenav\">\n        <SidebarItems items={sidebarSection.items} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function EditLink({ sourceUrl }) {\n  return sourceUrl ? (\n    <div>\n      <i class=\"fa fa-edit\" aria-hidden=\"true\" />{' '}\n      <a href={sourceUrl}>Edit this page on GitHub</a>\n    </div>\n  ) : null;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Sidebar from '../components/sidebar/Sidebar';\nimport EditLink from '../components/EditLink';\nimport Layout from './Layout';\n\n/**\n * SidebarLayout\n *\n * @class SidebarLayout\n * @extends {React.Component}\n */\nexport default function SidebarLayout({ children, location, pageContext }) {\n  return (\n    <Layout location={location}>\n      <div className=\"vads-l-row\">\n        <Sidebar location={location} />\n        <div\n          id=\"main-content\"\n          className=\"vads-l-col--8 site-c-content__content docSearch-content\"\n        >\n          {children}\n          <EditLink sourceUrl={pageContext.sourceUrl} />\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nSidebarLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/jenkins/workspace/ran-facing-services-tools_master/packages/documentation/src/layouts/SidebarLayout.jsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"set-up-vagov-locally\"\n    }}>{`Set up VA.gov locally`}</h1>\n    <p>{`These instructions cover building and running VA.gov locally, including configuring any required dependencies.`}</p>\n    <h2 {...{\n      \"id\": \"node-setup\"\n    }}>{`Node setup`}</h2>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Install `}<inlineCode parentName=\"p\">{`nvm`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\"><strong parentName=\"p\">{`Mac:`}</strong></p>\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"http://brew.sh/\"\n          }}>{`homebrew`}</a>{` is recommended for installing `}<inlineCode parentName=\"p\">{`nvm`}</inlineCode>{` but other installation approaches are on `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/creationix/nvm#installation-and-update\"\n          }}>{`nvm Github page`}</a>{`.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`$ brew update && brew install nvm\n`}</code></pre>\n        <p parentName=\"li\"><strong parentName=\"p\">{`Linux:`}</strong></p>\n        <p parentName=\"li\">{`To get the latest version of NVM visit the official page. `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/nvm-sh/nvm\"\n          }}>{`NVM`}</a></p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`$ curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash\n`}</code></pre>\n        <p parentName=\"li\">{`Follow the post-install instructions in the success message.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Install `}<inlineCode parentName=\"p\">{`node 14.15.0`}</inlineCode>{` (this also installs `}<inlineCode parentName=\"p\">{`npm`}</inlineCode>{`):`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`$ nvm install 14.15.0\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Configure `}<inlineCode parentName=\"p\">{`nvm`}</inlineCode>{` to use `}<inlineCode parentName=\"p\">{`node 14.15.0`}</inlineCode>{` by default:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`$ nvm alias default 14.15.0\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Install `}<inlineCode parentName=\"p\">{`yarn 1.21.1`}</inlineCode>{` globally:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`$ npm i -g yarn@1.21.1\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Verify correct versions of `}<inlineCode parentName=\"p\">{`node`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`yarn`}</inlineCode>{` are installed:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`$ node --version # 14.15.0\n$ yarn --version # 1.21.1\n`}</code></pre>\n      </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"get-the-source-code\"\n    }}>{`Get the source code`}</h2>\n    <ol {...{\n      \"start\": 6\n    }}>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Clone VA.gov git repos `}<strong parentName=\"p\">{`as sibling directories`}</strong>{`:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`$ git clone git@github.com:department-of-veterans-affairs/vets-website.git\n$ git clone git@github.com:department-of-veterans-affairs/vagov-content.git\n$ git clone git@github.com:department-of-veterans-affairs/content-build.git\n$ git clone git@github.com:department-of-veterans-affairs/vets-json-schema.git\n$ git clone git@github.com:department-of-veterans-affairs/veteran-facing-services-tools.git\n$ git clone git@github.com:department-of-veterans-affairs/vets-api.git\n$ git clone git@github.com:department-of-veterans-affairs/vets-api-mockdata.git\n`}</code></pre>\n        <p parentName=\"li\"><strong parentName=\"p\">{`Front end repos`}</strong></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`vets-website`}</inlineCode>{`: Core front end platform and application code`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`vagov-content`}</inlineCode>{`: Markdown content used to generate static pages`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`content-build`}</inlineCode>{`: Liquid templates and content build for static pages`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`veteran-facing-services-tools`}</inlineCode>{`: Shared front end components (including non VA.gov users) and front end documentation site`}</li>\n        </ul>\n        <p parentName=\"li\"><strong parentName=\"p\">{`Back end repos`}</strong></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`vets-api`}</inlineCode>{`: Core Rails API server application code`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`vets-api-mockdata`}</inlineCode>{`: Mock data used when running locally and on dev for the backend`}</li>\n        </ul>\n        <p parentName=\"li\"><strong parentName=\"p\">{`Shared repos`}</strong></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`vets-json-schema`}</inlineCode>{`: Shared JSON Schema definitions used by form applications and the APIs that they consume`}</li>\n        </ul>\n      </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"start-up-the-front-end\"\n    }}>{`Start up the front end`}</h2>\n    <h3 {...{\n      \"id\": \"vets-website\"\n    }}>{`vets-website`}</h3>\n    <p>{`7a. Navigate to the `}<inlineCode parentName=\"p\">{`vets-website`}</inlineCode>{` repository, then install `}<inlineCode parentName=\"p\">{`vets-website`}</inlineCode>{` dependencies. See these `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/department-of-veterans-affairs/vets-website/blob/master/README.md\"\n      }}>{`common commands`}</a>{` for more information.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ cd vets-website\n$ yarn install\n`}</code></pre>\n    <p>{`8a. Build `}<inlineCode parentName=\"p\">{`vets-website`}</inlineCode>{`. If you're only doing application work inside `}<inlineCode parentName=\"p\">{`vets-website`}</inlineCode>{` you can run the build command which contains the scaffolding option by default:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ yarn build\n`}</code></pre>\n    <p>{`   If you need the CSS and JS generated for work in `}<inlineCode parentName=\"p\">{`content-build`}</inlineCode>{` you can run a normal build:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ yarn build\n`}</code></pre>\n    <p>{`9a. Start the local development server.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ yarn watch\n`}</code></pre>\n    <p>{`   The watch is complete when the CLI says `}<inlineCode parentName=\"p\">{`Compiled successfully`}</inlineCode>{`.`}</p>\n    <p>{`10a. Open `}<a parentName=\"p\" {...{\n        \"href\": \"http://localhost:3001\"\n      }}>{`http://localhost:3001`}</a>{` in a browser if you built `}<inlineCode parentName=\"p\">{`vets-website`}</inlineCode>{` using the scaffold option; otherwise, continue on to the `}<a parentName=\"p\" {...{\n        \"href\": \"#content-build\"\n      }}>{`content-build`}</a>{` section for viewing changes in the browser.`}</p>\n    <h3 {...{\n      \"id\": \"content-build\"\n    }}>{`content-build`}</h3>\n    <p>{`In order to run `}<inlineCode parentName=\"p\">{`content-build`}</inlineCode>{`, you must first generate the CSS and JS files within `}<inlineCode parentName=\"p\">{`vets-website`}</inlineCode>{`\n(follow steps above). If you don't, you will see a build error in the console instructing you to first\ngenerate files in `}<inlineCode parentName=\"p\">{`vets-website`}</inlineCode>{`.`}</p>\n    <p>{`If you don't need to locally view static pages and are just working on applications, you don't need to set this part up.`}</p>\n    <p>{`7b. Navigate to the `}<inlineCode parentName=\"p\">{`content-build`}</inlineCode>{` repository, then install dependencies via `}<inlineCode parentName=\"p\">{`yarn`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ cd content-build\n$ yarn install\n`}</code></pre>\n    <p>{`8b. Build `}<inlineCode parentName=\"p\">{`content-build`}</inlineCode>{`. Make sure you `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/department-of-veterans-affairs/va.gov-team/blob/master/platform/engineering/internal-tools.md#configure-the-socks-proxy\"\n      }}>{`configured the SOCKS proxy`}</a>{` to fetch content from Drupal.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ yarn build\n`}</code></pre>\n    <p>{`   If you do not have access to the SOCKS proxy, you can alternately fetch the latest cached version of the content.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ yarn fetch-drupal-cache\n`}</code></pre>\n    <p>{`9a. Start the local development server.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ yarn watch\n`}</code></pre>\n    <p>{`   The watch is complete when the CLI says `}<inlineCode parentName=\"p\">{`Compiled successfully`}</inlineCode>{`.`}</p>\n    <p>{`10a. Open `}<a parentName=\"p\" {...{\n        \"href\": \"http://localhost:3002\"\n      }}>{`http://localhost:3002`}</a>{` in a browser`}</p>\n    <h2 {...{\n      \"id\": \"backend-and-internal-tools-set-up\"\n    }}>{`Backend and internal tools set up`}</h2>\n    <p>{`Setting up the backend and internal tools allows local test account login and static content rendering.`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"https://github.com/department-of-veterans-affairs/vets-api\"\n          }}><strong parentName=\"a\">{`Backend (`}<inlineCode parentName=\"strong\">{`vets-api`}</inlineCode>{`) set up`}</strong>{` instructions`}</a></p>\n        <p parentName=\"li\">{`The local `}<inlineCode parentName=\"p\">{`vets-website`}</inlineCode>{` is configured to point to the `}<inlineCode parentName=\"p\">{`vets-api`}</inlineCode>{` backend at `}<inlineCode parentName=\"p\">{`http://localhost:3000`}</inlineCode>{`. Any website functionality that depends on the backend (i.e. login, save-in-progress, form submission, feature toggles) will require a locally running instance of `}<inlineCode parentName=\"p\">{`vets-api`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"https://github.com/department-of-veterans-affairs/vets.gov-team/blob/master/Administrative/Accessing-Staging.md\"\n          }}><strong parentName=\"a\">{`Local test account login`}</strong>{` instructions`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"internal-tools\"\n          }}>{`Internal tools setup instructions`}</a></p>\n        <p parentName=\"li\">{`This proxy setup is required to access static content locally and to access to our reporting and monitoring tools. Running the `}<inlineCode parentName=\"p\">{`yarn watch`}</inlineCode>{` task with the SOCKS proxy active will automatically pull and cache the static content for `}<inlineCode parentName=\"p\">{`vets-website`}</inlineCode>{`.`}</p>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}