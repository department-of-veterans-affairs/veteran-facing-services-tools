{"version":3,"sources":["webpack:///./src/components/EditLink.jsx","webpack:///./src/layouts/SidebarLayout.jsx","webpack:///./src/components/sidebar/SidebarItems.jsx","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./src/pages/getting-started/common-tasks/debugging-tests.mdx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["EditLink","_ref","sourceUrl","React","createElement","class","aria-hidden","href","SidebarLayout","children","location","pageContext","Layout","className","Sidebar","id","SidebarItem","item","key","name","Link","to","SidebarItems","_ref2","items","_ref2$isSublist","isSublist","length","map","sidebarSection","sidebarData","sections","find","section","pathname","includes","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","_objectWithoutPropertiesLoose","_excluded","mdx","Object","assign","mdxType","parentName","isMDXComponent","r","e","t","n","hasOwnProperty","call","indexOf"],"mappings":"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","file":"component---src-pages-getting-started-common-tasks-debugging-tests-mdx-2e12c65a632c69ed51b1.js","sourcesContent":["import React from 'react';\n\nexport default function EditLink({ sourceUrl }) {\n  return sourceUrl ? (\n    <div>\n      <i class=\"fa fa-edit\" aria-hidden=\"true\" />{' '}\n      <a href={sourceUrl}>Edit this page on GitHub</a>\n    </div>\n  ) : null;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Sidebar from '../components/sidebar/Sidebar';\nimport EditLink from '../components/EditLink';\nimport Layout from './Layout';\n\n/**\n * SidebarLayout\n *\n * @class SidebarLayout\n * @extends {React.Component}\n */\nexport default function SidebarLayout({ children, location, pageContext }) {\n  return (\n    <Layout location={location}>\n      <div className=\"vads-l-row site-l-wrapper\">\n        <Sidebar location={location} />\n        <div\n          id=\"main-content\"\n          className=\"vads-l-col--8 site-c-content__content docSearch-content\"\n        >\n          {children}\n          <EditLink sourceUrl={pageContext.sourceUrl} />\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nSidebarLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport { Link } from 'gatsby';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nfunction SidebarItem({ item }) {\n  if (item.href) {\n    return (\n      <li key={item.name}>\n        <Link to={item.href}>{item.name}</Link>\n      </li>\n    );\n  }\n  return <li key={item.name}>{item.name} (future)</li>;\n}\n\nexport default function SidebarItems({ items, isSublist = false }) {\n  if (!items.length) {\n    return null;\n  }\n\n  return (\n    <ul className=\"site-c-sidenav-list\">\n      {items.map(item => {\n        if (item.items) {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <SidebarItems isSublist items={item.items} />\n            </li>\n          );\n        }\n        return <SidebarItem item={item} key={item.name} />;\n      })}\n    </ul>\n  );\n}\n","import React from 'react';\nimport SidebarItems from './SidebarItems';\nimport sidebarData from '../../sidebar';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nexport default function Sidebar({ location }) {\n  const sidebarSection = sidebarData.sections.find(section =>\n    location.pathname.includes(section.href),\n  );\n\n  if (!sidebarSection) {\n    return null;\n  }\n\n  return (\n    <div className=\"vads-l-col--4 site-c-content__nav\">\n      <div className=\"site-c-sidenav\">\n        <SidebarItems items={sidebarSection.items} />\n      </div>\n    </div>\n  );\n}\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/veteran-facing-services-tools/veteran-facing-services-tools/packages/documentation/src/layouts/SidebarLayout.jsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"debugging-tests\"\n    }}>{`Debugging tests`}</h1>\n    <h2 {...{\n      \"id\": \"unit-tests\"\n    }}>{`Unit Tests`}</h2>\n    <div className=\"deprecation-message\">\n    <h3>We're moving our docs!</h3>\n    <h4>Find <a href=\"https://depo-platform-documentation.scrollhelp.site/developer-docs/Debugging-unit-tests.1836286010.html\">the latest version of this section</a> on the Platform website.</h4>\n    <h4>Still can't find what you're looking for? Reach out to <a href=\"https://dsva.slack.com/archives/CBU0KDSB1\">#vfs-platform-support</a> on Slack.</h4>\n    </div>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`To run tests with some extra debugging info, you can pass a `}<inlineCode parentName=\"p\">{`--log-level`}</inlineCode>{`:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`  yarn test:unit --log-level debug\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`You can put a `}<inlineCode parentName=\"p\">{`console.log()`}</inlineCode>{` in your test code. When you run the test, the output will be in the command line.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Use Chrome devtools to debug unit tests`}</p>\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`Go to `}<a parentName=\"p\" {...{\n                \"href\": \"chrome://inspect/\"\n              }}>{`chrome://inspect/`}</a>{`.`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`Add a `}<inlineCode parentName=\"p\">{`debugger`}</inlineCode>{` statement in your test code and if you want to run only your test add the `}<strong parentName=\"p\">{`.only`}</strong>{` on your test like so. Make sure to remove the `}<strong parentName=\"p\">{`.only`}</strong>{` once you are done.`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`  it.only('testing something', () => {\n    debugger\n\n    expect(value).to.eq(true);\n  })\n`}</code></pre>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`run in the terminal`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`  $ BABEL_ENV=test node_modules/.bin/mocha --inspect-brk --opts src/platform/testing/unit/mocha.opts --recursive '{test,src}/**/*.unit.spec.js?(x)' src/platform/testing/unit/helper.js\n`}</code></pre>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`Go to your Node Chrome Developer Tools. Under `}<inlineCode parentName=\"p\">{`Remote Target`}</inlineCode>{` you should see your test running. Click on the link where your test is running to open the debugger tool.`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`You will want to press the debugger play button to start the program. It will initially pause on the first line of code.`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`It might take awhile for the tests to setup, just be patient and eventually it will run.`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`Once the test runs, your code should break at your debugger statement.`}</p>\n          </li>\n        </ol>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`VSCode's debugging tool for unit tests`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Add this `}<inlineCode parentName=\"li\">{`Mocha Tests`}</inlineCode>{` configuration to your `}<inlineCode parentName=\"li\">{`.vscode/launch.json`}</inlineCode>{` file`}\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`  {\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"type\": \"node\",\n            \"request\": \"launch\",\n            \"name\": \"Mocha Tests\",\n            \"env\": {\"BABEL_ENV\": \"test\"},\n            \"runtimeExecutable\": \"\\${workspaceFolder}/node_modules/.bin/mocha\",\n            \"runtimeArgs\": [\n                \"--inspect\",\n                \"--opts\",\n                \"\\${workspaceFolder}/src/platform/testing/unit/mocha.opts\",\n                \"--recursive\",\n                \"\\${workspaceFolder}/{test,src}/**/*.unit.spec.js?(x)\",\n                \"\\${workspaceFolder}/src/platform/testing/unit/helper.js\"\n            ],\n            \"port\": 9229\n        }\n    ]\n  }\n`}</code></pre>\n          </li>\n          <li parentName=\"ul\">{`Now you can add breakpoints or debugger statements to debug your code through the VSCode debugger tools.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"end-to-end-tests\"\n    }}>{`End to End tests`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`It's possible to set an infinite pause (`}<inlineCode parentName=\"p\">{`.pause()`}</inlineCode>{`) in the test code and then see what's happening at a given point in the browser where the test is running.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`  client\n    .openUrl('http://localhost:3000')\n    .waitForElementVisible('body', Timeouts.normal)\n    .pause()\n    .click('.submit_button')\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Using Node Chrome DevTools. You can add a (`}<inlineCode parentName=\"p\">{`.perform`}</inlineCode>{`) method and either console.log or add a debugger statement to debug your code in the callback function.`}</p>\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`add a perform method in your code.`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`client\n  .openUrl('http://localhost:3000')\n  .waitForElementVisible('body', Timeouts.normal)\n  .perform(() => {\n    console.log(testData);\n\n    debugger\n  })\n  .click('.submit_button')\n`}</code></pre>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`open up `}<a parentName=\"p\" {...{\n                \"href\": \"chrome://inspect\"\n              }}>{`chrome://inspect`}</a>{` in your browser.`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`In your terminal run. You can pass in a specific file path to test after the `}<inlineCode parentName=\"p\">{`nightwatch.js`}</inlineCode>{` or leave it blank to run all tests.`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`$ BABEL_ENV=test WEB_PORT=3001 node --inspect-brk node_modules/nightwatch/bin/runner.js -c config/nightwatch.js [optional file to test]\n`}</code></pre>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`Go to your Node Chrome Developer Tools. Under `}<inlineCode parentName=\"p\">{`Remote Target`}</inlineCode>{` you should see your test running. Click on the link where your test is running to open the debugger tool.`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`You will want to press the debugger play button to start the program. It will initially pause on the first line of code.`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\">{`after the program starts it should pause at your debugger statement or you should see your console.logs in the console.`}</p>\n          </li>\n        </ol>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (-1 !== e.indexOf(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nexport { _objectWithoutPropertiesLoose as default };"],"sourceRoot":""}