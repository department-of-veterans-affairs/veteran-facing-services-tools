{"version":3,"sources":["webpack:///./src/components/sidebar/SidebarItems.jsx","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./src/components/pageFooter/Components.jsx","webpack:///./src/components/pageFooter/Documentation.jsx","webpack:///./src/components/pageFooter/PageFooter.jsx","webpack:///./src/layouts/SidebarLayout.jsx","webpack:///./src/pages/platform/architecture/static-site/urls.mdx"],"names":["ComponentList","query","render","data","SidebarItems","items","components","edges","map","comp","href","node","path","name","context","SidebarItem","item","key","to","isSublist","length","className","Sidebar","location","sidebarSection","sidebarData","sections","find","section","pathname","includes","componentToMatch","toLowerCase","ComponentItem","link","base","Components","splits","split","Documentation","level1","indexmdx","Array","isArray","lvl2Item","getIndexMdx","PageFooter","class","aria-hidden","getGithubHref","SidebarLayout","children","Layout","id","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","props","mdxType","parentName","isMDXComponent"],"mappings":"q5IASA,SAASA,IACP,OACE,kBAAC,cAAD,CACEC,MAAK,aAkBLC,OAAQ,SAAAC,GAAI,OACV,kBAACC,EAAD,CACEC,MAAOF,EAAKG,WAAWC,MAAMC,KAAI,SAAAC,GAAI,MAAK,CACxCC,KAAMD,EAAKE,KAAKC,KAChBC,KAAMJ,EAAKE,KAAKG,QAAQD,YAvBhC,SA+BJ,SAASE,EAAT,GAAgC,IAATC,EAAQ,EAARA,KACrB,OAAIA,EAAKN,KAEL,wBAAIO,IAAKD,EAAKH,MACZ,kBAAC,OAAD,CAAMK,GAAIF,EAAKN,MAAOM,EAAKH,OAI1B,wBAAII,IAAKD,EAAKH,MAAOG,EAAKH,KAA1B,aAEM,SAAST,EAAT,GAAqD,IAA7BC,EAA4B,EAA5BA,MAA4B,IAArBc,iBAAqB,SACjE,OAAKd,EAAMe,OAKT,wBAAIC,UAAU,uBACXhB,EAAMG,KAAI,SAAAQ,GACT,OAAIA,EAAKX,MAEL,wBAAIY,IAAKD,EAAKH,MACXM,GAAa,kBAACJ,EAAD,CAAaC,KAAMA,KAC/BG,GAAa,wBAAIE,UAAU,mBAAmBL,EAAKH,MACrD,kBAACT,EAAD,CAAce,WAAS,EAACd,MAAOW,EAAKX,SAIvB,kBAAfW,EAAKf,MAEL,wBAAIgB,IAAKD,EAAKH,MACXM,GAAa,kBAACJ,EAAD,CAAaC,KAAMA,KAC/BG,GAAa,wBAAIE,UAAU,mBAAmBL,EAAKH,MACrD,kBAACb,EAAD,OAIC,kBAACe,EAAD,CAAaC,KAAMA,EAAMC,IAAKD,EAAKH,WAxBvC,K,yBC5CI,SAASS,EAAT,GAAgC,IAAbC,EAAY,EAAZA,SAC1BC,EAAiBC,IAAYC,SAASC,MAAK,SAAAC,GAAO,OACtDL,EAASM,SAASC,SAASF,EAAQlB,SAGrC,OAAKc,EAKH,yBAAKH,UAAU,qCACb,yBAAKA,UAAU,kBACb,kBAACjB,EAAD,CAAcC,MAAOmB,EAAenB,UANjC,K,gBCPX,SAASL,EAAT,GAA8C,IAArB+B,EAAoB,EAApBA,iBACvB,OACE,kBAAC,cAAD,CACE9B,MAAK,aAkBLC,OAAQ,SAACC,GAAD,OACNA,EAAKG,WAAWC,MAAMC,KAAI,SAACC,GACzB,OAAOsB,IAAqBtB,EAAKE,KAAKG,QAAQD,KAAKmB,cACjD,kBAACC,EAAD,CACEjB,KAAM,CACJH,KAAMJ,EAAKE,KAAKG,QAAQD,QAI5B,OA5BR,SAoCJ,SAASoB,EAAT,GAAkC,IAATjB,EAAQ,EAARA,KAGjBkB,EAAOC,uIAAwBnB,EAAKH,KAAO,IAAMG,EAAKH,KAAO,OACnE,OAAO,kBAAC,OAAD,CAAMK,GAAIgB,GAAV,4BAGM,SAASE,EAAT,GAAmC,IAC1CC,EADyC,EAAZR,SACXS,MAAM,KAC9B,OAAO,kBAAC,EAAD,CAAeP,iBAAkBM,EAAO,KCRlC,SAASE,EAAT,GAAsC,IAAbhB,EAAY,EAAZA,SAGhCW,EACJC,+HAAuBZ,EAASM,SAxChB,SAACN,GACnB,IAAMC,EAAiBC,IAAYC,SAASC,MAAK,SAACC,GAAD,OAC/CL,EAASM,SAASC,SAASF,EAAQlB,SAI/B8B,EAASf,IAAYC,SAASC,MAClC,SAACC,GAAD,OAAaA,EAAQlB,OAASa,EAASM,YAGzC,GAAIW,aAAJ,EAAIA,EAAQC,SACV,MAAO,SAIT,IAAIjB,aAAJ,EAAIA,EAAgBnB,QACKmB,EAAenB,MAAMG,KAAI,SAACQ,GAC/C,OAAO0B,MAAMC,QAAQ3B,EAAKX,OACtBW,EAAKX,MAAMsB,MAAK,SAACiB,GAAD,OAAcA,EAASlC,OAASa,EAASM,YACzD,QAGwBrB,KAAI,SAACoB,GACjC,IAAIA,aAAA,EAAAA,EAASlB,OAAQkB,EAAQlB,OAASa,EAASM,SAC7C,SAAOD,aAAA,EAAAA,EAASa,aAITd,MAAK,SAACc,GAAD,OAAcA,KAC5B,MAAO,SAIX,MAAO,GAOsCI,CAAYtB,GAAY,OAErE,OAAO,kBAAC,OAAD,CAAML,GAAIgB,GAAV,4BC1CM,SAASY,EAAT,GAAmC,IAAbvB,EAAY,EAAZA,SACnC,OACE,6BACE,2BACE,6BACA,uBAAGwB,MAAM,aAAaC,cAAY,SAFpC,IAXgB,SAACzB,GACrB,OAAIA,EAASM,SAASC,SAAS,cACtB,kBAACM,EAAD,CAAYP,SAAUN,EAASM,WAE/B,kBAACU,EAAD,CAAehB,SAAUA,IASmB0B,CAAc1B,KCJtD,SAAS2B,EAAT,GAAgD,IAAvBC,EAAsB,EAAtBA,SAAU5B,EAAY,EAAZA,SAChD,OACE,kBAAC6B,EAAA,EAAD,CAAQ7B,SAAUA,GAChB,yBAAKF,UAAU,cACb,kBAACC,EAAD,CAASC,SAAUA,IACnB,yBACE8B,GAAG,eACHhC,UAAU,2DAET8B,EACD,kBAACL,EAAD,CAAYvB,SAAUA,S,kLCjBnB+B,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDpD,EAEC,EAFDA,WACGqD,EACF,8BACD,OAAO,cAACH,EAAD,iBAAeD,EAAiBI,EAAhC,CAAuCrD,WAAYA,EAAYsD,QAAQ,cAG5E,mBAAQ,CACN,GAAM,wBADR,yBAGA,sIACA,mBAAQ,CACN,GAAM,0BADR,0BAGA,wBACE,oBAAIC,WAAW,MAAf,wDACA,oBAAIA,WAAW,MAAf,8DAAmF,4BAAYA,WAAW,MAAvB,cAAnF,sBAAiK,oBAAIA,WAAW,MAC5K,oBAAIA,WAAW,MAAK,4BAAYA,WAAW,MAAvB,gCAApB,YAA4G,4BAAYA,WAAW,MAAvB,yCAC5G,oBAAIA,WAAW,MAAK,4BAAYA,WAAW,MAAvB,sCAApB,YAAkH,4BAAYA,WAAW,MAAvB,yCAClH,oBAAIA,WAAW,MAAK,4BAAYA,WAAW,MAAvB,4CAApB,YAAwH,4BAAYA,WAAW,MAAvB,wDAG9H,uBAAG,oBAAIA,WAAW,KAAI,wBAAQA,WAAW,MAAnB,iGAAtB,iBAA8K,4BAAYA,WAAW,KAAvB,4BAA9K,4CAA+R,4BAAYA,WAAW,KAAvB,8BAA/R,gCAAsY,4BAAYA,WAAW,KAAvB,4BAAtY,iBAA4d,4BAAYA,WAAW,KAAvB,4DAA5d,WAA4kB,4BAAYA,WAAW,KAAvB,8BAA5kB,uBAA0qB,4BAAYA,WAAW,KAAvB,qCAA1qB,KACA,+HACA,mBAAQ,CACN,GAAM,mBADR,mBAGA,oEAAiD,4BAAYA,WAAW,KAAvB,kBAAjD,sLAKJH,EAAWI,gBAAiB,G","file":"component---src-pages-platform-architecture-static-site-urls-mdx-bfd15382d73b70cbc410.js","sourcesContent":["import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nfunction ComponentList() {\n  return (\n    <StaticQuery\n      query={graphql`\n        query ComponentListQuery {\n          components: allSitePage(\n            filter: { context: { source: { eq: \"component\" } } }\n            sort: { fields: [context___name], order: ASC }\n          ) {\n            edges {\n              node {\n                path\n                context {\n                  source\n                  name\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <SidebarItems\n          items={data.components.edges.map(comp => ({\n            href: comp.node.path,\n            name: comp.node.context.name,\n          }))}\n        />\n      )}\n    />\n  );\n}\n\nfunction SidebarItem({ item }) {\n  if (item.href) {\n    return (\n      <li key={item.name}>\n        <Link to={item.href}>{item.name}</Link>\n      </li>\n    );\n  }\n  return <li key={item.name}>{item.name} (future)</li>;\n}\nexport default function SidebarItems({ items, isSublist = false }) {\n  if (!items.length) {\n    return null;\n  }\n\n  return (\n    <ul className=\"site-c-sidenav-list\">\n      {items.map(item => {\n        if (item.items) {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <SidebarItems isSublist items={item.items} />\n            </li>\n          );\n        }\n        if (item.query === 'componentList') {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <ComponentList />\n            </li>\n          );\n        }\n        return <SidebarItem item={item} key={item.name} />;\n      })}\n    </ul>\n  );\n}\n","import React from 'react';\nimport SidebarItems from './SidebarItems';\nimport sidebarData from '../../sidebar';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nexport default function Sidebar({ location }) {\n  const sidebarSection = sidebarData.sections.find(section =>\n    location.pathname.includes(section.href),\n  );\n\n  if (!sidebarSection) {\n    return null;\n  }\n\n  return (\n    <div className=\"vads-l-col--4 site-c-content__nav\">\n      <div className=\"site-c-sidenav\">\n        <SidebarItems items={sidebarSection.items} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\n\n/**\n * Finds a specific component inside a list\n *\n * @param {string} componentToMatch\n */\n\nfunction ComponentList({ componentToMatch }) {\n  return (\n    <StaticQuery\n      query={graphql`\n        query ComponentsQuery {\n          components: allSitePage(\n            filter: { context: { source: { eq: \"component\" } } }\n            sort: { fields: [context___name], order: ASC }\n          ) {\n            edges {\n              node {\n                path\n                context {\n                  source\n                  name\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={(data) =>\n        data.components.edges.map((comp) => {\n          return componentToMatch === comp.node.context.name.toLowerCase() ? (\n            <ComponentItem\n              item={{\n                name: comp.node.context.name,\n              }}\n            />\n          ) : (\n            ''\n          );\n        })\n      }\n    />\n  );\n}\n\nfunction ComponentItem({ item }) {\n  const base = `https://github.com/department-of-veterans-affairs/veteran-facing-services-tools/blob/master/packages`;\n  const formationReact = '/formation-react/src/components/';\n  const link = base + formationReact + item.name + '/' + item.name + '.mdx';\n  return <Link to={link}>Edit this page on GitHub</Link>;\n}\n\nexport default function Components({ pathname }) {\n  const splits = pathname.split('/');\n  return <ComponentList componentToMatch={splits[3]} />;\n}\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport sidebarData from '../../sidebar';\n\n/**\n * This function will return if the name of the file is index.mdx\n * instead of the default value\n * @param {object} location - Used to obtain the page location\n * @returns {string} - Return either index or empty if not needed\n */\n\nconst getIndexMdx = (location) => {\n  const sidebarSection = sidebarData.sections.find((section) =>\n    location.pathname.includes(section.href),\n  );\n\n  // Test first Level of the sidebar object\n  const level1 = sidebarData.sections.find(\n    (section) => section.href === location.pathname,\n  );\n\n  if (level1?.indexmdx) {\n    return '/index';\n  }\n\n  // Test second Level of the sidebar object\n  if (sidebarSection?.items) {\n    const level2Sections = sidebarSection.items.map((item) => {\n      return Array.isArray(item.items)\n        ? item.items.find((lvl2Item) => lvl2Item.href === location.pathname)\n        : null;\n    });\n\n    const level2 = level2Sections.map((section) => {\n      if (section?.href && section.href === location.pathname) {\n        return section?.indexmdx ? true : false;\n      }\n    });\n\n    if (level2.find((indexmdx) => indexmdx)) {\n      return '/index';\n    }\n  }\n\n  return '';\n};\n\nexport default function Documentation({ location }) {\n  const base = `https://github.com/department-of-veterans-affairs/veteran-facing-services-tools/blob/master/packages`;\n  const documentation = '/documentation/src/pages';\n  const link =\n    base + documentation + location.pathname + getIndexMdx(location) + '.mdx';\n\n  return <Link to={link}>Edit this page on GitHub</Link>;\n}\n","import React from 'react';\nimport Components from './Components';\nimport Documentation from './Documentation';\n\nconst getGithubHref = (location) => {\n  if (location.pathname.includes('components')) {\n    return <Components pathname={location.pathname} />;\n  } else {\n    return <Documentation location={location} />;\n  }\n};\n\nexport default function PageFooter({ location }) {\n  return (\n    <div>\n      <p>\n        <br />\n        <i class=\"fa fa-edit\" aria-hidden=\"true\"></i> {getGithubHref(location)}\n      </p>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Layout from './Layout';\nimport Sidebar from '../components/sidebar/Sidebar';\nimport PageFooter from '../components/pageFooter/PageFooter';\n\n/**\n * Layout\n *\n * @class Layout\n * @extends {React.Component}\n */\nexport default function SidebarLayout({ children, location }) {\n  return (\n    <Layout location={location}>\n      <div className=\"vads-l-row\">\n        <Sidebar location={location} />\n        <div\n          id=\"main-content\"\n          className=\"vads-l-col--8 site-c-content__content docSearch-content\"\n        >\n          {children}\n          <PageFooter location={location} />\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nSidebarLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/jenkins/workspace/ran-facing-services-tools_master/packages/documentation/src/layouts/SidebarLayout.jsx\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"how-are-urls-created\"\n    }}>{`How Are URLs Created?`}</h1>\n    <p>{`Understanding how content URLs are generated by Metalsmith helps prevent build errors. Here's how it works.`}</p>\n    <h2 {...{\n      \"id\": \"pages-in-vagov-content\"\n    }}>{`Pages in vagov-content`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Document paths are based on the Markdown file paths.`}</li>\n      <li parentName=\"ul\">{`Each Markdown file generates a corresponding directory and `}<inlineCode parentName=\"li\">{`index.html`}</inlineCode>{` file. For example:`}<ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`_education/tools-programs.md`}</inlineCode>{` `}{`→`}{` `}<inlineCode parentName=\"li\">{`/education/tools-programs/index.html`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`_education/tools-programs/index.md`}</inlineCode>{` `}{`→`}{` `}<inlineCode parentName=\"li\">{`/education/tools-programs/index.html`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`_education/work-learn/non-traditional.md`}</inlineCode>{` `}{`→`}{` `}<inlineCode parentName=\"li\">{`_education/work-learn/non-traditional/index.html`}</inlineCode></li>\n        </ul></li>\n    </ul>\n    <p><em parentName=\"p\"><strong parentName=\"em\">{`Make sure that every collection sub-directory also has a Markdown file that shares its name.`}</strong></em>{` Take the the `}<inlineCode parentName=\"p\">{`_employment/job-seekers/`}</inlineCode>{` directory as an example. It also has an `}<inlineCode parentName=\"p\">{`_employment/job-seekers.md`}</inlineCode>{` file. Each Markdown file in `}<inlineCode parentName=\"p\">{`_employment/job-seekers/`}</inlineCode>{` compiles to  `}<inlineCode parentName=\"p\">{`employment/jobs-seekers/name_of_markdown_file/index.html`}</inlineCode>{`, while `}<inlineCode parentName=\"p\">{`_employment/job-seekers.md`}</inlineCode>{` itself compiles to `}<inlineCode parentName=\"p\">{`employment/job-seekers/index.html`}</inlineCode>{`.`}</p>\n    <p>{`Failing to take the above step means that you could generate breadcrumbs to pages that do not exist.`}</p>\n    <h2 {...{\n      \"id\": \"pages-in-drupal\"\n    }}>{`Pages in Drupal`}</h2>\n    <p>{`In Drupal, URLs are created based off the `}<inlineCode parentName=\"p\">{`entityUrl.path`}</inlineCode>{` property included on each node. Similar to vagov-content pages, an index.html page is appended to that path, so that urls can reference just the path without an html extension.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}