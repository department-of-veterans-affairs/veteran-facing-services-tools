{"version":3,"sources":["webpack:///./src/components/sidebar/SidebarItems.jsx","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./src/layouts/SidebarLayout.jsx","webpack:///./src/pages/platform/architecture/static-site/templates.mdx"],"names":["ComponentList","query","render","data","SidebarItems","items","components","edges","map","comp","href","node","path","name","context","SidebarItem","item","key","to","isSublist","length","className","Sidebar","location","sidebarSection","sidebarData","sections","find","section","pathname","includes","SidebarLayout","children","Layout","id","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-platform-architecture-static-site-templates-mdx-97071f3af86bd63533d9.js","sourcesContent":["import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nfunction ComponentList() {\n  return (\n    <StaticQuery\n      query={graphql`\n        query ComponentListQuery {\n          components: allSitePage(\n            filter: { context: { source: { eq: \"component\" } } }\n            sort: { fields: [context___name], order: ASC }\n          ) {\n            edges {\n              node {\n                path\n                context {\n                  source\n                  name\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <SidebarItems\n          items={data.components.edges.map(comp => ({\n            href: comp.node.path,\n            name: comp.node.context.name,\n          }))}\n        />\n      )}\n    />\n  );\n}\n\nfunction SidebarItem({ item }) {\n  if (item.href) {\n    return (\n      <li key={item.name}>\n        <Link to={item.href}>{item.name}</Link>\n      </li>\n    );\n  }\n  return <li key={item.name}>{item.name} (future)</li>;\n}\nexport default function SidebarItems({ items, isSublist = false }) {\n  if (!items.length) {\n    return null;\n  }\n\n  return (\n    <ul className=\"site-c-sidenav-list\">\n      {items.map(item => {\n        if (item.items) {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <SidebarItems isSublist items={item.items} />\n            </li>\n          );\n        }\n        if (item.query === 'componentList') {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <ComponentList />\n            </li>\n          );\n        }\n        return <SidebarItem item={item} key={item.name} />;\n      })}\n    </ul>\n  );\n}\n","import React from 'react';\nimport SidebarItems from './SidebarItems';\nimport sidebarData from '../../sidebar';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nexport default function Sidebar({ location }) {\n  const sidebarSection = sidebarData.sections.find(section =>\n    location.pathname.includes(section.href),\n  );\n\n  if (!sidebarSection) {\n    return null;\n  }\n\n  return (\n    <div className=\"vads-l-col--4 site-c-content__nav\">\n      <div className=\"site-c-sidenav\">\n        <SidebarItems items={sidebarSection.items} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Layout from './Layout';\nimport Sidebar from '../components/sidebar/Sidebar';\n\n/**\n * Layout\n *\n * @class Layout\n * @extends {React.Component}\n */\nexport default function SidebarLayout({ children, location }) {\n  return (\n    <Layout location={location}>\n      <div className=\"vads-l-row\">\n        <Sidebar location={location} />\n        <div\n          id=\"main-content\"\n          className=\"vads-l-col--8 site-c-content__content docSearch-content\"\n        >\n          {children}\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nSidebarLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/jenkins/workspace/ran-facing-services-tools_master/packages/documentation/src/layouts/SidebarLayout.jsx\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"how-templates-work-for-markdown-pages\"\n    }}>{`How templates work for Markdown pages`}</h1>\n    <p>{`Templates use `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/leizongmin/tinyliquid/\"\n      }}>{`tinyliquid`}</a>{`, a JavaScript implementation of `}<a parentName=\"p\" {...{\n        \"href\": \"https://shopify.github.io/liquid/\"\n      }}>{`Liquid`}</a>{`.`}</p>\n    <p>{`There are three \"wrapper\" templates currently in use for Markdown content. They're all in `}<inlineCode parentName=\"p\">{`src/site/layouts`}</inlineCode>{`.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`page-react`}</inlineCode>{`: Houses our React pages.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`page-react-sidebar`}</inlineCode>{`: Houses our React pages that have a sidebar.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`page-breadcrumbs`}</inlineCode>{`: Houses our non-React content pages.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`page-playbook`}</inlineCode>{`: Houses Playbook pages.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`home`}</inlineCode>{`: Template for the home page`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`home`}</inlineCode>{`: Template for the home page without search`}</li>\n    </ul>\n    <p><inlineCode parentName=\"p\">{`page-breadcrumbs`}</inlineCode>{` is a container template that loads layouts for the content between the header and the footer. Those are in `}<inlineCode parentName=\"p\">{`content/layouts/includes/`}</inlineCode>{`.`}</p>\n    <p>{`Templates are loaded based on the value of the `}<inlineCode parentName=\"p\">{`template`}</inlineCode>{` property in the `}<a parentName=\"p\" {...{\n        \"href\": \"http://yaml.org/\"\n      }}>{`YAML`}</a>{`/front-page data of each content file -- the text between the `}<inlineCode parentName=\"p\">{`---`}</inlineCode>{`. Content files can be found in `}<inlineCode parentName=\"p\">{`content/pages/`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"adding-a-new-template\"\n    }}>{`Adding a new template`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Add a new HTML + Liquid template file to `}<inlineCode parentName=\"li\">{`src/site/includes`}</inlineCode></li>\n      <li parentName=\"ul\">{`Update `}<inlineCode parentName=\"li\">{`page-breadcrumbs`}</inlineCode>{` with a new case for the new layout.`}</li>\n      <li parentName=\"ul\">{`Update the `}<inlineCode parentName=\"li\">{`template`}</inlineCode>{` YAML property for whichever pages should load the new template.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"content-meta-data\"\n    }}>{`Content meta data`}</h2>\n    <p>{`To date, we've used `}<a parentName=\"p\" {...{\n        \"href\": \"http://yaml.org/\"\n      }}>{`YAML`}</a>{` syntax in Markdown files as a way to structure data such as related links (majorlinks) and navigation cards.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}