{"version":3,"sources":["webpack:///./src/pages/platform/architecture/static-site/collections.mdx","webpack:///./src/components/sidebar/SidebarItems.jsx","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./src/components/pageFooter/Components.jsx","webpack:///./src/components/pageFooter/Documentation.jsx","webpack:///./src/components/pageFooter/PageFooter.jsx","webpack:///./src/layouts/SidebarLayout.jsx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","ComponentList","query","render","data","SidebarItems","items","edges","map","comp","href","node","path","name","context","SidebarItem","item","key","to","isSublist","length","className","Sidebar","location","sidebarSection","sidebarData","sections","find","section","pathname","includes","componentToMatch","toLowerCase","ComponentItem","link","base","Components","splits","split","getPathName","pathName","replace","charAt","substring","Documentation","level1","indexmdx","Array","isArray","lvl2Item","getIndexMdx","PageFooter","class","aria-hidden","getGithubHref","SidebarLayout","children","Layout","id"],"mappings":"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","file":"component---src-pages-platform-architecture-static-site-collections-mdx-786e45fca193716d5e90.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/jenkins/workspace/ran-facing-services-tools_master/packages/documentation/src/layouts/SidebarLayout.jsx\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"adding-a-collection-of-related-links-for-markdown-pages\"\n    }}>{`Adding a collection of related links for Markdown pages`}</h1>\n    <p>{`Our current publishing system, Metalsmith, provides a way to group related content using what it calls `}<em parentName=\"p\">{`collections`}</em>{`. Using collections requires the `}<inlineCode parentName=\"p\">{`metalsmith-collections`}</inlineCode>{` plugin (`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/segmentio/metalsmith-collections\"\n      }}>{`documentation`}</a>{`).`}</p>\n    <p>{`Content grouped within a collection is displayed in the sidebar navigation, and the next/previous links. Next and previous links are set based on the sorting order (`}<inlineCode parentName=\"p\">{`sortBy`}</inlineCode>{` property of the collection; see below)`}</p>\n    <p>{`Viewing `}<inlineCode parentName=\"p\">{`src/site/components/navigation-sidebar.html`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`src/site/components/navigation-next-previous.html`}</inlineCode>{` `}<em parentName=\"p\">{`may`}</em>{` clarify some of what's in this document.`}</p>\n    <h2 {...{\n      \"id\": \"add-a-new-collection\"\n    }}>{`Add a new collection`}</h2>\n    <p><em parentName=\"p\"><strong parentName=\"em\">{`NOTE`}</strong>{`: Content team, you may wish to file a request with the DevOps team for this task.`}</em></p>\n    <p>{`To create a new collection, add a new collection object to `}<inlineCode parentName=\"p\">{`vets-website/script/build.js`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`  smith.use(collections({\n    collectionName: {\n      pattern: 'path/to/the/files/*.md',\n      sortBy: 'order',\n      metadata: {\n        name: 'Title for collection 1'\n      }\n    },\n    secondCollectionName: {\n      pattern: 'path/to/the/files/*.md',\n      sortBy: 'order',\n      metadata: {\n        name: 'Title for collection two'\n      }\n    }\n  }));\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"what-each-field-means\"\n    }}>{`What each field means:`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`collectionName`}</inlineCode>{`: should be a camel-cased or snake cased string that summarizes the name of the related documents.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`pattern`}</inlineCode>{`: should be a directory a relative to the site root (without a leading slash), and end with `}<inlineCode parentName=\"p\">{`*.md`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`*.html`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`*`}</inlineCode>{` is a `}<em parentName=\"p\">{`wildcard`}</em>{` character that will match every file with an `}<inlineCode parentName=\"p\">{`.md`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`*.html`}</inlineCode>{` extension.)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`sortBy`}</inlineCode>{`: is any current YAML property used in the front matter metadata (front matter data is the stuff between the `}<inlineCode parentName=\"p\">{`---`}</inlineCode>{` at the beginning of each content file). This should be:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`order`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`title`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`display_title`}</inlineCode></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`metadata`}</inlineCode>{`: must be a JavaScript object that contains a `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` property. This field is optional. You may add additional properties as here.`}</p>\n      </li>\n    </ul>\n    <h3 {...{\n      \"id\": \"adding-files-to-a-collection-even-when-it-is-not-in-the-collection-path\"\n    }}>{`Adding files to a collection even when it is not in the collection path`}</h3>\n    <p>{`Collections can also be defined or augmented by adding a `}<inlineCode parentName=\"p\">{`collection`}</inlineCode>{` property to front matter fields. For example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`---\nlayout: page-breadcrumbs.html\ntitle: Agent Orange\nplainlanguage: 10-21-16 certified in compliance with the Plain Writing Act\ntemplate: detail-page\ncollection: disabilityExposureHazMat\n---\n`}</code></pre>\n    <p>{`In general you should:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Use a collection objects to configure collections.`}</strong>{` Items within a collection directory will be added to the collection automatically`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Add a collection property to include an index or other file`}</strong>{` in the collection. For example, `}<inlineCode parentName=\"li\">{`exposure-to-hazardous-materials/agent-orange.md`}</inlineCode>{` is also an index page for several Agent Orange-related disability pages and should have a `}<inlineCode parentName=\"li\">{`disabilityExposureHazMat`}</inlineCode>{` property.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`NOTE:`}</strong>{` Adding a `}<inlineCode parentName=\"p\">{`collection`}</inlineCode>{` property in YAML will not override a path-based collection value. You'll actually need to move the file.`}</p>\n    <h2 {...{\n      \"id\": \"ordering-pages-within-a-collection\"\n    }}>{`Ordering pages within a collection`}</h2>\n    <p>{`When defining a collection, you may choose to sort pages by date, or by title. In many cases, however, the desired page order may not use either of those fields.`}</p>\n    <p>{`To control the order of display within a collection, add an `}<inlineCode parentName=\"p\">{`order`}</inlineCode>{` property to the front matter of each page.`}</p>\n    <p>{`The value of `}<inlineCode parentName=\"p\">{`order`}</inlineCode>{` should be a number. Pages will be ordered in ascending order.`}</p>\n    <h2 {...{\n      \"id\": \"adding-a-child-collection\"\n    }}>{`Adding a child collection`}</h2>\n    <p>{`Collections do not have a hierarchy by default. Create one by adding a `}<inlineCode parentName=\"p\">{`children`}</inlineCode>{` property to the parent page or index page of a child collection.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`---\nlayout: page-breadcrumbs.html\ntitle: Agent Orange\nplainlanguage: 10-21-16 certified in compliance with the Plain Writing Act\ntemplate: detail-page\ncollection: disabilityExposureHazMat\nchildren: disabilityAgentOrange\norder: 1\n---\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`children`}</inlineCode>{` should be the identifier for the child collection.`}</p>\n    <h2 {...{\n      \"id\": \"current-collections-and-hierarchy\"\n    }}>{`Current collections and hierarchy`}</h2>\n    <p><em parentName=\"p\">{`See vets-website/script/build.js`}</em>{`.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Label`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Path`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Child collection(s)`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`disabilityExposureHazMat`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`disability-benefits/conditions/exposure-to-hazardous-materials/*.md`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`disabilityAgentOrange`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`disabilityAgentOrange`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`disability-benefits/conditions/exposure-to-hazardous-materials/agent-orange/*.md`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`–`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`education`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`education/*.md`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`educationGIBill`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`educationGIBill`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`education/gi-bill/*.md`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`–`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nfunction ComponentList() {\n  return (\n    <StaticQuery\n      query={graphql`\n        query ComponentListQuery {\n          components: allSitePage(\n            filter: { context: { source: { eq: \"component\" } } }\n            sort: { fields: [context___name], order: ASC }\n          ) {\n            edges {\n              node {\n                path\n                context {\n                  source\n                  name\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <SidebarItems\n          items={data.components.edges.map(comp => ({\n            href: comp.node.path,\n            name: comp.node.context.name,\n          }))}\n        />\n      )}\n    />\n  );\n}\n\nfunction SidebarItem({ item }) {\n  if (item.href) {\n    return (\n      <li key={item.name}>\n        <Link to={item.href}>{item.name}</Link>\n      </li>\n    );\n  }\n  return <li key={item.name}>{item.name} (future)</li>;\n}\nexport default function SidebarItems({ items, isSublist = false }) {\n  if (!items.length) {\n    return null;\n  }\n\n  return (\n    <ul className=\"site-c-sidenav-list\">\n      {items.map(item => {\n        if (item.items) {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <SidebarItems isSublist items={item.items} />\n            </li>\n          );\n        }\n        if (item.query === 'componentList') {\n          return (\n            <li key={item.name}>\n              {isSublist && <SidebarItem item={item} />}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <ComponentList />\n            </li>\n          );\n        }\n        return <SidebarItem item={item} key={item.name} />;\n      })}\n    </ul>\n  );\n}\n","import React from 'react';\nimport SidebarItems from './SidebarItems';\nimport sidebarData from '../../sidebar';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nexport default function Sidebar({ location }) {\n  const sidebarSection = sidebarData.sections.find(section =>\n    location.pathname.includes(section.href),\n  );\n\n  if (!sidebarSection) {\n    return null;\n  }\n\n  return (\n    <div className=\"vads-l-col--4 site-c-content__nav\">\n      <div className=\"site-c-sidenav\">\n        <SidebarItems items={sidebarSection.items} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\n\n/**\n * Finds a specific component inside a list\n *\n * @param {string} componentToMatch\n */\n\nfunction ComponentList({ componentToMatch }) {\n  return (\n    <StaticQuery\n      query={graphql`\n        query ComponentsQuery {\n          components: allSitePage(\n            filter: { context: { source: { eq: \"component\" } } }\n            sort: { fields: [context___name], order: ASC }\n          ) {\n            edges {\n              node {\n                path\n                context {\n                  source\n                  name\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={(data) =>\n        data.components.edges.map((comp) => {\n          return componentToMatch === comp.node.context.name.toLowerCase() ? (\n            <ComponentItem\n              item={{\n                name: comp.node.context.name,\n              }}\n            />\n          ) : (\n            ''\n          );\n        })\n      }\n    />\n  );\n}\n\nfunction ComponentItem({ item }) {\n  const base = `https://github.com/department-of-veterans-affairs/veteran-facing-services-tools/blob/master/packages`;\n  const formationReact = '/formation-react/src/components/';\n  const link = base + formationReact + item.name + '/' + item.name + '.mdx';\n  return <Link to={link}>Edit this page on GitHub</Link>;\n}\n\nexport default function Components({ pathname }) {\n  const splits = pathname.split('/');\n  return <ComponentList componentToMatch={splits[3]} />;\n}\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport sidebarData from '../../sidebar';\n\n/**\n * This function will return if the name of the file is index.mdx\n * instead of the default value\n * @param {object} location - Used to obtain the page location\n * @returns {string} - Return either index or empty if not needed\n */\n\nconst getIndexMdx = (location) => {\n  const pathName = getPathName(location);\n\n  const sidebarSection = sidebarData.sections.find((section) =>\n    pathName.includes(section.href),\n  );\n\n  // Test first Level of the sidebar object\n  const level1 = sidebarData.sections.find(\n    (section) => section.href === pathName,\n  );\n\n  if (level1?.indexmdx) {\n    return '/index';\n  }\n\n  // Test second Level of the sidebar object\n  if (sidebarSection?.items) {\n    const level2Sections = sidebarSection.items.map((item) => {\n      return Array.isArray(item.items)\n        ? item.items.find((lvl2Item) => lvl2Item.href === pathName)\n        : null;\n    });\n\n    const level2 = level2Sections.map((section) => {\n      if (section?.href && section.href === pathName) {\n        return section?.indexmdx ? true : false;\n      }\n    });\n\n    if (level2.find((indexmdx) => indexmdx)) {\n      return '/index';\n    }\n  }\n\n  return '';\n};\n\nconst getPathName = (location) => {\n  // Remove extra path in production environment\n  let pathName = location.pathname.replace(\n    '/veteran-facing-services-tools',\n    '',\n  );\n\n  // Check for additional '/' at the end when refreshing the browser\n  if (pathName.length > 0 && pathName.charAt(pathName.length - 1) === '/') {\n    pathName = pathName.substring(0, pathName.length - 1);\n  }\n\n  return pathName;\n};\n\nexport default function Documentation({ location }) {\n  const base = `https://github.com/department-of-veterans-affairs/veteran-facing-services-tools/blob/master/packages`;\n  const documentation = '/documentation/src/pages';\n  const link =\n    base +\n    documentation +\n    getPathName(location) +\n    getIndexMdx(location) +\n    '.mdx';\n\n  return <Link to={link}>Edit this page on GitHub</Link>;\n}\n","import React from 'react';\nimport Components from './Components';\nimport Documentation from './Documentation';\n\nconst getGithubHref = (location) => {\n  if (location.pathname.includes('components')) {\n    const pathName = location.pathname.replace(\n      '/veteran-facing-services-tools',\n      '',\n    );\n    return <Components pathname={pathName} />;\n  } else {\n    return <Documentation location={location} />;\n  }\n};\n\nexport default function PageFooter({ location }) {\n  return (\n    <div>\n      <p>\n        <br />\n        <i class=\"fa fa-edit\" aria-hidden=\"true\"></i> {getGithubHref(location)}\n      </p>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Layout from './Layout';\nimport Sidebar from '../components/sidebar/Sidebar';\nimport PageFooter from '../components/pageFooter/PageFooter';\n\n/**\n * Layout\n *\n * @class Layout\n * @extends {React.Component}\n */\nexport default function SidebarLayout({ children, location }) {\n  return (\n    <Layout location={location}>\n      <div className=\"vads-l-row\">\n        <Sidebar location={location} />\n        <div\n          id=\"main-content\"\n          className=\"vads-l-col--8 site-c-content__content docSearch-content\"\n        >\n          {children}\n          <PageFooter location={location} />\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nSidebarLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n"],"sourceRoot":""}