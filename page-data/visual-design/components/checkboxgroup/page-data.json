{"componentChunkName":"component---src-templates-formation-react-template-jsx","path":"/visual-design/components/checkboxgroup/","result":{"data":{"mdx":{"id":"031492ef-c145-5f9b-ab3a-360340266078","body":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"CheckboxGroup\",\n  \"name\": \"CheckboxGroup\",\n  \"const\": \"checkbox group, component\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var _mdx;\n\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", {\n    \"id\": \"code\"\n  }, \"Code:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"import CheckboxGroup from '@department-of-veterans-affairs/formation-react/CheckboxGroup'\\n\\n<CheckboxGroup\\n  label='Checkbox Group'\\n  onValueChange={(value) => value}\\n  id='default'\\n  errorMessage='This is an error message'\\n  label='Checkboxes'\\n  required={true}\\n  options={[\\n    {\\n      label: 'Checkbox label',\\n      value: 'value',\\n      content: 'a string',\\n      additional: 'another thing',\\n    },\\n    {\\n      label: 'Checkbox label',\\n      value: 'value',\\n      content: 'some more content',\\n      additional: 'and another thing',\\n    }\\n  ]}\\n  values={{ key: 'value' }}\\n/>\\n\")), mdx(\"h3\", {\n    \"id\": \"rendered-component\"\n  }, \"Rendered Component\"), mdx(\"div\", {\n    className: \"site-c-reactcomp__rendered\"\n  }, mdx(CheckboxGroup, (_mdx = {\n    label: \"Checkbox Group\",\n    onValueChange: function onValueChange(value) {\n      return value;\n    },\n    id: \"default\",\n    errorMessage: \"This is an error message\"\n  }, _defineProperty(_mdx, \"label\", \"Checkboxes\"), _defineProperty(_mdx, \"required\", true), _defineProperty(_mdx, \"options\", [{\n    label: 'Checkbox label',\n    value: 'value',\n    content: 'a string',\n    additional: 'another thing'\n  }, {\n    label: 'Checkbox label',\n    value: 'value',\n    content: 'some more content',\n    additional: 'and another thing'\n  }]), _defineProperty(_mdx, \"values\", {\n    key: 'value'\n  }), _defineProperty(_mdx, \"mdxType\", \"CheckboxGroup\"), _mdx))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#code","title":"Code:"},{"url":"#rendered-component","title":"Rendered Component"}]}},"componentMetadata":{"id":"6009a207-0897-5075-a443-d8b7c2877c03","displayName":"CheckboxGroup","docblock":"A checkbox button group with a label.\n\nValidation has the following props.\n`additionalFieldsetClass` - String for any additional fieldset classes.\n`additionalLegendClass` - String for any additional legend classes.\n`label` - String for the group field label.\n`name` - String for the name attribute.\n`tabIndex` - Number for keyboard tab order.\n`options` - Array of options to populate group.\n`required` - is this field required.\n`values` - object. Values of the checkbox field.\n`onValueChange` - a function with this prototype: (newValue)","doclets":[],"childrenComponentProp":[{"name":"additionalFieldsetClass","docblock":"Any additional fieldset classes.","required":false,"parentType":{"name":"string"},"type":{"value":null},"defaultValue":null},{"name":"additionalLegendClass","docblock":"Any additional legend classes.","required":false,"parentType":{"name":"string"},"type":{"value":null},"defaultValue":null},{"name":"errorMessage","docblock":"Error message.","required":false,"parentType":{"name":"string"},"type":{"value":null},"defaultValue":null},{"name":"label","docblock":"group field label.","required":true,"parentType":{"name":"union"},"type":{"value":[{"name":"string"},{"name":"element"}]},"defaultValue":null},{"name":"name","docblock":"name attribute.","required":false,"parentType":{"name":"string"},"type":{"value":null},"defaultValue":null},{"name":"id","docblock":"ID.","required":false,"parentType":{"name":"string"},"type":{"value":null},"defaultValue":null},{"name":"options","docblock":"Array of options to populate group.","required":true,"parentType":{"name":"arrayOf"},"type":{"value":{"name":"union","value":[{"name":"string"},{"name":"shape","value":{"label":{"name":"union","value":[{"name":"string"},{"name":"element"}],"required":false},"value":{"name":"union","value":[{"name":"string"},{"name":"bool"}],"required":false},"content":{"name":"union","value":[{"name":"string"},{"name":"element"}],"required":false},"additional":{"name":"union","value":[{"name":"string"},{"name":"element"}],"required":false}}}]}},"defaultValue":null},{"name":"values","docblock":"Values of the checkbox field.","required":true,"parentType":{"name":"object"},"type":{"value":null},"defaultValue":null},{"name":"onMouseDown","docblock":"On mouse down event handler.","required":false,"parentType":{"name":"func"},"type":{"value":null},"defaultValue":null},{"name":"onKeyDown","docblock":"On key down event handler.","required":false,"parentType":{"name":"func"},"type":{"value":null},"defaultValue":null},{"name":"onValueChange","docblock":"On value change event handler.","required":true,"parentType":{"name":"func"},"type":{"value":null},"defaultValue":null},{"name":"required","docblock":"Is this field required.","required":false,"parentType":{"name":"bool"},"type":{"value":null},"defaultValue":null}],"composes":null}},"pageContext":{"id":"031492ef-c145-5f9b-ab3a-360340266078","source":"formation-react","sourceUrl":"https://github.com/department-of-veterans-affairs/veteran-facing-services-tools/blob/master/packages/formation-react/src/components/CheckboxGroup/CheckboxGroup.mdx","frontmatter":{"name":"CheckboxGroup","tags":null,"title":"CheckboxGroup"},"name":"CheckboxGroup"}},"staticQueryHashes":["2744294623","3649515864","68798663"]}