{"componentChunkName":"component---src-templates-formation-react-template-jsx","path":"/visual-design/components/errorabledate/","result":{"data":{"mdx":{"id":"6484ad10-d2f1-5ffb-9942-5272fd792953","body":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar RenderedComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(RenderedComponent, _React$Component);\n\n  var _super = _createSuper(RenderedComponent);\n\n  function RenderedComponent() {\n    var _this;\n\n    _classCallCheck(this, RenderedComponent);\n\n    _this = _super.call(this);\n    _this.state = {\n      date: {\n        day: {\n          value: '14',\n          dirty: false\n        },\n        month: {\n          value: '4',\n          dirty: false\n        },\n        year: {\n          value: '1983',\n          dirty: false\n        }\n      }\n    };\n    return _this;\n  }\n\n  _createClass(RenderedComponent, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return mdx(\"div\", {\n        className: \"site-c-reactcomp__rendered\"\n      }, mdx(ErrorableDate, {\n        onValueChange: function onValueChange(date) {\n          return _this2.setState({\n            date: date\n          });\n        },\n        required: true,\n        label: \"Please tell us a date\",\n        name: \"Errorable Date\",\n        date: this.state.date,\n        requiredMessage: \"Please provide a response\",\n        invalidMessage: \"Please provide a valid date\",\n        mdxType: \"ErrorableDate\"\n      }));\n    }\n  }]);\n\n  return RenderedComponent;\n}(React.Component);\n\nvar _frontmatter = {\n  \"title\": \"ErrorableDate\",\n  \"name\": \"ErrorableDate\",\n  \"tags\": \"date, component\"\n};\nvar layoutProps = {\n  RenderedComponent: RenderedComponent,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", {\n    \"id\": \"code\"\n  }, \"Code:\"), mdx(\"h4\", {\n    \"id\": \"date-example\"\n  }, \"Date example\"), mdx(\"p\", null, \"The date prop Object should look this:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"this.state = {\\n  date: {\\n    day: {\\n      value: '14',\\n      dirty: false,\\n    },\\n    month: {\\n      value: '4',\\n      dirty: false,\\n    },\\n    year: {\\n      value: '1983',\\n      dirty: false,\\n    },\\n  }\\n}\\n\")), mdx(\"h4\", {\n    \"id\": \"example-code\"\n  }, \"Example Code\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"import ErrorableDate from '@department-of-veterans-affairs/formation-react/ErrorableDate'\\n\\n<ErrorableDate\\n  onValueChange={date => this.setState({ date })}\\n  required={true}\\n  label='Please tell us a date'\\n  name='Errorable Date'\\n  date={this.state.date}\\n  requiredMessage='Please provide a response'\\n  invalidMessage='Please provide a valid date'\\n/>;\\n\")), mdx(\"h3\", {\n    \"id\": \"rendered-component\"\n  }, \"Rendered Component\"), mdx(RenderedComponent, {\n    mdxType: \"RenderedComponent\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#code","title":"Code:","items":[{"url":"#date-example","title":"Date example"},{"url":"#example-code","title":"Example Code"}]},{"url":"#rendered-component","title":"Rendered Component"}]}},"componentMetadata":{"id":"9f90f8b1-b25c-5bc0-88c9-3c7b53e773fb","displayName":"ErrorableDate","docblock":"A date input field that accepts values for month and year","doclets":[],"childrenComponentProp":[{"name":"required","docblock":"Render marker indicating field is required.","required":false,"parentType":{"name":"bool"},"type":{"value":null},"defaultValue":null},{"name":"validation","docblock":"object or array. Result of custom validation. Should include a valid prop and a message prop","required":false,"parentType":{"name":"shape"},"type":{"value":{"valid":{"name":"bool","required":false},"message":{"name":"string","required":false}}},"defaultValue":null},{"name":"label","docblock":"Label for entire question.","required":false,"parentType":{"name":"string"},"type":{"value":null},"defaultValue":null},{"name":"name","docblock":"Used to create unique name attributes for each input.","required":true,"parentType":{"name":"string"},"type":{"value":null},"defaultValue":null},{"name":"date","docblock":"Date value. Should have month, day, and year props","required":true,"parentType":{"name":"shape"},"type":{"value":{"day":{"name":"shape","value":{"value":{"name":"string","required":false},"dirty":{"name":"bool","required":false}},"required":false},"month":{"name":"shape","value":{"value":{"name":"string","required":false},"dirty":{"name":"bool","required":false}},"required":false},"year":{"name":"shape","value":{"value":{"name":"string","required":false},"dirty":{"name":"bool","required":false}},"required":false}}},"defaultValue":null},{"name":"onValueChange","docblock":"a function with this prototype: (newValue)","required":true,"parentType":{"name":"func"},"type":{"value":null},"defaultValue":null},{"name":"requiredMessage","docblock":"","required":false,"parentType":{"name":"string"},"type":{"value":null},"defaultValue":{"value":"'Please provide a response'","computed":false}},{"name":"invalidMessage","docblock":"","required":false,"parentType":{"name":"string"},"type":{"value":null},"defaultValue":{"value":"'Please provide a valid date'","computed":false}}],"composes":null}},"pageContext":{"id":"6484ad10-d2f1-5ffb-9942-5272fd792953","source":"formation-react","sourceUrl":"https://github.com/department-of-veterans-affairs/veteran-facing-services-tools/blob/master/packages/formation-react/src/components/ErrorableDate/ErrorableDate.mdx","frontmatter":{"name":"ErrorableDate","tags":"date, component","title":"ErrorableDate"},"name":"ErrorableDate"}},"staticQueryHashes":["2744294623","3649515864","68798663"]}