{"componentChunkName":"component---src-templates-formation-react-template-jsx","path":"/visual-design/components/radiobuttons/","result":{"data":{"mdx":{"id":"ad2e5415-f48b-5a31-974b-b5e85b02b289","body":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar RenderedComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(RenderedComponent, _React$Component);\n\n  var _super = _createSuper(RenderedComponent);\n\n  function RenderedComponent() {\n    var _this;\n\n    _classCallCheck(this, RenderedComponent);\n\n    _this = _super.call(this);\n    _this.state = {\n      value: {\n        value: 'option 2',\n        dirty: false\n      }\n    };\n    return _this;\n  }\n\n  _createClass(RenderedComponent, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return mdx(\"div\", {\n        className: \"site-c-reactcomp__rendered\"\n      }, mdx(RadioButtons, {\n        onValueChange: function onValueChange(value) {\n          return _this2.setState({\n            value: value\n          });\n        },\n        id: \"defaultId\",\n        name: \"defaultName\",\n        errorMessage: \"Radio Button errorMessage\",\n        label: \"Radio Buttons\",\n        options: ['option 1', 'option 2', {\n          label: 'option 3 label',\n          value: 'expanding option 3',\n          additional: 'expanded option 3'\n        }],\n        value: this.state.value,\n        required: false,\n        toolTipText: \"this triggers a tooltip\",\n        mdxType: \"RadioButtons\"\n      }));\n    }\n  }]);\n\n  return RenderedComponent;\n}(React.Component);\n\nvar _frontmatter = {\n  \"title\": \"RadioButtons\",\n  \"name\": \"RadioButtons\",\n  \"tags\": \"radio buttons, component\"\n};\nvar layoutProps = {\n  RenderedComponent: RenderedComponent,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", {\n    \"id\": \"code\"\n  }, \"Code:\"), mdx(\"h4\", {\n    \"id\": \"example-state\"\n  }, \"Example State\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"state = {\\n  value: {\\n    value: 'option 2',\\n    dirty: false\\n  }\\n}\\n\")), mdx(\"h4\", {\n    \"id\": \"code-sample\"\n  }, \"Code Sample\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"import RadioButtons from '@department-of-veterans-affairs/formation-react/RadioButtons'\\n\\n<RadioButtons\\n  onValueChange={(value)=> this.setState({ value })}\\n  id='defaultId'\\n  name='defaultName'\\n  errorMessage='Radio Button errorMessage'\\n  label='Radio Buttons'\\n  options={[\\n    'option 1',\\n    'option 2',\\n    {\\n      label: 'option 3 label',\\n      value: 'expanding option 3',\\n      additional: 'expanded option 3',\\n    },\\n  ]}\\n  value={this.state.value}\\n  required={false}\\n  toolTipText= 'this triggers a tooltip'\\n/>\\n\")), mdx(\"h3\", {\n    \"id\": \"rendered-component\"\n  }, \"Rendered Component\"), mdx(RenderedComponent, {\n    mdxType: \"RenderedComponent\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#code","title":"Code:","items":[{"url":"#example-state","title":"Example State"},{"url":"#code-sample","title":"Code Sample"}]},{"url":"#rendered-component","title":"Rendered Component"}]}},"componentMetadata":{"id":"e8bc3812-9df2-5743-97e4-8ae2ad40a9d5","displayName":"RadioButtons","docblock":"A radio button group with a label.\n\nValidation has the following props.\n\n`additionalFieldsetClass` - String for any additional fieldset classes.\n`additionalLegendClass` - String for any additional legend classes.\n`errorMessage' - String Error message for the radio button group\n`label` - String for the group field label.\n`name` - String for the name attribute.\n`tabIndex` - Number for keyboard tab order.\n`options` - Array of options to populate group.\n`required` - is this field required.\n`value` - string. Value of the select field.\n`onValueChange` - a function with this prototype: (newValue)","doclets":[],"childrenComponentProp":[{"name":"additionalFieldsetClass","docblock":"Additional fieldset classes","required":false,"parentType":{"name":"string"},"type":{"value":null},"defaultValue":null},{"name":"additionalLegendClass","docblock":"Additional legend classes","required":false,"parentType":{"name":"string"},"type":{"value":null},"defaultValue":null},{"name":"errorMessage","docblock":"Radio button group error message","required":false,"parentType":{"name":"string"},"type":{"value":null},"defaultValue":null},{"name":"label","docblock":"Radio button group field label","required":true,"parentType":{"name":"union"},"type":{"value":[{"name":"string"},{"name":"element"}]},"defaultValue":null},{"name":"name","docblock":"Name attribute","required":false,"parentType":{"name":"string"},"type":{"value":null},"defaultValue":null},{"name":"id","docblock":"","required":false,"parentType":{"name":"string"},"type":{"value":null},"defaultValue":null},{"name":"tabIndex","docblock":"Keyboard tab order for radio button group","required":false,"parentType":{"name":"number"},"type":{"value":null},"defaultValue":null},{"name":"onMouseDown","docblock":"Mouse Down handler","required":false,"parentType":{"name":"func"},"type":{"value":null},"defaultValue":null},{"name":"onKeyDown","docblock":"Key Down handler","required":false,"parentType":{"name":"func"},"type":{"value":null},"defaultValue":null},{"name":"options","docblock":"Array of options to populate group. Each item is a string or an object\nrepresenting an Expanding Group.\n\nIf the option is an object, it takes the following shape:\n\n`option.label` `<string|element>` - The text to display for the option\n\n`option.value` `<string|bool> - `The value of the option when selected\n\n`option.additional` `<string|element>` - Content to show conditionally beneath the option when selected","required":true,"parentType":{"name":"arrayOf"},"type":{"value":{"name":"union","value":[{"name":"string"},{"name":"shape","value":{"label":{"name":"union","value":[{"name":"string"},{"name":"element"}],"required":true},"value":{"name":"union","value":[{"name":"string"},{"name":"bool"}],"required":true},"additional":{"name":"union","value":[{"name":"string"},{"name":"element"}],"required":false}}}]}},"defaultValue":null},{"name":"value","docblock":"Value object for selected field\n\n`value`: string value that matches radio button value\n\n`dirty`: indicates if form is dirty; should be true after any user input","required":true,"parentType":{"name":"shape"},"type":{"value":{"value":{"name":"string","description":"Value of the select field.","required":false},"dirty":{"name":"bool","required":false}}},"defaultValue":null},{"name":"onValueChange","docblock":"Handler for the value change","required":true,"parentType":{"name":"func"},"type":{"value":null},"defaultValue":null},{"name":"required","docblock":"Toggles required field indicator","required":false,"parentType":{"name":"bool"},"type":{"value":null},"defaultValue":null}],"composes":null}},"pageContext":{"id":"ad2e5415-f48b-5a31-974b-b5e85b02b289","source":"formation-react","sourceUrl":"https://github.com/department-of-veterans-affairs/veteran-facing-services-tools/blob/master/packages/formation-react/src/components/RadioButtons/RadioButtons.mdx","frontmatter":{"name":"RadioButtons","tags":"radio buttons, component","title":"RadioButtons"},"name":"RadioButtons"}},"staticQueryHashes":["2744294623","3649515864","68798663"]}